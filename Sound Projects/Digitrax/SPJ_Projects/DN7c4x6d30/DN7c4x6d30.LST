MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001          LIST           P=18f242,C=132,T=ON,N=75,R=DEC,ST=OFF,W=1,X=ON ;changed 66 to 80 lines
                      00002       TITLE   "single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS"
                      00003 ;----------------------------------------------------------------------------
                      00004 ;PROJECT_ID:    00      <ENTER ID HERE and below>  3/3/23
                      00005 ;   <ROAD> <PRIME MOVER> <CLASS> <MODEL>        
                      00006 ;       <h>.SPJ Version 7.0
                      00007 ;BASE CODE:     DN7c4x6d30 -- Discrete Notching,  4 Channel, SDF Version 2.0
                      00008 ;MEMORY:        2 Mega bytes required
                      00009 ;SDF3.0:        Requires --      #INCLUDE       ../SFX3p0_snd_cmd.INC
                      00010 ;                                               and      #INCLUDE       ../SFX3p0_snd_macs.inc
                      00011 ;DMF:           Requires --     SW Ver 8 OR newer
                      00012 ;Author:  John McMasters
                      00013 ;       Custom sound scheme. MAR, 2023 NOT for resale.
                      00014 ;       (C) Copyright John McMasters 2023 used with permission.
                      00015 ;CHANNELS:      4
                      00016 ;SERIES:        6
                      00017 ;CV60=0=DIESEL5 SOUND SCHEME
                      00018 ;----------------------------------------------------------------------------
                      00019 ;    <ROAD> <CLASS> <MODEL> Diesel Electric
                      00020 ;Specifications:
                      00021 ; <CLASS SPECIFICATIONS HERE>
                      00022 ;
                      00023 ;---------------------------------------------------
                      00024 ;       INTRODUCTION
                      00025 ; ----------------------------------------------------------------------------
                      00026 ;  This is the Sound Definition Language (SDL) file for a project that can be
                      00027 ;  used for a 16bit premium 8mb sound decoder for a typical diesel locomotive. 
                      00028 ;
                      00029 ;       SLOTS / Channels:
                      00030 ;       1       Prime Mover     --      motor sounds vary: idle blip, load sensing
                      00031 ;       2       --Low Idle -- Optional, Idle run is trimmed, also optional ALCO stumble
                      00032 ;       3       Horn (trigger Auto Bell)        -- Selectable, playable, signal toots   -- Grade crossin
                      00033 ;       4       Auto Bell ON/OFF Trigger        -- bells may be chained to play for simulation of rope p
                      00034 ;       5       Coupler
                      00035 ;       6       Dynamic Brake Fan       -- Variable Dynamics --  will notch up to run 4 and play dynamic
                      00036 ;       7       Air Compressor
                      00037 ;       8       Radiator Fan    -- High and low alternate random
                      00038 ;       9       Automatic Brake Emergency
                      00039 ;       10      Automatic Brake
                      00040 ;       11      Independent Brake       -- Brake Interlock      -- will lock motor at standstill until r
                      00041 ;       12      Independent Brake Bail OFF
                      00042 ;       13      Sanding Valve
                      00043 ;       14      Hand Brake
                      00044 ;       15      Cab Door
                      00045 ;       16      Engine Compartment Doors
                      00046 ;       17      Air Dryer
                      00047 ;       18      Air Dryer ON
                      00048 ;       19      Reverser (pos 1)
                      00049 ;       20      Reverser Center 1
                      00050 ;       21      Isolation Switch 1
                      00051 ;       22      Alarm Bell
                      00052 ;       23      Flange Squeal
                      00053 ;       24      Short Air Let OFF 1
                      00054 ;       25      Traction Motor
                      00055 ;       26      Starting Delay
                      00056 ;       27      Manual Notching Logic Auto Low/High Idle
                      00057 ;       28      Smart Start Beep
                      00058 ;       29      Brake Set/Release Automatic 1
                      00059 ;       30      Alerter 1
                      00060 ;       31      
                      00061 ;       32 Shutters Open/Closed
                      00062 ;
                      00063 ;Steam  Slots / Channels
                      00064 ;       1       Chuffs (prime mover)
                      00065 ;       2       Chuffs (Rear Articulated) with secondary trigger
                      00066 ;       3       Whistles
                      00067 ;       4       Bells   -- bells may be chained to play for simulation of rope pulls
                      00068 ;       5       Coupler
                      00069 ;       6       Dynamo (single or dual)
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE  2
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS

LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00070 ;       7       Air Pump (cross compound)
                      00071 ;       8       Oil Burner Blower
                      00072 ;       9       Injector
                      00073 ;       10      Safety Valve
                      00074 ;       11      Independent Brake
                      00075 ;       12      Brake Set / Release
                      00076 ;       13      Ash Dump
                      00077 ;       14      
                      00078 ;       15      Coal Shoveling / Oil Refill
                      00079 ;       16      
                      00080 ;       17      Power Reverser
                      00081 ;       18      Sander 
                      00082 ;       19      Blowdown
                      00083 ;       20      Air Pump Slow
                      00084 ;       21      Air Horn
                      00085 ;       22      
                      00086 ;       23      Wheel Flange
                      00087 ;       24      Boiler Hiss
                      00088 ;       25      Water Refill
                      00089 ;       26      Dumping
                      00090 ;       27      Sanding Valve
                      00091 ;       28      Coasting (rod clanks)
                      00092 ;       29      Open Cylinders
                      00093 ;       30      Cylinder Cock #1
                      00094 ;       31      Cylinder Cock #2
                      00095 ;       32
                      00096 ;
                      00097 ; ----------------------------------------------------------------------------
                      00098 ;       DESIGN NOTES 
                      00099 ; ----------------------------------------------------------------------------
                      00100 ;SET -- SCV_LOAD_MIN,4,0        ;Range Volume Scale to a value between 1-5
                      00101 ;                                               Drifting volume will diminish to this level.
                      00102 ;
                      00103 ;COLD STARTUP FUNCTIONS:
                      00104 ;       Play Startup Sounds: 
                      00105 ;               COLD START SF4 or SF8 (initial time only, otherwise will mute)
                      00106 ;       The following Function Keys will SKIP STARTUP Sounds and begin with RUN sounds:
                      00107 ;       SF8, SF0, SF1, SF2, SF5, SF11   
                      00108 ;
                      00109 ;USE CASES:
                      00110 ;1      Startup Begin All (hold off all other channels until finished)
                      00111 ;               Prime Mover Sounds
                      00112 ;               Servo Enable
                      00113 ;               Muting
                      00114 ;               OpSW Reset
                      00115 ;               Shutdown
                      00116 ;               Servo Disable
                      00117 ;               EStop (silent until restart)
                      00118 ;               Restart (warm or cold)
                      00119 ;               Increaase to Run
                      00120 ;               Idle Trim
                      00121 ;               Startmove
                      00122 ;               Moving (vary with load and notch)
                      00123 ;               Cadence (vary load)
                      00124 ;               Exaust (vary load)
                      00125 ;               Evaluate Motor
                      00126 ;               Run Main
                      00127 ;               Set Acceleration
                      00128 ;               Set Deceleration
                      00129 ;               Run
                      00130 ;2      Horn SF2
                      00131 ;               Whistle SF2
                      00132 ;3      Brake SF10
                      00133 ;               Toots
                      00134 ;4      Bell
                      00135 ;5      Dynamics
                      00136 ;               Hand Brake
                      00137 ;6      Increase Load
                      00138 ;               Decrease Load
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE  3
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS

LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00139 ;7      Decelerate Brake sounds
                      00140 ;8      Air Compressor
                      00141 ;9      Coupler events
                      00142 ;               Coupler
                      00143 ;               Wheel Flange sound
                      00144 ;               UnCoupler
                      00145 ;10     Distance Event
                      00146 ;               Grade Crossing
                      00147 ;11     Seconday Mover Sounds (Steam Drift, Diesel Drift)
                      00148 ;12     Idle (not moving)
                      00149 ;               ALCO Stumble
                      00150 ;               AUX and HEP
                      00151 ;13     Setup Random Sounds (scatter)
                      00152 ;               Cab Chatter
                      00153 ;               User Sounds
                      00154 ;               Air Letoff (SF19)
                      00155 ;               Notch Set (SF21-SF28)
                      00156 ;               Trim Notch and Idle
                      00157 ;               Wheel Flange sound2
                      00158 ;14     Fan
                      00159 ;15     DRYER
                      00160 ;16     Load Default CVs
                      00161 ;
                      00162 ;
                      00163 ;Limits:
                      00164 ;       One SPJ project SDF of multiple schemes can run up to 64Kbytes of code.
                      00165 ;       A single scheme has a 4Kbyte GOTO instruction branch range. (e.g. 2K 2-byte or 4K 4-byte instruc
                      00166 ;       That means that a BRANCH_TO an address beyond the range limit will not execute...Use BRANCH_EXT 
                      00167 ;
                      00168 ;Changes v7.0:
                      00169 ;       1) Remap function keys as noted above
                      00170 ;       2) Fix Compressor on eStop 2/21/22
                      00171 ;
                      00172 ;Function Key Mapping:
                      00173 ;This version (v7) includes new sections for mapping functions to default to other manufactures F0-F28 k
                      00174 ;Or you can edit the TRIG include file, re-assemble and make your own custom function mapping.
                      00175 ;
                      00176 ;HOW FUNCTION KEY MAPPING WORKS
                      00177 ;Mapping functions to default to other manufactures F0-F28 keys:
                      00178 ;Mapping is done by using symbolic constants to define the hex value for each function key. 
                      00179 ;For example TRIG_WHISTLES_ON is a value of 0x09. 
                      00180 ;The hex value 0x09 is the physical decoder function key (F2 in this case). 
                      00181 ;This is the same as the standard include for TRIG_SF2   EQU  0x09    ;byte 1, bit1.  
                      00182 ;And the new symbolic constant is TRIG_WHISTLES_ON       EQU  0x09    ;2-F2: byte 1, bit1. 
                      00183 ;The new base code uses the remapped symbolic name for all functions. 
                      00184 ;So any change to the physical assignment is masked.
                      00185 ;Whereas TRIG_SF4        EQU 0x0B now has a symbolic value of TRIG_OPENCYLS_ON EQU 0x0B ;4-F4: CYL COCKS
                      00186 ;One of the re-mapped values is TRIG_SAFETY_ON   EQU  0x24 ;25-F25: BLOWOFF
                      00187 ;This means that when F25 is toggled the SAFETY BLOWOFF sound function will play.
                      00188 ;I have annotated eac EQU statement with the physical decoder button number 
                      00189 ;for example: ;2-F2: byte 1, bit1
                      00190 ;See SR7TrigV7.INC for F-Key values. The ASM code has the INCLUDE for this file name.
                      00191 ;
                      00192 ;
                      00193 ;Use the following CVs to disable optional features:
                      00194 ;CV185 bit values to disable features1:                                 0-128   [0]
                      00195 ;               bit0 disable  HEP diesel =0 AUX GEN     =1                      =1              
                      00196 ;               bit1 disable hard automatic braking                     =2
                      00197 ;               bit2 disable start up sounds                                    =4
                      00198 ;               bit3 disable Fans                                                               =8
                      00199 ;               bit4 disable toots on direction change                  =16
                      00200 ;               bit5 disable grade crossing random play                 =32
                      00201 ;               bit6 disable bell                                                               =64
                      00202 ;               bit7 fuel prime once for Gen1 diesels OR multiple start warning bells Gen2      =128
                      00203 ;CV186 bit values to disable additional features2               0-128   [0]
                      00204 ;               bit0 enable Diesel Low Idle=1           Disabled=0      =1=Enabled
                      00205 ;               bit1 disable Chain bells                                                1-4     =2
                      00206 ;               bit2 disable STOKER change to SHOVEL                    =4
                      00207 ;               bit3 disable AUTO VARY NOTCH                                    =8
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE  4
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS

LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00208 ;               bit4 disable Shaft Driven Compressor                    =16
                      00209 ;               bit5 disable ALCO Idle Stumble=32 Disable=0             =32
                      00210 ;               bit6 disable Auto REAR horn signals: 0=Off, 64=On       =64
                      00211 ;               bit7 disable Dual Prime Movers           0=Off 128=Dual On
                      00212 ;CV187 bit values to disable additional features3       0-128 [0]
                      00213 ;               bit0 disable Short Opt Horn/whistle      Enabled=0,   =1=disabled
                      00214 ;               bit1 disable DEMO ALL HornS/whistles Enabled=on=0,=2=disabled
                      00215 ;               bit2 disable Bell on Idle Exit                          =4
                      00216 ;               bit3 disable Motor Lock on F3                           =8
                      00217 ;               bit4 disable Start up Muted                                     =16
                      00218 ;               bit5 disable Dynamic BRAKES                                     =32
                      00219 ;               bit6 disable                                                            =64
                      00220 ;               bit7 disable Auto Wheel Slip                            =128
                      00221 ;CV188  BIT values to disable additional features4      0-254 [0] 
                      00222 ;               bit0 disable Traction Motor                             =1 Disabled
                      00223 ;               bit1 disable 2                                                          =2
                      00224 ;               bit2 disable 3                                                          =4
                      00225 ;               bit3 disable 4                                                          =8
                      00226 ;               bit4 disable 5                                                          =16
                      00227 ;               bit5 disable 6                                                          =32
                      00228 ;               bit6 disable 7                                                          =64
                      00229 ;               bit7 disable 8                                                          =128
                      00230 ;
                      00231 ;----------------------------------
                      00232 ;NOTES:
                      00233 ; notch volume routine is improved when the volume scale is set by
                      00234 ;       other external events (deceleration, start from standing, acceleration, etc.)
                      00235 
                      00236 ;
                      00237                                                                                                         
                      00238  
                      00239                                                                                                         
                      00240 ;----------------------------------
                      00241 ;     FUNCTION KEYS DEFINED:   
                      00242 ;----------------------------------
                      00243 ;(A) Function Key Usage: 
                      00244 ;F0- Lights  [disables start-up sounds when on during initialization]
                      00245 ;F1- Bell (Bells1-4 may be chained)
                      00246 ;F2- Horn/Whistle       CV150 selects Horn/Whistle type (Playable when bit7 of CV150 is on)     -- Short
                      00247 ;F3- Coupler / Coupler disconnect       [Auto-coupler/brake set by  CV151 max spd]
                      00248 ;               Lift ring and connect plays with SF3 when SF3 is ON
                      00249 ;               Long train consist brake sounds with SF19 ON
                      00250 ;               Steam Wheel Slip on start-up (Enable) /auto coupler
                      00251 ;               (disables toots on SF3) [Leave on for auto toots]
                      00252 ;F4- Dynamic brake fans when moving             
                      00253 ;               Otherwise: Handbrake sequence   [Handbrake while stopped] 
                      00254 ;               Handbrake loop will PLAY until SF14 Off
                      00255 ;               Must be toggled off after start-up (SF10+SF11) or else handbrake will 
                      00256 ;               keep unit from moving...
                      00257 ;F5- Emergency Lights / Short Horn / Reserved for light function (turn on rear light, etc.) / Cold start
                      00258 ;               Will play shorter horn on SF2
                      00259 ;F6- Ditchlights (Front -- flashing)
                      00260 ;F7- Wheel Flange (continuous when moving) [Disables bell on SF1]
                      00261 ;F8- Prime Mover ON / Mute control/Start-up     [SF8 to OFF is muted to CV volume, 
                      00262 ;               SF8 ON, set REG volume]
                      00263 ;               On the initial push of SF8 the sound comes up. 
                      00264 ;               A secondary push raises the sound again to normal levels.
                      00265 ;               EStop  on SF8 On with SF10 on shut-down (disables motor movement until OFF)
                      00266 ;F9- UNCOUPLE / Disconnect
                      00267 ;F10- BRAKE TO STOP -- Usage:
                      00268 ;                       Independent Brake/Train Brake   [Leave SF3 OFF for auto brakes] 
                      00269 ;                       [SF10 on will enable servo motor stop.]
                      00270 ;                       Toggle OFF plays directional toots WHEN SF3 ON
                      00271 ;               1) Slow servo motor to stop using CV3,CV4 momentum values (where
                      00272 ;                       larger value (50) takes longer to slow/accelerate)
                      00273 ;               2) Lock motor at standstill to simulate engine brake set. Servo
                      00274 ;                       will not resume until SF10 is toggled off.
                      00275 ;               3) While brake is set toggle SF3 on to begin uncoupling. SF3 will play 
                      00276 ;                       lift ring noise in preparation for disconnect. 
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE  5
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS

LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00277 ;               4) Releasing the brake and advancing the throttle will play coupler
                      00278 ;                       disconnect when SF3 is already on.
                      00279 ;               Brake rate is determined by BEMF and CV3,4
                      00280 ;               Auto Coupler coupler clank and BRAKE if SF3 is ON,  is dir chng and last PK spd below e.
                      00281 ;                       [Auto-coupler/brake set by  CV151 max spd] SF3 ON for un-coupler
                      00282 ;                       [Leave SF3 on for auto coupler] 
                      00283 ;                       EStop  on SF8 On with SF10 on Shutdown  (disables servo motor movement until OFF
                      00284 ;                       Toggle OFF plays directional toots WHEN F11 OFF
                      00285 ;       SF10 OFF -- Release Brake [not SF10 Apply else Release] 
                      00286 ;               Use for start-up -- SF10 on + F11 on to cold start (release F11 to end fuel prime)
                      00287 ;F11- High Fan / Steam=Greaser
                      00288 ;               Allow SUSTAIN horn on SF2
                      00289 ;F12- Coupler / Coupler disconnect      [Autocoupler/brake set by  CV151 max spd]
                      00290 ;               Lift ring and connect plays with SF3 when F11 is ON
                      00291 ;               Long train consist brake sounds with SF19 ON
                      00292 ;               Steam Wheel Slip on start-up (Enable) /auto coupler
                      00293 ;               (disables toots on SF3) [Leave on for auto toots]
                      00294 ;F13- Ditchlights (Rear -- flashing)
                      00295 ;F14- Hand Brake
                      00296 ;F15- EStop when moving and shut-down   (disables motor movement until OFF)
                      00297 ;F16- Air Dryer ON Shutdown
                      00298 ;F17- Brake Set / Release Automatic
                      00299 ;F18- Sanding Valve / Water Fill
                      00300 ;F19- Short Air Let Off 
                      00301 ;F20- Compressor / Air features disable   / Coal Fill  
                      00302 ;               SF20 ON =disable AIR sound/FEATURES, trig BLOWOFF/HNDL_FAST_DRYER1 then compressor ONE t
                      00303 ;               [SF20 OFF enables pop-off, DRYER and compressor]
                      00304 ;F21- Straight to manual notch1
                      00305 ;F22- Engine Compartment Sounds
                      00306 ;F23- Grade crossing Air-horn/Whistle sequence  [Bell stays on until SF23 off]
                      00307 ;F24- Reverser Center
                      00308 ;F25- Enables AUX generator (Disables Auto Notch Vary)
                      00309 ;               Pressing SF30 on the throttle once HEP has already been 
                      00310 ;               engaged will allow the prime mover to come down a little. 
                      00311 ;F26- Manual Notching Up / Run8
                      00312 ;               Leave on for increased load;
                      00313 ;               Leave SF26 OFF to use run trim option: [will increment 
                      00314 ;               notches on acceleration events; 
                      00315 ;               SF27 will decrement run trim.
                      00316 ;F27- Notch down        -- Leave ON for decreased load;
                      00317 ;               Toggle SF27 ON Is notch down for EVENT, 
                      00318 ;                       integrate -VE in SPEED_DELTA;
                      00319 ;               SF27 will decrement run trim (i.e., use to select lower trim value).
                      00320 ;               Steam=Wheel-slip, when CV155 is not 0 and SF3 ON
                      00321 ;               Manual Notching Down / Coast
                      00322 ;F28- Straight to manual notch8
                      00323 ;============================ virtual functions: =====================
                      00324 ;F29- FORCE STARTUP SOUNDS / Load / Global Gain
                      00325 ;F30- Enables AUX generator (Disables Auto Notch Vary)
                      00326 ;               Pressing SF30 on the throttle once HEP has already been 
                      00327 ;               engaged will allow the prime mover to come down a little. 
                      00328 ;F34- Cab Chatter / Shutters    --       Cab Sounds
                      00329 ;
                      00330 ;       ==================================  
                      00331 ;Note: Many sound levels have been reduced so that horn/whistle is much louder.
                      00332 ;       Global Gain in the project has been maximized to help. Some low volume 
                      00333 ;       levels may need increases on your model.
                      00334 ;
                      00335 ;       ==================================  
                      00336 ;(B) Sound FX defined CV's:     [decoder CV8=8  reset value in brackets]
                      00337 ;CV3      Momentum acceleration rate, 0-63, 63=max, (uses after braking to start) [50]
                      00338 ;CV4      Momentum deceleration rate, 0-63, 63=max, (uses for braking to stop) [40]
                      00339 ;CV7 Version ID 51=Older decoders, 16=Newer SFX2 decoders
                      00340 ;SCV_RESET (CV8)  Reset Decoder values to factory =129=Digitrax
                      00341 ;SCV_19  Advanced Consist [0]
                      00342 ;SCV_21  Advanced Consist SF0-SF8 [248] 
                      00343 ;SCV_22  Advanced Consist SF3-SF7 [52] 
                      00344 ;SCV_54 (Cv60)   Road or Switching Mode [64,0,1]
                      00345 ;SCV_57  BEMF Consist + Advanced Consist, 0-15 / 0-15, 15=max (14,14; 15,15) [238]
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE  6
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS

LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00346 ;CV58  Master Volume, 0-15, 0= max, (SF8 used for Mute) [11] 
                      00347 ;       DEFAULT_GLBL_GAIN               Predefined as 0xC0
                      00348 ;CV60  Scheme select CV, 0=Diesel 1=Steam       [0]
                      00349 ;CV64  Logic select CV, 0=Aux Logic output 64=Normal LED outputs        [64]
                      00350 ;SCV_USER_SDF_SUB_ID            ;CV105  [xx] Sub ID is SUB id or project version
                      00351 ;SCV_USER_SDF_FIX_ID            ;CV106  [xx] FIX ID is change id or project release
                      00352 ;CV121 Sound Project SDF Version 0,4,8,16       Read Only Value
                      00353 ;CV122 Product TYpe, 12 = Digitrax SFX sound decoder    Read Only Value
                      00354 ;CV123 Hardware Version, 64= SDXH166 type decoder       Read Only Value. May vary based on SFX2 decoder 
                      00355 ;                               ;CV126= DL config byte
                      00356 ;SNDCV_CONFIGA  ;CV129= config byte
                      00357 ;SNDCV_CONFIGB  ;CV130= config byte
                      00358 ;SCV_DCONFIG    ;CV131= diesel config
                      00359 ;CV132 Engine Notch rate                64-192  [164]
                      00360 ;CV133 Steam Chuff/CAM config, 128=>EXT cam, 1-127=>DRIVER dia in inches [60]
                      00361 ;CV134 Steam gear ratio trim, 32=100% ratio,    [41]
                      00362 ;CV135 vol level when MUTE action is triggered, e.g. SF8=ON     [30]
                      00363 ;SCV_MAIN_PITCH ;CV136
                      00364 ;SCV_137                ;CV137
                      00365 ;SCV_138                ;SCV138= 
                      00366 ;CV139 Set to trigger distance event    0-64    [30]
                      00367 ;User configurable SoundCV's
                      00368 ;SCV_FREEFORM           ;SCV_140+, here the SCV's are SDF defined:
                      00369 ;CV140 PRIME mover Diesel/chuff-exhaust vol 0-64        [50]
                      00370 ;CV141 Bell Volume                                                      0-64    [36]
                      00371 ;CV142 WHISTLE/HORN vol                                         0-64    [42]
                      00372 ;CV143 AIR feature volume, brake release Air sounds Volume 0-64 [49]
                      00373 ;CV144 Engine brake volume 0-64 [55]
                      00374 ;CV145 Miscellaneous volume 0-64        [51] 
                      00375 ;CV146 Delay (24mS counts) between Bells 1-100  [01] 
                      00376 ;notCV147 Time between DRYER cycles Users normally reset DRYER rate to 10 or more[27] 
                      00377 ;notCV148 Time between Air-pump/Compressor cycles       [30] 
                      00378 ;notCV149 Air-pump/Compressor run time                          [52] 
                      00379 ;CV150 Horn/Whistle Selector,0=std ,  1/7 =Alternate, +128 for Playable volume [0]
                      00380 ;                       HORN SELECTED CV150:
                      00381 ;                                               Decimal HEX                     Bit
                      00382 ;                                                                                       7654 3210
                      00383 ;                               1               0               0x00            0000 0000
                      00384 ;                               2               1               0x01            0000 0001
                      00385 ;                               3               2               0x02            0000 0010
                      00386 ;                               4               3               0x03            0000 0011
                      00387 ;                               5               4               0x04            0000 0100
                      00388 ;                               6               5               0x05            0000 0101
                      00389 ;                               7               6               0x06            0000 0110
                      00390 ;                               PLAYABLE:
                      00391 ;                               1               128             0x80            1000 0000
                      00392 ;                               2               129             0x81            1000 0001
                      00393 ;                               3               130             0x82            1000 0010
                      00394 ;                               4               131             0x83            1000 0011
                      00395 ;                               5               132             0x84            1000 0100
                      00396 ;                                               Decimal HEX                     Bit
                      00397 ;CV151 speed limit FOR AUTOMATIC COUPLER/BRAKE on DIR chng. about 1/2MPH per unit
                      00398 ;CV152 defines USER code for this SDF
                      00399 ;CV153 is SUB id
                      00400 ;CV154 Delay brake apply 1-100/ speed at which brake sounds begin to play [12] 
                      00401 ;CV155 Notching mode 0=AUTO, 1=SEMIAUTO, 2=MANUAL NOTCHES       [01] /STEAM Slip Mode: 0=AUTO, 1=SEMIAUT
                      00402 ;CV156 delay for HORN start in 27mS VALUES
                      00403 ;CV157 is FOR bell selection 
                      00404         ;BELL SELECTED CV157:
                      00405                         ;                       Decimal HEX                     Bit
                      00406                         ;                                                               7654 3210
                      00407                         ;       1               0               0x00            0000 0000
                      00408                         ;       2               1               0x01            0000 0001
                      00409                         ;       3               2               0x02            0000 0010
                      00410                         ;       4               3               0x03            0000 0011
                      00411                         ;       5               4               0x04            0000 0100
                      00412 ;CV158  DIGITRAX RESERVED
                      00413 ;CV159  Min value to tune minimum volume 5-8 [7]
                      00414 ;CV160  VARIANT id or project version   0-254   [000]
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE  7
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS

LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00415 ;       Extended Custom CV values: These are not easily modified by the user as yet (Use SoundLoader to 
                      00416 ;CV161 Initial Idle Trim                                                        4-64    [48]
                      00417         ;INIT_IDLE_TRIM EQU 0x48        ;decimal 4, 16, 32, 64
                      00418 ;CV162          Air Letoff Volume                                               0-64    [25]
                      00419 ;notCV163       Safety Run Time/ how often to check boiler pressure             0-64    [32]
                      00420 ;notCV164  Level in the guage/ Water Pump Cycle Time, percent full      0-64     [19]
                      00421 ;notCV165       add fuel to firebox at 150lbs/ Stoker/oil pump run time 0-254   [20]    
                      00422 ;notCV166       Cut-off Speed for wheel slip chuffs                             4-9     [9]
                      00423 ;notCV167       Cut-off Speed for Auto Cyl. blow down                   0-64    [7]
                      00424 ;CV168  Sander Volume                                                                   0-64    [32]
                      00425 ;CV169  Cutoff Speed for high speed chuffs                              40-99   [48]
                      00426 ;CV170  Cut-off Speed LOW       skips brake sounds                      4-39    [12]
                      00427 ;CV171  AUX GEN VOLUME                                                                  0-64    [40]
                      00428 ;CV172  FAN MOTOR VOLUME                                                                0-64    [30]
                      00429 ;CV173  STEAM blow-down volume                                                  0-64    [50]
                      00430 ;CV174  AIR DRYER Air sounds Volume                                     0-64    [49] 
                      00431 ;CV175  Air compressor volume                                                   0-64    [40]
                      00432 ;CV176  TRACTION MOTOR VOLUME                                                   0-64    [60]            
                      00433 ;CV177  Coupler Slack Volume                                                    0-64    [31]
                      00434 ;CV178  Wheel Flange Volume                                                             0-64    [40]
                      00435 ;CV179  Dynamic brake / Dynamo volume                                   0-64    [55]
                      00436 ;CV180  Steam Blow-down/Safety vol                                              0-64    [59]
                      00437 ;CV181  Power Reverser volume                                                   0-64    [40]
                      00438 ;CV182  brake release Air sounds Volume                                 0-64    [32] 
                      00439 ;CV183  Water fill/Coal fill Volume                                             0-64    [54]
                      00440 ;CV184  Steam cock blow down threshold                                  1-64    [24]
                      00441 ;CV185 bit values to disable features1:                                 0-128   [0]
                      00442 ;               bit0 disable  HEP diesel =0 AUX GEN     =1                      =1              
                      00443 ;               bit1 disable hard automatic braking                     =2
                      00444 ;               bit2 disable start-up sounds                                    =4
                      00445 ;               bit3 disable Fans                                                               =8
                      00446 ;               bit4 disable toots on direction change                  =16
                      00447 ;               bit5 disable grade crossing random play                 =32
                      00448 ;               bit6 disable bell                                                               =64
                      00449 ;               bit7 fuel prime once for Gen1 diesels OR multiple start warning bells Gen2      =128
                      00450 ;CV186 bit values to disable additional features2               0-128   [0]
                      00451 ;               bit0 enable Diesel Low Idle=1 Disabled=0        =1=Enabled
                      00452 ;               bit1 disable Chain bells 1-4                                    =2
                      00453 ;               bit2 disable STOKER change to SHOVEL                    =4
                      00454 ;               bit3 disable AUTO VARY NOTCH                                    =8
                      00455 ;               bit4 disable Shaft Driven Compressor                    =16
                      00456 ;               bit5 disable ALCO Idle Stumble=32 Disable=0             =32
                      00457 ;               bit6 disable Auto REAR horn signals: 0=Off, 64=On       =64
                      00458 ;               bit7 disable Dual Prime Movers          0=Off 128=Dual On
                      00459 ;CV187 bit values to disable additional features3       0-128 [0]
                      00460 ;               bit0 disable Short Opt Horn/whistle     Enabled=0, =1=disabled
                      00461 ;               bit1 disable DEMO ALL HornS/whistles Enabled=on=0, =2=disabled
                      00462 ;               bit2 disable Bell on Idle Exit                          =4;
                      00463 ;               bit3 disable Motor Lock on SF10                         =8
                      00464 ;               bit4 disable start-up Muted                                     =16
                      00465 ;               bit5 disable Dynamic BRAKES                                     =32
                      00466 ;               bit6 disable                                                            =64
                      00467 ;               bit7 disable Auto Wheel Slip                            =128
                      00468 ;CV188 bit values to disable additional features4       0-128 [0]
                      00469 ;               bit0 disable 1                                                          =1
                      00470 ;               bit0 disable 2                                                          =2
                      00471 ;               bit2 disable 3                                                          =4;
                      00472 ;               bit3 disable 4                                                          =8
                      00473 ;               bit4 disable 5                                                          =16
                      00474 ;               bit5 disable 6                                                          =32
                      00475 ;               bit6 disable 7                                                          =64
                      00476 ;               bit7 disable 8                                                          =128
                      00477 ;CV189 Water Alarm Volume                       0-64    [45]
                      00478 ;notCV190 Cut-off Speed for high speed chuffs                           40-99   [48]    
                      00479 ;notCV191 Stoker/oil pump run time              0-254   [20]    
                      00480 ;notCV192 Drift Volume                                  0-64    [20]                                    
                      00481 ;notCV193 Cut-off Speed for LONG HORN   4-9     [9]
                      00482 ;notCV193 Sound Project TYPE
                      00483 ;Possible Values are :
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE  8
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS

LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00484 ;       :                       Decimal HEX                     Bit
                      00485 ;       :                                                               7654 3210
                      00486 ;       :       1               0               0x00            0000 0000               Steam Coal
                      00487 ;       :       2               1               0x01            0000 0001               Steam Oil
                      00488 ;       :       3               2               0x02            0000 0010               Steam Coal  Arti
                      00489 ;       :       4               3               0x03            0000 0011               Steam Oil Articu
                      00490 ;       :       5               4               0x04            0000 0100               Steam Geared    
                      00491 ;       :       9               8               0x08            0000 1000               Steam non-fired 
                      00492 ;       :       81              80              0x50            0101 0000               Gas Carbody / Do
                      00493 ;       :       127             128             0x80            1000 0000               Diesel
                      00494 ;       :       145             144             0x90            1001 0000               Diesel Carbody  
                      00495 ;       :       193             192             0xC0            1100 0000               Diesel Dual Moto
                      00496 ;       :       225             224             0xE0            1110 0000               Diesel Dual Moto
                      00497 ;       :       241             240             0xF0            1111 0000               Diesel Boxcab
                      00498 ;       :       137             136             0x88            1000 1000               Traction
                      00499 ;notCV194 Sound Project Memory Required [1=512kb, 2=1024kb, 3=8mb, 4=4mb, 8=8mb, 16=16mb].
                      00500 ;notCV195 Sound Project JMRI Definition(0-255)
                      00501 ;CV200 RESERVED
                      00502 ;CV201 RESERVED
                      00503 ;CV202 RESERVED
                      00504 ;notCV203 Decoder Memory Available (read only) [1=512kb, 2=1024kb, 3=8mb, 4=4mb, 8=8mb, 16=16mb].
                      00505         
                      00506 ;==================================================
                      00507 ;----------------------------------
                      00508 ;macros to ASSEMBLE  SDF
                      00509 ;----------------------------------
  00000030            00510 VERNO   SET     VERSION_3       ;SDF ver 3.00
                      00514     LIST
  000000FB            00515 CUSTOM_SDF                      EQU     0xFB    ;cv152  AUTHOR code John McMasters (CV 251)
  00000046            00516 USER_SDF_SUB_ID         set     70              ;cv105  AND CV160       ;Version 6 where 60=v6.1
  00000000            00517 USER_SDF_FIX_ID         set     0               ;cv106  AND CV160       ;Version 7.0 where 0=v6.1
  00000000            00518 PROJECT_ID                      EQU     000             ;cv153  000-254 <ENTER ID HERE> 
                      00519 ;
                      00520 ;REVISED FROM SCVs 1/5/21
                      00521 ;<ENTER HERE> Modify these constants for your custom model 
  00000037            00522 DRIFT_VOLUME                    EQU 55  ;Drift Volume           0-64    [20]                            
  00000003            00523 START_SLIP_SPEED                EQU 3   ;Minimum Speed to Slip  0-32    [3]
  0000002F            00524 DRYER_RATE                              EQU 47  ;Time between DRYER cycles [12]
  0000001E            00525 AIRPUMP_START_RATE              EQU 30  ;Time between Compressor cycles [30]
  00000058            00526 AIR_PRESSURE_LIMIT              EQU 88  ;COMPRESSOR DURATION
                      00527 
                      00528 
                      00529 
                      00530          #INCLUDE       DN7TrigV7.INC
                      00001 
                      00002 ;MAP V6 FUNCTION VALUES TO TRIGGER:     SR7TrigV6.inc 5/24/22
  0000000C            00003 TRIG_LIGHTS_ON          EQU     0x0C            ;0-F0: headlight/F0 state
                      00004 ;                                               DYNAMO_SUSTAIN,loop_till_LIGHTS_OFF
  00000008            00005 TRIG_BELLS_ON           EQU     0x08            ;1-F1: Bell
  00000009            00006 TRIG_HORNS_ON           EQU     0x09            ;2-F2: byte 1, bit1
                      00007 ;                                               WHISTLE_LOOP,loop_till_HORNS_OFF
  0000000A            00008 TRIG_COUPLE_ON          EQU     0x0A            ;3-F3: Coupler
  0000000B            00009 TRIG_DYNBRK_ON          EQU     0x0B            ;4-F4: Dynamic Brake
                      00010 ;                                               SHOVEL_LOOP,loop_till_DYNBRK_OFF
  00000010            00011 TRIG_ELIGHTS_ON         EQU     0x10            ;5-F5: byte 2,bit0 Emergency Lights
  00000011            00012 TRIG_DITCHL_ON          EQU     0x11            ;6-F6: Ditch Lights Front
  00000012            00013 TRIG_FLANGES_ON         EQU     0x12            ;7-F7: WHEEL_FLANGE
                      00014 ;                                               WHEEL_FLANGE2,loop_till_FLANGES_OFF
  00000013            00015 TRIG_SMUTE_ON           EQU     0x13            ;8-F8: Mute half, Mute Full, Unmute
                      00016 
                      00017 ;---------
  00000018            00018 TRIG_UNCOUPLE_ON        EQU     0x18    ;9-F9: byte 3 bit 0 Uncouple lift ring
                      00019 ;                                               SILENCE,loop_till_UNCOUPLE_OFF
  00000019            00020 TRIG_IBRAKES_ON         EQU     0x19    ;10-F10:        BRAKE TO STOP
  0000001A            00021 TRIG_FANS_ON            EQU     0x1A    ;11-F11:        FAN HIGH
  0000001B            00022 TRIG_COUPLERD_ON        EQU     0x1B    ;12-F12:        DISCONNECT COUPLER
                      00023 
  00000014            00024 TRIG_DITCHR_ON          EQU     0x14    ;13-F13: BYTE 2, bit 4, Ditch Lights Rear
                      00025 ;                                               REAR DITCHLIGHTS
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE  9
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000015            00026 TRIG_HBRAKE_ON          EQU     0x15    ;14-F14:        HAND BRAKE
  00000016            00027 TRIG_ESTOP_ON           EQU     0x16    ;15-F15:        EMERG STOP
  00000017            00028 TRIG_DRYER_ON           EQU     0x17    ;16-F16:        AIR DRYER
                      00029 
  0000001C            00030 TRIG_BRAKEA_ON          EQU     0x1C    ;17-F17 ;byte 3, bit 4  BRAKE SET
  0000001D            00031 TRIG_SAND_ON            EQU     0x1D    ;18-F18:        SANDING
  0000001E            00032 TRIG_LETOFF_ON          EQU     0x1E    ;19-F19:        AIR LETOFF
  0000001F            00033 TRIG_COMPR_ON           EQU     0x1F    ;20-F20:        COMPRESSOR DISABLE
                      00034 ;
  00000020            00035 TRIG_RUN1_ON            EQU     0x20    ;21-F21: expanded FUNCTIONS Drive Hold Notch1
  00000021            00036 TRIG_USERSND_ON         EQU     0x21    ;22-F22:        ENG COMP SNDS
  00000022            00037 TRIG_ALTGCS_ON          EQU     0x22    ;23-F23:        GRADE CROSSING
  00000023            00038 TRIG_REVS_ON            EQU     0x23    ;24-F24:        REVERSER CENTER
                      00039 
  00000024            00040 TRIG_GMAINT_ON          EQU     0x24    ;25-F25: GENERATOR HEP / General Maint
  00000025            00041 TRIG_NOTCHUP_ON         EQU     0x25    ;26-F26: NOTCHUP
  00000026            00042 TRIG_NOTCHDN_ON         EQU     0x26    ;27-F27: NOTCHDN
  00000027            00043 TRIG_RUN8_ON            EQU     0x27    ;28-F28:
                      00044 
                      00045 
                      00046 ;----------------FIRST 8 bsc regs reserved
  00000028            00047 TRIG_SHUTTERS_ON        EQU     0x28    ;29-F29: expanded FUNCTIONS: Shutters
  00000029            00048 TRIG_STARTUP_ON         EQU     0x29    ;30-F30:        FORCE STARTUP
  00000024            00049 TRIG_AXGEN_ON           EQU     0x24    ;31-F25:        GENERATOR HEP
  0000002B            00050 TRIG_TBRAKE_ON          EQU 0x2B        ;32-F32:        T Brake
                      00051 
  0000002C            00052 TRIG_FAND_ON            EQU     0x2C    ;33-F33:        Fan D
  0000002D            00053 TRIG_USERSND2_ON        EQU     0x2D    ;34-F34:        CAB CHATTER 
  0000002E            00054 TRIG_BX6_ON                     EQU     0x2E    ;35-F35:
  0000002F            00055 TRIG_BX7_ON                     EQU     0x2F    ;36-F36:
                      00056 
                      00057 ;FUNCTION change events
  0000000C            00058 loop_till_LIGHTS_OFF    EQU     TRIG_LIGHTS_ON          ;headlight
                      00059 
  00000008            00060 loop_till_BELLS_OFF             EQU     TRIG_BELLS_ON           ;F1 change event
  00000009            00061 loop_till_HORNS_OFF             EQU     TRIG_HORNS_ON
  00000019            00062 loop_till_IBRAKES_OFF   EQU     TRIG_IBRAKES_ON
  0000000B            00063 loop_till_DYNBRK_OFF    EQU     TRIG_DYNBRK_ON
                      00064 
  00000015            00065 loop_till_HBRAKE_OFF    EQU     TRIG_HBRAKE_ON
  00000025            00066 loop_till_NOTCHUP_OFF   EQU     TRIG_NOTCHUP_ON
  00000026            00067 loop_till_NOTCHDN_OFF   EQU     TRIG_NOTCHDN_ON
  00000013            00068 loop_till_SMUTE_OFF             EQU     TRIG_SMUTE_ON
                      00069 
  00000018            00070 loop_till_UNCOUPLE_OFF  EQU     TRIG_UNCOUPLE_ON
  00000022            00071 loop_till_ALTGCS_OFF    EQU     TRIG_ALTGCS_ON
  0000000A            00072 loop_till_COUPLE_OFF    EQU     TRIG_COUPLE_ON
  00000012            00073 loop_till_FLANGES_OFF   EQU     TRIG_FLANGES_ON
                      00074 
  0000001D            00075 loop_till_CFILL_OFF             EQU     TRIG_SAND_ON
  00000016            00076 loop_till_ESTOP_OFF             EQU     TRIG_ESTOP_ON
  0000002C            00077 loop_till_WFILL_OFF             EQU     TRIG_FAND_ON
  0000002D            00078 loop_till_CSHOV_OFF             EQU     TRIG_USERSND2_ON
                      00079 
  00000024            00080 loop_till_GMAINT_OFF    EQU     TRIG_GMAINT_ON
  0000001F            00081 loop_till_COMPR_OFF             EQU     TRIG_COMPR_ON
                      00082 
  0000001C            00083 loop_till_BRAKEA_OFF    EQU     TRIG_BRAKEA_ON  
  0000001D            00084 loop_till_SAND_OFF              EQU     TRIG_SAND_ON
  0000001E            00085 loop_till_LETOFF_OFF    EQU     TRIG_LETOFF_ON
                      00086 
  00000017            00087 loop_till_DRYER_OFF             EQU     TRIG_DRYER_ON
  00000020            00088 loop_till_BOILER_OFF    EQU     TRIG_RUN1_ON
  00000021            00089 loop_till_BLOWER_OFF    EQU     TRIG_USERSND_ON
  00000023            00090 loop_till_REVS_OFF              EQU     TRIG_REVS_ON
                      00091 
  0000001A            00092 loop_till_TRIG_FANS_OFF         EQU     TRIG_FANS_ON
  0000002B            00093 loop_till_SAFETY_OFF    EQU     TRIG_TBRAKE_ON
  00000024            00094 loop_till_AX27_OFF              EQU     TRIG_AXGEN_ON
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 10
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000027            00095 loop_till_RUN8_OFF              EQU     TRIG_RUN8_ON
                      00096 
                      00097 ;;;;;;;;;;;;; end SR7TrigV6.inc
                      00531 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00532 ;PRIME MOVER CONSTANTS:
                      00533 ;Idle speed - 315 rotations per minute (rpm)
  0000013B            00534 MIN_RPM         EQU     315     
                      00535 ;645 series has a maximum engine speed of between 900 and 950
  00000384            00536 MAX_RPM         EQU     900
                      00537 
                      00538          #INCLUDE       DN7c4x6d30base.INC
                      00001 ; 1/15/23 v7.0
                      00002 ;disable low idle       
                      00003 ;project id and author id
                      00004 ;volumes
                      00005 ; moving brake fix
                      00006 
                      00007         ;THIS IS DN7c4x6d30base.INC
                      00008 
                      00009 ;------------------------------------------
  00000001            00010 USER_VARIANT_ID         EQU     1               ;CV160 is variant# 
  00000002            00011 USER_VARIATION_ID       EQU     2               ;cv156  Variation with Notching if CV121/SW version is 2
                      00012 ;spare WORK flag BIT
  00000005            00013 WKSB_INTERLOCK_BIT  EQU 5               ;0= MUTE channels 2/3 for chnl 1 DIESEL STATUP
  00000020            00014 WKSB_INTERLOCK_MASK EQU 0x20            ;bit involved
                      00015 ;additional SDF settings
  00000006            00016 WKSB_IDLELOCK_BIT       EQU     6               ;0= IDLE interlock
  00000040            00017 WKSB_IDLELOCK_MASK      EQU     0x40            ;bit involved
  00000003            00018 WKSB_ACCEL_BIT          EQU     3               ;0= IDLE interlock
  00000008            00019 WKSB_ACCEL_MASK         EQU     0x08            ;bit involved
                      00020 ;USER_INTLK_BITS MASKS:
  00000080            00021 VARY_DRIFT_MASK7        EQU     0x80    ;MASK just do bit7      Vary auto grade crossing 6/25/16        
  00000040            00022 STATIC_MAINT_MASK6      EQU     0x40    ;MASK just do bit6      STATIC MAINTENANCE SOUNDS INTERLOCK
  00000020            00023 COUPLER_MASK5           EQU     0x20    ;MASK just do bit5      AUTO COUPLER INTERLOCK
  00000010            00024 CYLCOCK_MASK4           EQU     0x10    ;MASK just do bit4      OPEN CYLCOCK INTERLOCK
  00000008            00025 DYN_CTRL_MASK3          EQU     0x08    ;MASK just do bit3      NOT_USED INTERLOCK
  00000004            00026 AUTO_BRAKE_MASK2        EQU     0x04    ;MASK just do bit2      AUTOMATIC BRAKING INTERLOCK
  00000002            00027 START_MASK1                     EQU     0x02    ;MASK just do bit1      STARTUP SOUNDS INTERLOCK
  00000001            00028 COMP_MASK0                      EQU     0x01    ;MASK just do bit0      COMPRESSOR AND AIR SOUNDS INTERL
                      00029 
                      00030 ;VOLUME SCALE CONSTANTS v2.0
  0000000F            00031 SCALE_F EQU     0x0F
  0000000E            00032 SCALE_E EQU     0x0E
  0000000D            00033 SCALE_D EQU     0x0D
  0000000C            00034 SCALE_C EQU     0x0C
  0000000B            00035 SCALE_B EQU     0x0B
  0000000A            00036 SCALE_A EQU     0x0A
  00000009            00037 SCALE_9         EQU     0x09
  00000008            00038 SCALE_8         EQU     0x08
  00000007            00039 SCALE_7         EQU     0x07
  00000006            00040 SCALE_6         EQU     0x06
  00000005            00041 SCALE_5         EQU     0x05
  00000004            00042 SCALE_4         EQU     0x04
  00000003            00043 SCALE_3         EQU     0x03
  00000002            00044 SCALE_2         EQU     0x02
  00000001            00045 SCALE_1         EQU     0x01
                      00046 
  00000001            00047 SCALE_INCR_1    EQU 0x01
  00000002            00048 SCALE_INCR_2    EQU 0x02
  00000003            00049 SCALE_INCR_3    EQU 0x03
  00000004            00050 SCALE_INCR_4    EQU 0x04
  00000006            00051 SCALE_INCR_6    EQU 0x06
  00000008            00052 SCALE_INCR_8    EQU 0x08
                      00053 
                      00054 ;see SCV_LOAD_MIN for Min value to tune minimum volume 1-5 [5] VARY_LOAD / SCALE
  00000008            00055 SCALE_MIN               EQU     SCALE_8 ;motor scale will vary 01-15
  0000000B            00056 SCALE_DRIFT             EQU     SCALE_B
  0000000C            00057 SCALE_MID               EQU     SCALE_C
  0000000F            00058 SCALE_MAX               EQU SCALE_F
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 11
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00059 ;see    DRIFT_VOLUME,58,0                       ;CV191 Drift Volume             0-64    [20]            
                      00060 
  0000004F            00061 IMAXG_DIESEL    EQU     0x4F    ;MAXG_DIESEL    EQU     0x1C
  0000005E            00062 IMAXP_DIESEL    EQU     0x5E    ;0x7E   ;MAXP_DIESEL    EQU     0x3E
  0000004F            00063 IMAXG_STEAM             EQU     0x4F    ;MAXG_STEAM     EQU     0x1C
  0000007E            00064 IMAXP_STEAM             EQU     0x7E    ;0x5E   ;0x7E   ;0x3E   ; MAXP_STEAM    EQU     0x7E            
                      00065 ;notch volume changes with change in working notch [used with volume scales above]
  0000008F            00066 COMP_notchbits  EQU     0x8F                    ;MASK just compare 3 NOTCH bits in COMPARE xNNN-xxxx
  0000007F            00067 COMP_bit7               EQU     0x7F                    ;MASK just do bit7      0111 1111
  000000BF            00068 COMP_bit6               EQU     0xBF                    ;MASK just do bit6      1011 1111
  000000DF            00069 COMP_bit5               EQU     0xDF                    ;MASK just do bit5      1101 1111
  000000EF            00070 COMP_bit4               EQU     0xEF                    ;MASK just do bit4      1110 1111
  000000F7            00071 COMP_bit3               EQU     0xF7                    ;MASK just do bit3      1111 0111
  000000FB            00072 COMP_bit2               EQU     0xFB                    ;MASK just do bit2      1111 1011
  000000FD            00073 COMP_bit1               EQU     0xFD                    ;MASK just do bit1      1111 1101
  000000FE            00074 COMP_bit0               EQU     0xFE                    ;MASK just do bit0      1111 1110
                      00075 ;===================================================================================
                      00076 ;       WORK_NOTCH is computed by the decoder and is continuously changed. 
                      00077 ;       The rate of change is managed by the SCV_NOTCH   (CV132) Controller Notch Rate where the 
                      00078 ;       default value CV132=127 is mid range. Lower values are a slower rate -- higher is faster.  
                      00079 ;       This project uses increments by NOTCH_UP_VAL of decimal 16 [0x10] for each notch.
                      00080 ;       WORK_NOTCH will vary by more than one increment depending on rate of speed change and notch rate
                      00081 ;       The variable input to the computation is WORK_SPEED which is an internal value from decimal 0-12
                      00082 ;       128 divided by 16 gives the 7 integers for notches 1-8.
                      00083 ;       However the WORK_NOTCH register is incremented by 16's and has the range:
                      00084 ;       NOTCH   Decimal HEX                     Bit                     Throttle 
                      00085 ;                                                               7654 3210       Speed (typical) at notch
                      00086 ;       0               0               (low idle option is at rest, not moving... )
                      00087 ;       1               0               0x00            0000 0000               1-10
                      00088 ;       2               16              0x10            0001 0000               10-20
                      00089 ;       3               32              0x20            0010 0000               21-22
                      00090 ;       4               48              0x30            0011 0000               23-25
                      00091 ;       5               64              0x40            0100 0000               26-35
                      00092 ;       6               80              0x50            0101 0000               36-38
                      00093 ;       7               96              0x60            0110 0000               39-49
                      00094 ;       8               112             0x70            0111 0000               50-99
                      00095 ;       9               128             0x80            1000 0000               
                      00096 ;       10              144             0x90            1001 0000
                      00097 ;       11              160             0xA0            1010 0000
                      00098 ;       12              176             0xB0            1011 0000
                      00099 ;       13              192             0xC0            1100 0000
                      00100 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  00000010            00101 NOTCH_UP_VAL    EQU     16
  FFFFFFF0            00102 NOTCH_DOWN_VAL  EQU     -NOTCH_UP_VAL
  00000000            00103 NOTCH1  EQU     0x00
  00000010            00104 NOTCH2  EQU     0x10
  00000020            00105 NOTCH3  EQU     0x20
  00000030            00106 NOTCH4  EQU     0x30
  00000040            00107 NOTCH5  EQU     0x40
  00000050            00108 NOTCH6  EQU     0x50
  00000060            00109 NOTCH7  EQU     0x60
  00000070            00110 NOTCH8  EQU     0x70
                      00111 ;NOTCH9 EQU     0x80
  00000070            00112 MAX_NOTCH_VAL   EQU     NOTCH8
  00000000            00113 MIN_NOTCH_VAL   EQU     NOTCH1
                      00114 ;USE CV_169;INIT_IDLE_TRIM      EQU 0x48        ;decimal 4, 16, 32, 64
                      00115 ;SCV_SPEED_MODE                 ;CV155, 0=AUTO, 1=SEMIAUTO, 2=MANUAL NOTCHES
  00000000            00116 CV155_AUTO      EQU     0               ;AUTOMATIC code
  00000001            00117 CV155_SEMI      EQU     1               ;SEMI-AUTO code 
  00000002            00118 CV155_MANUAL    EQU     2               ;MANUAL code 
  00000000            00119 CV155_NOSLIP    EQU     0               ;00=STD=NO wheel slip on SF27, 01=WHEEL slip with SF27 ON
  00000028            00120 SLIP_VALUE      EQU     0x28            ;spd incrememt when slipping
  00000000            00121 NO_SLIP_VALUE   EQU     0
  000000FF            00122 MAX_SLIP_VAL    EQU     0xFF    
                      00123 
                      00124 ;CONSTANTS FOR AIR AND BRAKES:
  00000028            00125 MIN_AIR_PRESS   EQU     40
  0000003C            00126 MIN_BRAKE_PRESS EQU     60
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 12
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00127         PAGE 
                      00128 
                      00129 
                      00130 
                      00131 ;==================================
                      00132 ;SOUND handles ALLOCATION for Series4 is (MAX 64 handles)
                      00133 ;SOUND handles ALLOCATION for Series6 is (MAX 180 handles) 
                      00134 ; handle 0=unused externally, is SILENCE internal value
                      00135 ;----------------------------------
                      00136 ;   SOUND WAVE FILE HANDLES
                      00137 ;----------------------------------
                      00138         cblock   0   ; Start assigning location of  Sound Clips 0, 1, 2, etc.
  00000000            00139 HNDL_SC0_MUTE                   ;HNDL 0 ALWAYS internal SILENCE value
                      00140 ;       Arrange so that the first 64 handles fit Series4 and the >64 handles fit
                      00141 ;       Series6 (i.e., optional and disused handles at the end)
                      00142 
  00000001            00143 HNDL_SC0_PRIME_WARN_START  
  00000002            00144 HNDL_SC0_PRIME_WARN_LOOP
  00000003            00145 HNDL_SC0_PRIME_WARN_END
                      00146 
  00000004            00147 HNDL_SC0_STARTUP_1ST
  00000005            00148 HNDL_SC0_STARTUP_2ND
  00000006            00149 HNDL_SC0_STARTUP_3RD
  00000007            00150 HNDL_SC0_STARTUP_4TH
                      00151 
  00000008            00152 HNDL_SC0_INC_0H
  00000009            00153 HNDL_SC0_INC_H1
  0000000A            00154 HNDL_SC0_INC_12
  0000000B            00155 HNDL_SC0_INC_23
  0000000C            00156 HNDL_SC0_INC_34
  0000000D            00157 HNDL_SC0_INC_45
  0000000E            00158 HNDL_SC0_INC_56
  0000000F            00159 HNDL_SC0_INC_67
  00000010            00160 HNDL_SC0_INC_78
                      00161 
  00000011            00162 HNDL_SC0_RUN_LOW_IDLE
  00000012            00163 HNDL_SC0_RUN_HIGH_IDLE
  00000013            00164 HNDL_SC0_RUN_1
  00000014            00165 HNDL_SC0_RUN_2
  00000015            00166 HNDL_SC0_RUN_3
  00000016            00167 HNDL_SC0_RUN_4
  00000017            00168 HNDL_SC0_RUN_5
  00000018            00169 HNDL_SC0_RUN_6
  00000019            00170 HNDL_SC0_RUN_7
  0000001A            00171 HNDL_SC0_RUN_8
                      00172 
  0000001B            00173 HNDL_SC0_DEC_87
  0000001C            00174 HNDL_SC0_DEC_76
  0000001D            00175 HNDL_SC0_DEC_65
  0000001E            00176 HNDL_SC0_DEC_54
  0000001F            00177 HNDL_SC0_DEC_43
  00000020            00178 HNDL_SC0_DEC_32
  00000021            00179 HNDL_SC0_DEC_21
  00000022            00180 HNDL_SC0_DEC_1H
  00000023            00181 HNDL_SC0_DEC_H0
                      00182 
                      00183 
  00000024            00184 HNDL_SC0_SHUTDOWN_BEGIN
  00000025            00185 HNDL_SC0_SHUTDOWN_END
                      00186 
  00000026            00187 HNDL_SC0_HORN0_START                    ;default Horn 00
  00000027            00188 HNDL_SC0_HORN0_LOOP     
  00000028            00189 HNDL_SC0_HORN0_SUSTAIN
  00000029            00190 HNDL_SC0_HORN0_END
  0000002A            00191 HNDL_SC0_HORN0_SHORT
                      00192 
  0000002B            00193 HNDL_SC0_HORN1_START    ;1ST ALT Horn 01
  0000002C            00194 HNDL_SC0_HORN1_LOOP                     
  0000002D            00195 HNDL_SC0_HORN1_SUSTAIN
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 13
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000002E            00196 HNDL_SC0_HORN1_END
  0000002F            00197 HNDL_SC0_HORN1_SHORT
                      00198 
                      00199 ;BELLS
                      00200 ;Chained or selected bells
  00000030            00201 HNDL_SC0_BELL1
  00000031            00202 HNDL_SC0_BELL2
                      00203 
  00000032            00204 HNDL_SC0_ENGINE_BRAKE_BEGIN
  00000033            00205 HNDL_SC0_ENGINE_BRAKE_LOOP1     ; hard braking plays combinations of loop2 and 1
  00000034            00206 HNDL_SC0_ENGINE_BRAKE_LOOP2
  00000035            00207 HNDL_SC0_ENGINE_BRAKE_END
                      00208 
  00000036            00209 HNDL_SC0_ISOLATION_REVERSE_FWD
  00000037            00210 HNDL_SC0_ISOLATION_REVERSE_REV
  00000038            00211 HNDL_SC0_ISOLATION_CENTER
                      00212 
  00000039            00213 HNDL_SC0_BRAKE_SET
  0000003A            00214 HNDL_SC0_BRAKE_RELEASE
  0000003B            00215 HNDL_SC0_BRAKE_BAIL_OFFOFF
  0000003C            00216 HNDL_SC0_BRAKE_BAIL_OFFON
                      00217 
  0000003D            00218 HNDL_SC0_HBRAKE_BEGIN
  0000003E            00219 HNDL_SC0_HBRAKE_LOOP
  0000003F            00220 HNDL_SC0_HBRAKE_RELEASE
  00000040            00221 HNDL_SC0_HBRAKE_END
                      00222 
  00000041            00223 HNDL_SC0_DYN_BRAKE_START
  00000042            00224 HNDL_SC0_DYN_BRAKE_SUSTAIN
  00000043            00225 HNDL_SC0_DYN_BRAKE_END
                      00226 
  00000044            00227 HNDL_SC0_AIRCOMP_START
  00000045            00228 HNDL_SC0_AIRCOMP_LOW_IDLE
  00000046            00229 HNDL_SC0_AIRCOMP_HIGH_IDLE
                      00230 
  00000047            00231 HNDL_SC0_AIRCOMP_RUN1
  00000048            00232 HNDL_SC0_AIRCOMP_RUN2
  00000049            00233 HNDL_SC0_AIRCOMP_RUN3
  0000004A            00234 HNDL_SC0_AIRCOMP_RUN4
  0000004B            00235 HNDL_SC0_AIRCOMP_RUN5
  0000004C            00236 HNDL_SC0_AIRCOMP_RUN6
  0000004D            00237 HNDL_SC0_AIRCOMP_RUN7
  0000004E            00238 HNDL_SC0_AIRCOMP_RUN8
  0000004F            00239 HNDL_SC0_AIRCOMP_END
                      00240 
  00000050            00241 HNDL_SC0_TRACTION_START
  00000051            00242 HNDL_SC0_TRACTION_RUN
  00000052            00243 HNDL_SC0_TRACTION_END
                      00244 
                      00245 
                      00246 
                      00247 
                      00248 
  00000053            00249 HNDL_SC0_AIR_LETOFF
  00000054            00250 HNDL_SC0_SILENCE        ;is used to fill sound during Estop...
                      00251 
                      00252 ;==================================================
                      00253 ; Shared Common Sound Files -- for multiple scheme projects
                      00254 ;==================================================
  00000055            00255 HNDL_SC0_FAN1_START
  00000056            00256 HNDL_SC0_FAN1_LOOP
  00000057            00257 HNDL_SC0_FAN1_END
                      00258 
  00000058            00259 HNDL_SC0_FAN2_START
  00000059            00260 HNDL_SC0_FAN2_LOOP
  0000005A            00261 HNDL_SC0_FAN2_END
                      00262 
  0000005B            00263 HNDL_SC0_AIR_DRYER1
  0000005C            00264 HNDL_SC0_AIR_DRYER2
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 14
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000005D            00265 HNDL_SC0_AIR_DRYER3
  0000005E            00266 HNDL_SC0_AIR_DRYER4
  0000005F            00267 HNDL_SC0_AIR_DRYER5
  00000060            00268 HNDL_SC0_AIR_DRYER6
  00000061            00269 HNDL_SC0_AIR_DRYER7
  00000062            00270 HNDL_SC0_AIR_DRYER8
  00000063            00271 HNDL_SC0_AIR_DRYER9
  00000064            00272 HNDL_SC0_AIR_DRYER10
                      00273 
  00000065            00274 HNDL_SC0_SANDER_START
  00000066            00275 HNDL_SC0_SANDER_RUN
  00000067            00276 HNDL_SC0_SANDER_END
                      00277 ;==================================================
  00000068            00278 HNDL_SC0_COUPLER_LIFT_RING
  00000069            00279 HNDL_SC0_COUPLER_CLASH
  0000006A            00280 HNDL_SC0_COUPLER_SLACK
  0000006B            00281 HNDL_SC0_UNCOUPLE_BEGIN
  0000006C            00282 HNDL_SC0_UNCOUPLE_DISCONNECT
                      00283 
  0000006D            00284 HNDL_SC0_DEFECT_ALARM
  0000006E            00285 HNDL_SC0_WARNING_ALARM
                      00286 
  0000006F            00287 HNDL_SC0_ENGINE_DOOR_OPEN
  00000070            00288 HNDL_SC0_ENGINE_DOOR_CLOSE
  00000071            00289 HNDL_SC0_SHUTTERS
                      00290 
  00000072            00291 HNDL_SC0_CAB_DOOR_OPEN
  00000073            00292 HNDL_SC0_CAB_DOOR_CLOSE
                      00293 
  00000074            00294 HNDL_SC0_USER_SOUND1
  00000075            00295 HNDL_SC0_USER_SOUND2
                      00296 
  00000076            00297 HNDL_SC0_WHEEL_FLANGE1
  00000077            00298 HNDL_SC0_WHEEL_FLANGE2
                      00299 ;==================================================
                      00300 ; OPTIONAL AUX Sounds
  00000078            00301 HNDL_SC0_AUX_START
  00000079            00302 HNDL_SC0_AUX_RUN
  0000007A            00303 HNDL_SC0_AUX_END
                      00304 
  0000007B            00305 HNDL_SC0_ABOUT
                      00306 
  0000007C            00307 HNDL_SC0_DEBUG1
                      00308 
                      00309 ;==================================================
                      00310 ; END OF Shared Common Sound Files -- for multiple scheme projects
                      00311 ; Series 6 has more than 64 sound file handles
                      00312 ; Older decoders/projects must not use handles above here!
                      00313 
                      00314 
                      00315 ;==================================================     
                      00316 
                      00317         ENDC    
                      00318 ;-----------------------------------------
                      00319 ;   SYSTEM VARIABLES
                      00320 ;-----------------------------------------
                      00321 ;these NEXT 32 EEPROM locs define CV_121_0->CV_128_3, with CV119 as PAGE#
                      00322 ;first entry maps to SND_PAGED_CVS [CV_121_0]           
                      00323 ;--------------------------------------------------------------
                      00324 ; Previously defined SCVs - listed here for reference convenience
                      00325 ;--------------------------------------------------------------
                      00326 ;       ==================================  
                      00327 ;(B) Sound FX defined CV's:     [decoder CV8=8  reset value in brackets]
                      00328 ;CV3 Momentum acceleration rate, 0-63, 63=max, (uses after braking to start) [50]
                      00329 ;CV4 Momentum deceleration rate, 0-63, 63=max, (uses for braking to stop) [40]
                      00330 ;CV7 Version ID 51=Older decoders, 16=Newer SFX2 decoders
                      00331 ;SCV_RESET (CV8)  Reset Decoder values to factory =129=Digitrax
                      00332 ;SCV_19  Advanced Consist [0]
                      00333 ;SCV_21  Advanced Consist SF0-SF8 [248] 
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 15
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00334 ;SCV_22  Advanced Consist SF3-SF7 [52] 
                      00335 ;SCV_54 (CV54)   Road or Switching Mode [64,0,1]
                      00336 ;SCV_57  BEMF Consist + Advanced Consist, 0-15 / 0-15, 15=max (14,14; 15,15) [238]
                      00337 ;SCV_MASTER_VOL (CV58) Master Volume Setting
                      00338 ;       DEFAULT_GLBL_GAIN               Predefined as 0xC0
                      00339 ;CV60  Scheme select CV, 0=Diesel 1=Steam       [0]
                      00340 ;CV64  Logic select CV, 0=Logic 64=Normal       [64]
                      00341 ;SCV_USER_SDF_SUB_ID            ;CV105  [xx] Sub ID is SUB id or project version
                      00342 ;SCV_USER_SDF_FIX_ID            ;CV106  [xx] FIX ID is change id or project release
                      00343 ;CV121 Sound Project SDF Version 0,4,8,16       Read Only Value
                      00344 ;CV122 Product TYpe, 12 = Digitrax SFX sound decoder    Read Only Value
                      00345 ;CV123 Hardware Version, 64= SDXH166 type decoder       Read Only Value. May vary based on SFX2 decoder 
                      00346 ;                               ;CV126= DL config byte
                      00347 ;SNDCV_CONFIGA  ;CV129= config byte
                      00348 ;SNDCV_CONFIGB  ;CV130= config byte
                      00349 ;SCV_DCONFIG    ;CV131= diesel config
                      00350 ;CV132 Engine Notch rate                64-127  [96]
                      00351 ;SCV_NOTCH              ;CV132= typ DIESEL NOTCH rate byte [64,127]
                      00352 ;SNDCV_STEAM    ;CV133= typ steam CAM config byte, x80=EXT or 1-127=DRIVER dia in inches
                      00353                                 ;CV133, SNDCV_STEAM /DRIVER size bit7=1 means EXTERNAL INPUT_0 generates
                      00354 ;SCV_STGEAR             ;CV134= steam gear ratio trim
                      00355 ;SCV_MUTE_VOL   ;CV135= vol level when MUTE action is triggered, e.g. SF8=On[0,35]
                      00356                                 ;SCV_135 EQU SCV_MUTE_VOL; Global volume when muted. Default 0
                      00357 ;CV135 vol level when MUTE action is triggered, e.g. SF8=ON     [30]
                      00358 ;SCV_MAIN_PITCH ;CV136
                      00359 ;SCV_137                ;CV137
                      00360 ;SCV_138                ;SCV138= 
                      00361 ;SCV_DISTANCE_RATE      ;SCV139= mask for controlling DISTANCE rate event/trigger [31]
                      00362                                         ;SCV_139 EQU SCV_DISTANCE_RATE ; Time value till Gauge Trigger. 
                      00363 ;SCV_FREEFORM           ;SCV_140+, here the SCV's are SDF defined
                      00364 ;------------------------------------------
                      00365 ;   LOCATION FOR CV ADDRESSES  
                      00366 ; Start assigning (after std Digitrax) for CV140, CV141, etc.
                      00367 ;------------------------------------------
                      00368    cblock   SCV_FREEFORM   ; Start assigning (after std Digitrax) for CV140, CV141, etc.
  0000008B            00369 SCV_PRIME_VOLUME        ;CV140 PRIME mover / Chuff vol  0-64    [40]
  0000008C            00370 SCV_BELL_VOLUME                 ;CV141 BELL vol                                 0-64    [30]
  0000008D            00371 SCV_HORNWHISTLE_VOLUME  ;CV142 Horn / Whistle Volume    0-64    [60] 
  0000008E            00372 SCV_AIRFEAT_VOLUME      ;CV143 AIR feature volume, brake release        [42] Air sounds Volume 0-64
  0000008F            00373 SCV_BRAKE_VOLUME                ;CV144 ENGINE BRAKES - brake volume 0-64 [48]
  00000090            00374 SCV_MISC_VOLUME                 ;CV145 Miscellaneous sounds volume      0-64 [51]
  00000091            00375 SCV_BELL_RING_RATE      ;CV146 BELL delay (24mS counts)         1-100   [1]
  00000092            00376 notDRYER_RATE                   ;notCV147 Time between DRYER cycles     1-100   [27]
  00000093            00377 notAIRPUMP_START_RATE  ;;notCV148 Compressor/Airpump Start rate         [30]
  00000094            00378 notAIR_PRESSURE_LIMIT  ;notCV149 Compressor/Airpump run time            [88]
  00000095            00379 SCV_HORNWHISTLE_SELECT  ;CV150 default [00]     WHEN CV150 BIT7=1, enable volume modulation for playable
                      00380         ;SELECTED CV150:
                      00381                         ;                       Decimal HEX                     Bit
                      00382                         ;                                                               7654 3210
                      00383                         ;       1               0               0x00            0000 0000
                      00384                         ;       2               1               0x01            0000 0001
                      00385                         ;       3               2               0x02            0000 0010
                      00386                         ;       4               3               0x03            0000 0011
                      00387                         ;       5               4               0x04            0000 0100
                      00388                         ;       6               5               0x05            0000 0101
                      00389                         ;       7               6               0x06            0000 0110
                      00390                         ;       8               7               0x07            0000 0111
                      00391                         ;       9               8               0x08            0000 1000
                      00392                         ;       PLAYABLE:
                      00393                         ;       1               128             0x80            1000 0000
                      00394                         ;       2               129             0x81            1000 0001
                      00395                         ;       3               130             0x82            1000 0010
                      00396                         ;       4               131             0x83            1000 0011
                      00397                         ;       5               132             0x84            1000 1000
                      00398                         ;       6               133             0x85            1000 0101
                      00399                         ;       7               134             0x86            1000 0110
                      00400                         ;       8               135             0x87            1000 0111
                      00401                         ;       9               136             0x88            1000 1000
                      00402                         ;                       Decimal HEX                     Bit
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 16
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000096            00403 SCV_COUPLER_THRESHOLD   ;CV151 speed limit FOR AUTOMATIC COUPLER/BRAKE on DIR chng. about 1/2MPH per uni
  00000097            00404 SCV_USER_SDF_ID                 ;CV152 User ID defines USER code for this SDF [xx]
  00000098            00405 SCV_PROJECT_ID                  ;CV153 Identifies Project within author ID where nnn nnn is serial 1-254
  00000099            00406 SCV_BRAKE_RATE                  ;CV154 Delay brake apply 1-100  [14] 
  0000009A            00407 SCV_SPEED_MODE                  ;CV155 Notching mode 0=AUTO, 1=SEMIAUTO, 2=MANUAL NOTCHES [01]
  0000009B            00408 SCV_HORNWHISTLE_DELAY   ;CV156 Delay for HORN/WHISTLE start in 27mS VALUES      [0] 
  0000009C            00409 SCV_157_SEL_BELL        ;CV157 bell selection   [00] 
                      00410         ;BELL SELECTED CV157:
                      00411                         ;                       Decimal HEX                     Bit
                      00412                         ;                                                               7654 3210
                      00413                         ;       1               0               0x00            0000 0000
                      00414                         ;       2               1               0x01            0000 0001
                      00415                         ;       3               2               0x02            0000 0010
                      00416                         ;       4               3               0x03            0000 0011
                      00417                         ;       5               4               0x04            0000 0100
  0000009D            00418 SCV_SPARE158                    ;CV158 is DIGITRAX RESERVED
  0000009E            00419 SCV_LOAD_MIN                    ;CV159 Min value to tune minimum volume 5-8 [7]
  0000009F            00420 SCV_USER_SDF_SUB_ID             ;CV160 Sub ID is SUB id or project version (MAYBE NOT USED) (USE CV106 I
                      00421 ;       Extended Custom CV values: These are not easily modified by the user as yet (Use SoundLoader to 
  000000A0            00422 SCV_INIT_IDLE_TRIM              ;CV161 Initial Idle Trim                        4-64    [48]
  000000A1            00423 SCV_INJECTOR_VOLUME             ;CV162 Water Injector Volume            0-64    [25]
  000000A2            00424 UNUSED163               ;CV163 Safety Run Time                          0-64    [32]
  000000A3            00425 UNUSED164       ;CV164 Level in the guage/ Water Pump Cycle Time                                0-64    
  000000A4            00426 UNUSED165       ;CV165 add fuel to firebox at 150lbs/ Stoker/oil pump run time                          
  000000A5            00427 UNUSED166               ;CV166 Cutoff Speed for wheel slip chuffs               4-9     [9]
  000000A6            00428 SCV_CUTOFF_SPD_AUTO_OPNCYL      ;CV167 Cutoff Speed for Auto Cyl. blow down                     0-64    
  000000A7            00429 SCV_STOKER_VOLUME                       ;CV168 Stoker Volume                                            
  000000A8            00430 SCV_CUTOFF_SPEED_HIGH           ;CV169 Cutoff Speed for high speed chuffs               40-99   [48]    
  000000A9            00431 SCV_CUTOFF_SPEED_LOW            ;CV170 Cutoff Speed LOW skip brake sounds               4-19    [13]
  000000AA            00432 SCV_AUXGEN_VOLUME                       ;CV171 AUX GEN VOLUME                                           
  000000AB            00433 SCV_FAN_VOLUME                          ;CV172 FAN MOTOR VOLUME                                         
  000000AC            00434 SCV_SAFTEY_VOLUME                       ;CV173 STEAM blowdown volume                                    
  000000AD            00435 SCV_DRYER_VOLUME                        ;CV174 AIR feature volume, DRYER Air sounds Vol 0-64    [49] 
  000000AE            00436 SCV_COMPRESSOR_PUMP_VOLUME      ;CV175 Air compressor volume                                    0-64    
  000000AF            00437 SCV_TRACTION_MOTOR_VOLUME       ;CV176 TRACTION MOTOR VOLUME                            0-64    [60]    
  000000B0            00438 SCV_COUPLER_VOLUME                      ;CV177 Coupler / Slack Volume                                   
  000000B1            00439 SCV_BOILER_VOLUME                       ;CV178 Steam Boiler Volume                                      
  000000B2            00440 SCV_BRAKE_DYN_VOLUME            ;CV179 Dynamic brake /Dynamo volume                             0-64    
  000000B3            00441 SCV_BLOWDOWN_VOLUME             ;CV180 Steam Blowdown/Safety vol                                0-64    
  000000B4            00442 SCV_POWER_REVERSER_VOLUME       ;CV181 Power Reverser volume                                    0-64    
  000000B5            00443 SCV_LETOFF_VOLUME                       ;CV182 brake release Air sounds Volume          0-64 [32] 
  000000B6            00444 SCV_WATER_COAL_FILL_VOLUME      ;CV183 Water fill/Coal fill Volume                              0-64    
  000000B7            00445 SCV_STEAM_COCK_THRESH           ;CV184 Steam cock blow down threshold                   1-64    [24]
  000000B8            00446 SCV_FEATURE_DISABLE             ;CV185 BIT values to disable features1:
                      00447 ;               bit0 disable HEP diesel =0 AUX GEN                      =1
                      00448 ;               bit1 disable hard automatic braking             =2
                      00449 ;               bit2 disable startup sounds                                     =4
                      00450 ;               bit3 disable Fans                                                       =8
                      00451 ;               bit4 disable toots on direction change          =16
                      00452 ;               bit5 disable grade crossing random play         =32
                      00453 ;               bit6 disable bell                                                       =64
                      00454 ;               bit7 fuel prime once for Gen1 diesels OR multiple start warning bells Gen2      =128
                      00455 ;               bit7 steam disable SF11 Open Cyl Cocks          =128    
  000000B9            00456 SCV_FEATURE2_DISABLE    ;CV186  0-254 [2]  BIT values to disable additional features2 
                      00457 ;               bit0 disable Diesel Low Idle=1 Enabled=0        =1
                      00458 ;               bit1 disable Chain bells 1-4                            =2
                      00459 ;               bit2 disable STOKER change to SHOVEL            =4
                      00460 ;               bit3 disable AUTO VARY NOTCH                            =8
                      00461 ;               bit4 disable Shaft Driven Compressor            =16
                      00462 ;               bit5 disable ALCO Idle Stumble=32 Disable=0     =32
                      00463 ;               bit6 disable Auto REAR WHISTLE signals: 0=Off, On=64    
                      00464 ;               bit7 disable Dual Prime Movers                  0 = Off =128 = Dual On
  000000BA            00465 SCV_FEATURE3_DISABLE    ;CV187  0-254 [2]  BIT values to disable additional features3 
                      00466 ;               bit0 disable Short Opt Horn/whistle      Enabled=0      =1
                      00467 ;               bit1 disable DEMO ALL HornS/whistles Enabled=on=0 =2=disabled
                      00468 ;               bit2 disable Bell on Idle Exit                          =4;
                      00469 ;               bit3 disable Motor Lock on BRAKE                                =8
                      00470 ;               bit4 disable Startup Muted                                      =16
                      00471 ;               bit5 disable Dynamic BRAKES                                     =32
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 17
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00472 ;               bit6 disable                                                            =64
                      00473 ;               bit7 disable Auto Wheel Slip                            =128
  000000BB            00474 SCV_FEATURE4_DISABLE    ;CV188  0-254 [0]  BIT values to disable additional features4
                      00475 ;               bit0 disable Traction Motor             = 1 Disabled
                      00476 ;               bit1 disable HILO HORN                                          =2
                      00477 ;               bit2 disable 3                                                          =4;
                      00478 ;               bit3 disable 4                                                          =8
                      00479 ;               bit4 disable 5                                                          =16
                      00480 ;               bit5 disable 6                                                          =32
                      00481 ;               bit6 disable 7                                                          =64
                      00482 ;               bit7 disable 8                                                          =128
  000000BC            00483 SCV_ALARM_VOLUME                                ;CV189 Water Alarm Volume                       0-64    
  000000BD            00484 notSTART_SLIP_SPEED                     ;CV190 Minimum Speed Slip                       0-32    [5]
  000000BE            00485 notSTOKER_OIL_PUMP_RUN_TIME     ;CV191 Stoker/oil pump run time                         0-254   [20]    
  000000BF            00486 notDRIFT_VOLUME                         ;CV191 Drift Volume                                     0-64    
  000000C0            00487 SCV_CUTOFF_HORN_SPEED                   ;CV192 Cutoff Speed for LONG HORN       4-9     [9]
                      00488 ; extended definitions for indexing:
  000000C1            00489 SCV_SOUND_PROJ_TYPE ;CV193      Sound Project TYPE      0-255   [0]
                      00490 ;Possible Values are :
                      00491 ;       : Index  Decimal        HEX                     Bit
                      00492 ;       :                                                               7654 3210
                      00493 ;       :       1               0               0x00            0000 0000               Steam Coal
                      00494 ;       :       2               1               0x01            0000 0001               Steam Oil
                      00495 ;       :       3               2               0x02            0000 0010               Steam Coal  Arti
                      00496 ;       :       4               3               0x03            0000 0011               Steam Oil Articu
                      00497 ;       :       5               4               0x04            0000 0100               Steam Geared    
                      00498 ;       :       9               8               0x08            0000 1000               Steam non-fired 
                      00499 ;       :       81              80              0x50            0101 0000               Gas Carbody / Do
                      00500 ;       :       127             128             0x80            1000 0000               Diesel
                      00501 ;       :       145             144             0x90            1001 0000               Diesel Carbody  
                      00502 ;       :       193             192             0xC0            1100 0000               Diesel Dual Moto
                      00503 ;       :       225             224             0xE0            1110 0000               Diesel Dual Moto
                      00504 ;       :       241             240             0xF0            1111 0000               Diesel Boxcab
                      00505 ;       :       137             136             0x88            1000 1000               Traction
  000000C2            00506 SCV_SOUND_PROJ_MEMREQ ;CV194 Sound Project Memory Required [1=512kb, 2=1024kb, 3=8mb, 4=4mb, 8=8mb, 16=1
  000000C3            00507 SCV_SOUND_PROJ_JMRIDEF ;CV195 Sound Project JMRI Definition (0-255)
  000000C4            00508 SCV_196 ;RESERVED 
  000000C5            00509 SCV_197 ;RESERVED 
  000000C6            00510 SCV_198 ;RESERVED 
  000000C7            00511 SCV_199 ;RESERVED 
  000000C8            00512 SCV_200 ;RESERVED 
  000000C9            00513 SCV_201 ;RESERVED (121)
  000000CA            00514 SCV_202 ;NON_SOUND_JMRIDEF ; JMRI Definition (0-255) 
  000000CB            00515 SCV_203 ;Decoder Memory Available (read only) [1=512kb, 2=1024kb, 3=8mb, 4=4mb, 8=8mb, 16=16mb].
  000000CC            00516 SCV_TEST ;CV204 TEST (99) 
                      00517 
                      00518         ENDC
                      00519  
                      00520 ;----------------------------------------
                      00521 ;PREDEFINED lo CV's with .7=1
  00000000            00522 SCV_CV1         equ     (1-1)
  00000002            00523 SCV_CV3         equ     (3-1)
  00000003            00524 SCV_CV4         equ     (4-1)
  00000007            00525 SCV_CV8         equ     (8-1)
                      00526 
  00000012            00527 SCV_CV19        equ     (19-1)
  00000014            00528 SCV_CV21        equ     (21-1)
  00000015            00529 SCV_CV22        equ     (22-1)
  00000016            00530 SCV_CV23        equ     (23-1)
  00000017            00531 SCV_CV24        equ     (24-1)
  0000001C            00532 SCV_CV29        equ     (29-1)
  00000030            00533 SCV_CV49        equ     (49-1)
  00000035            00534 SCV_CV54        equ     (54-1)
  00000039            00535 SCV_CV58        equ     (58-1)
  0000003B            00536 SCV_CV60        equ     (60-1)
  0000003F            00537 SCV_CV64        equ     (64-1)
                      00538 ;test values
  00000068            00539 SCV_CV105       equ     (105-1)
  00000069            00540 SCV_CV106       equ     (106-1)
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 18
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000078            00541 SCV_CV121       equ     (121-1)
  00000079            00542 SCV_CV122       equ     (122-1)
  0000007A            00543 SCV_CV123       equ     (123-1)
  00000098            00544 SCV_CV153       equ     (153-1)
  0000009F            00545 SCV_CV160       equ     (160-1)
                      00546 
                      00547 ;SCHEME intents
  00000000            00548 SCHEME_TYPE_DIESEL      EQU     0       ;       
                      00549 
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 19
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00550         PAGE
                      00551         
                      00552 ;-----------------------------------------
                      00553 ;   SYSTEM VARIABLES
                      00554 ;-----------------------------------------
  00000019            00555 AuthorCode   EQU   0x19   ; AUTHOR code John McMasters (ID CV=25)
                      00556 ;------------------------------------------------------------------
                      00557 ;   LOCAL VARIABLES (Work Registers and Work_User Memory Registers)                                     
                      00558 ;------------------------------------------------------------------
                      00559 ;WORK_SPEED               EQU   0x00
                      00560 ;WORK_NOTCH               EQU   0x01
                      00561 ;WORK_SERVO               EQU   0x02
                      00562 ;WORK_MVOLTS      EQU   0x03
                      00563 ;WORK_USER_LINES  EQU   0x05
                      00564 ;WORK_TIMEBASE    EQU   0x06
                      00565 ;WORK_STATUS_BITS EQU   0x07
                      00566 ;WORK_GLBL_GAIN   EQU   0x08
                      00567 ;WORK_GAIN_TRIM   EQU   0x09
                      00568 ;WORK_PITCH_TRIM  EQU   0x0A
                      00569 ;WORK_SPEED_DELTA EQU   0x0B
                      00570 ;WORK_SCATTER4    EQU   0x10
                      00571 ;WORK_SCATTER5    EQU   0x11
                      00572 ;WORK_SCATTER6    EQU   0x12
                      00573 ;WORK_SCATTER7    EQU   0x13
                      00574 ;WORK_ACHNL_7F    EQU   0x14
                      00575 ;WORK_ACHNL_7E    EQU   0x15
                      00576 ;WORK_SKAT_FAST   EQU   0x16
                      00577 ;WORK_SKAT_SLOW   EQU   0x17
                      00578 ;WORK_DISTANCE    EQU   0x18
                      00579 ;WORK_PEAK_SPD    EQU   0x19
                      00580 ;----------------------------------------
                      00581 ;   LOCAL VARIABLES (Work_User Memory Registers)                                       
                      00582 ;----------------------------------------
  0000001A            00583 COUNT_LOOP              EQU WORK_USER_0 ; used to count n times
  0000001B            00584 PREV_NOTCH              EQU WORK_USER_1 ; used to remember previous Notch       0x00 - 0x70 [run notches
                      00585 
  0000001C            00586 VARY_LOAD               EQU WORK_USER_2 ; used to vary scale from outside motor sound loop      ;range 1
  0000001D            00587 AIR_PRESS               EQU WORK_USER_3 ; used to save current air or brake pressure
                      00588                                                                 ;from 90 PSI = Pounds per Square Inch to
                      00589 ;                                                               ; used to branch to gain set with consta
  0000001E            00590 USER_INTLK_BITS EQU WORK_USER_4 ; used for simple On/Off State Machines 
                      00591         ;================== TABLE OF COMP BITS INVOLVED ==============
                      00592         ;=== COMP_bit7 =VARY_DRIFT_MASK7=               EQU     0x80    ;MASK just do bit7      Vary aut
                      00593         ;=== COMP_bit6 =STATIC_MAINT_MASK6=     EQU     0x40    ;MASK just do bit6      STATIC MAINTENAN
                      00594         ;=== COMP_bit5 =COUPLER_MASK5=                  EQU     0x20    ;MASK just do bit5      AUTO COU
                      00595         ;=== COMP_bit4 =CYLCOCK_MASK4=                  EQU     0x10    ;MASK just do bit4      OPEN CYL
                      00596         ;=== COMP_bit3 =DYN_CTRL_MASK3=                 EQU     0x08    ;MASK just do bit3      NOT_USED
                      00597         ;=== COMP_bit2 =AUTO_BRAKE_MASK2=               EQU     0x04    ;MASK just do bit2      AUTOMATI
                      00598         ;=== COMP_bit1 =START_MASK1=                    EQU     0x02    ;MASK just do bit1      STARTUP 
                      00599         ;=== COMP_bit0 =COMP_MASK0=                             EQU     0x01    ;MASK just do bit0      
                      00600         ;example MASK_COMPARE   USER_INTLK_BITS,IMMED_DATA,CYLCOCK_MASK4,~CYLCOCK_MASK4,SKIP_SAME       
                      00601         ;example LOAD_MODIFIER  MTYPE_WORK_IMMED,FMATH_OR+USER_INTLK_BITS,CYLCOCK_MASK4,MERGE_ALL_MASK  
                      00602         ;example LOAD_MODIFIER  MTYPE_WORK_IMMED,FMATH_AND+USER_INTLK_BITS,~CYLCOCK_MASK4,MERGE_ALL_MASK
                      00603         ;OR=SETtheBit 
                      00604         ;AND=FLIPtheBit
                      00605         ;example interlock is set on bit is =1) (i.e. DRIFTING IS OFF)
                      00606         ;example LOAD_MODIFIER  MTYPE_WORK_IMMED,FMATH_OR+USER_INTLK_BITS,VARY_DRIFT_MASK7,MERGE_ALL_MAS
                      00607         ;example unset drift interlock: (DRIFTING IS ON)
                      00608         ;example LOAD_MODIFIER  MTYPE_WORK_IMMED,FMATH_AND+USER_INTLK_BITS,~VARY_DRIFT_MASK7,MERGE_ALL_M
                      00609         
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 20
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00610         PAGE
                      00611         
                      00612         
                      00613 ;================================================
                      00614 ;Start Scheme 0 DIESEL CV60
                      00615 ;================================================
000000                00616         ORG     0
                      00617 ;PRIORITIZED initiate LIST and SOUND tasks
                      00618 ;DIESEL RUN scheme 0
                      00619         SKEME_START     SCHEME_TYPE_DIESEL
  00000000                M SKEME_BASE      SET     $                               ;for offset calc
000000 00F1 EC0E          M                 DB      CMD_SKEME_START,(SCHEME_TYPE_DIESEL &0x1F), high((SKEME_NEXT0-$)+2), low((SKEME_
                      00620         SDL_VERSION VERSION_2
000004 2082               M                 DB      CMD_MARK_VERSION,VERSION_2
                      00621 ;------------------------------------------------
                      00622 ;Start Channel 1        
                      00623 ;------------------------------------------------
000006                00624 CH1SC0_BEGIN
                      00625         CHANNEL_START   1               ;typically PRIME mover channel
000006 0181               M                 DB      CMD_START_CHNL,1
                          M ;CTEMP += 1
                      00626 ;UC1.0================
                      00627 ; ====================================================================
                      00628 ;       1) StartSound routines use default global gain set to 
                      00629 ;               zero and only reset on SF8, SF0, SF1, SF26, or SF29
                      00630 ;       UNLESS:
                      00631 ;CV187 bit values to disable additional features3       
                      00632 ;               bit4 disable Startup Muted                                      =16
                      00633 ; ====================================================================
                      00634         ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                      00635         ;     INITIALIZE SETTINGS       
                      00636         ;       THIS ROUTINE IS CH1_ primary PERSISTENT (NOT INTERRUPTABLE)
                      00637         ; ---------------------------------------------------------
                      00638 ;UC1.1================
                      00639 ;--------------------------------
                      00640 ;THIS SEQUENCE starts the diesel when POR and ADDRESSED (OR DC power ON)
                      00641 ;     INITIALIZE SETTINGS AND PLAY "STARTUP"                              
                      00642 ; ---------------------------------------------------------
                      00643 ;UC1.3================
                      00644         INITIATE_SOUND  TRIG_SND_ACTV11,NORMAL+NO_PREEMPT_TRIG  ;run ONCE no BRK before CV11 begins IDLE
000008 0F94               M                 DB      CMD_INITIATE_SND + ((NORMAL+NO_PREEMPT_TRIG) & 0x07), TRIG_SND_ACTV11 +((NORMAL+
  00000001                M ICNT += 1
                          M 
                      00645         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_LODE+PREV_NOTCH,0,0    ;Set value initial
00000A 1BE6 0000          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_LODE+PREV_NOTCH,0,0
                      00646         
00000E                00647 CH1SC0_RESELECT
                      00648         ;bit4 disable CV187 bit4 =0 startup, operator must toggle SF8 to begin...
                      00649         MASK_COMPARE    SCV_FEATURE3_DISABLE,IMMED_DATA,0x00,COMP_bit4,SKIP_SAME                ;SKIP_LE
00000E BAFC EF00          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_FEATURE3_DISABLE,0x00,COMP_bit4
                      00650                 GENERATE_TRIGGER  TRIG_SMUTE_ON                 ;be sure MUTE releases
000012 13B1               M                 DB      CMD_BLIP_TRIGGER, TRIG_SMUTE_ON 
                      00651         
                      00652         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_MOVING                                  ;test MUTE/Moving
000014 0E04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_MOVING 
                      00653                 BRANCH_TO       CH1SC0_SKIP_STARTSOUND
                          M         
                          M         if      (CH1SC0_SKIP_STARTSOUND-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_SKIP_STARTSOUND range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000016 6AC1               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_SKIP_STARTSOUND-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      00654         
                      00655         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_LIGHTS_ON                       
000018 0C04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_LIGHTS_ON 
                      00656                 BRANCH_TO       CH1SC0_SKIP_STARTSOUND  
                          M         
                          M         if      (CH1SC0_SKIP_STARTSOUND-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 21
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                 error   CH1SC0_SKIP_STARTSOUND range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00001A 6AC1               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_SKIP_STARTSOUND-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      00657                 
                      00658         MASK_COMPARE    WORK_SPEED,IMMED_DATA,0x01,COMP_ALL,SKIP_LESS ;when moving
00001C 00FE 0001          M                 DB      CMD_MASK_COMPARE+SKIP_LESS+IMMED_DATA,WORK_SPEED,0x01,COMP_ALL
                      00659                 BRANCH_TO       CH1SC0_SKIP_STARTSOUND
                          M         
                          M         if      (CH1SC0_SKIP_STARTSOUND-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_SKIP_STARTSOUND range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000020 6AC1               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_SKIP_STARTSOUND-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      00660                 
000022                00661 CH1SC0_START_MUTE
                      00662         LOAD_MODIFIER   MTYPE_WORK_IMMED,WORK_GLBL_GAIN,0x01,MERGE_ALL_MASK  ; full MUTE
000022 08E6 0001          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),WORK_GLBL_GAIN,0x01,MERGE_ALL_MASK
                      00663         ;16) 1/31/17 Interlock: STATUS: 
                      00664         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_LODE+USER_INTLK_BITS,0,0         ;CLEAR ALL 8 BITS ;Disab
000026 1EE6 0000          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_LODE+USER_INTLK_BITS,0,0
                      00665 
                      00666         ;=============== LOOP STARTS HERE::::::::
00002A                00667 CH1SC0_START1
                      00668         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_OR+USER_INTLK_BITS,CYLCOCK_MASK4,MERGE_ALL_MASK  ;OR=SETt
00002A 5EE6 0010          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_OR+USER_INTLK_BITS,CYLCOCK_MASK4,M
                      00669         ;buffer MUTE action
                      00670         PLAY     HNDL_SC0_MUTE,no_loop,loop_STD          
                          M         list ;2 byte PLAY  [HANDLE]
00002E 0040               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_MUTE & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      00671 
                      00672         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_MOVING                                  ;test MUTE/Moving
000030 0E04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_MOVING 
                      00673                 BRANCH_TO       CH1SC0_SKIP_STARTSOUND
                          M         
                          M         if      (CH1SC0_SKIP_STARTSOUND-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_SKIP_STARTSOUND range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000032 6AC1               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_SKIP_STARTSOUND-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      00674 
                      00675         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_LIGHTS_ON                                               ;test MU
000034 0C04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_LIGHTS_ON 
                      00676                 BRANCH_TO       CH1SC0_RESTART_UNMUTE
                          M         
                          M         if      (CH1SC0_RESTART_UNMUTE-SKEME_BASE) > 0xFFF          ;check branch size in SCHEME
                          M                 error   CH1SC0_RESTART_UNMUTE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000036 68C0               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RESTART_UNMUTE-SKEME_BASE)) & 0x0F) , low (CH1SC0_
                          M         endif
                          M                 
                      00677 
                      00678         ;MAY STILL BE MUTE HERE
                      00679         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_ELIGHTS_ON      ; But skip if SF5 is OFF
000038 1004               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_ELIGHTS_ON 
                      00680                 BRANCH_TO       CH1SC0_RESTART_UNMUTE
                          M         
                          M         if      (CH1SC0_RESTART_UNMUTE-SKEME_BASE) > 0xFFF          ;check branch size in SCHEME
                          M                 error   CH1SC0_RESTART_UNMUTE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00003A 68C0               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RESTART_UNMUTE-SKEME_BASE)) & 0x0F) , low (CH1SC0_
                          M         endif
                          M                 
                      00681                 
                      00682         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_SMUTE_ON                                                ;test MU
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 22
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00003C 1304               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_SMUTE_ON 
                      00683                 BRANCH_TO       CH1SC0_RESTART_UNMUTE
                          M         
                          M         if      (CH1SC0_RESTART_UNMUTE-SKEME_BASE) > 0xFFF          ;check branch size in SCHEME
                          M                 error   CH1SC0_RESTART_UNMUTE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00003E 68C0               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RESTART_UNMUTE-SKEME_BASE)) & 0x0F) , low (CH1SC0_
                          M         endif
                          M                 
                      00684                 
                      00685         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_ESTOP_ON        
000040 1604               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_ESTOP_ON 
                      00686             BRANCH_TO   CH1SC0_RESTART_UNMUTE
                          M         
                          M         if      (CH1SC0_RESTART_UNMUTE-SKEME_BASE) > 0xFFF          ;check branch size in SCHEME
                          M                 error   CH1SC0_RESTART_UNMUTE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000042 68C0               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RESTART_UNMUTE-SKEME_BASE)) & 0x0F) , low (CH1SC0_
                          M         endif
                          M                 
                      00687 
                      00688         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_LIGHTS_ON                                               ;test MU
000044 0C04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_LIGHTS_ON 
                      00689                 BRANCH_TO       CH1SC0_RESTART_UNMUTE
                          M         
                          M         if      (CH1SC0_RESTART_UNMUTE-SKEME_BASE) > 0xFFF          ;check branch size in SCHEME
                          M                 error   CH1SC0_RESTART_UNMUTE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000046 68C0               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RESTART_UNMUTE-SKEME_BASE)) & 0x0F) , low (CH1SC0_
                          M         endif
                          M                 
                      00690         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_BELLS_ON                                                ;test MU
000048 0804               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_BELLS_ON 
                      00691                 BRANCH_TO       CH1SC0_RESTART_UNMUTE
                          M         
                          M         if      (CH1SC0_RESTART_UNMUTE-SKEME_BASE) > 0xFFF          ;check branch size in SCHEME
                          M                 error   CH1SC0_RESTART_UNMUTE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00004A 68C0               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RESTART_UNMUTE-SKEME_BASE)) & 0x0F) , low (CH1SC0_
                          M         endif
                          M                 
                      00692         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_HORNS_ON                                                ;test MU
00004C 0904               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_HORNS_ON 
                      00693                 BRANCH_TO       CH1SC0_RESTART_UNMUTE
                          M         
                          M         if      (CH1SC0_RESTART_UNMUTE-SKEME_BASE) > 0xFFF          ;check branch size in SCHEME
                          M                 error   CH1SC0_RESTART_UNMUTE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00004E 68C0               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RESTART_UNMUTE-SKEME_BASE)) & 0x0F) , low (CH1SC0_
                          M         endif
                          M                 
                      00694         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_COUPLE_ON                                               ;test MU
000050 0A04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_COUPLE_ON 
                      00695                 BRANCH_TO       CH1SC0_RESTART_UNMUTE
                          M         
                          M         if      (CH1SC0_RESTART_UNMUTE-SKEME_BASE) > 0xFFF          ;check branch size in SCHEME
                          M                 error   CH1SC0_RESTART_UNMUTE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000052 68C0               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RESTART_UNMUTE-SKEME_BASE)) & 0x0F) , low (CH1SC0_
                          M         endif
                          M                 
                      00696         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_DYNBRK_ON                                               ;test MU
000054 0B04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_DYNBRK_ON 
                      00697                 BRANCH_TO       CH1SC0_RESTART_UNMUTE
                          M         
                          M         if      (CH1SC0_RESTART_UNMUTE-SKEME_BASE) > 0xFFF          ;check branch size in SCHEME
                          M                 error   CH1SC0_RESTART_UNMUTE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000056 68C0               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RESTART_UNMUTE-SKEME_BASE)) & 0x0F) , low (CH1SC0_
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 23
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         endif
                          M                 
                      00698         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_DITCHL_ON                                               ;test MU
000058 1104               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_DITCHL_ON 
                      00699                 BRANCH_TO       CH1SC0_RESTART_UNMUTE
                          M         
                          M         if      (CH1SC0_RESTART_UNMUTE-SKEME_BASE) > 0xFFF          ;check branch size in SCHEME
                          M                 error   CH1SC0_RESTART_UNMUTE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00005A 68C0               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RESTART_UNMUTE-SKEME_BASE)) & 0x0F) , low (CH1SC0_
                          M         endif
                          M                 
                      00700 
                      00701         MASK_COMPARE    WORK_SPEED,IMMED_DATA,0x01,COMP_ALL,SKIP_LESS ;when moving
00005C 00FE 0001          M                 DB      CMD_MASK_COMPARE+SKIP_LESS+IMMED_DATA,WORK_SPEED,0x01,COMP_ALL
                      00702                 BRANCH_TO       CH1SC0_RESTART_UNMUTE
                          M         
                          M         if      (CH1SC0_RESTART_UNMUTE-SKEME_BASE) > 0xFFF          ;check branch size in SCHEME
                          M                 error   CH1SC0_RESTART_UNMUTE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000060 68C0               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RESTART_UNMUTE-SKEME_BASE)) & 0x0F) , low (CH1SC0_
                          M         endif
                          M                 
                      00703 
                      00704         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_MOVING                                  ;test MUTE/Moving
000062 0E04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_MOVING 
                      00705                 BRANCH_TO       CH1SC0_RESTART_UNMUTE
                          M         
                          M         if      (CH1SC0_RESTART_UNMUTE-SKEME_BASE) > 0xFFF          ;check branch size in SCHEME
                          M                 error   CH1SC0_RESTART_UNMUTE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000064 68C0               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RESTART_UNMUTE-SKEME_BASE)) & 0x0F) , low (CH1SC0_
                          M         endif
                          M                 
                      00706         
                      00707         ;=================LOOP HERE==================================
                      00708         ;else no sounds
                      00709         BRANCH_TO       CH1SC0_START1   ;KEEP LOOPING TILL A F-KEY IS PRESSED
                          M         
                          M         if      (CH1SC0_START1-SKEME_BASE) > 0xFFF                  ;check branch size in SCHEME
                          M                 error   CH1SC0_START1 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000066 2AC0               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_START1-SKEME_BASE)) & 0x0F) , low (CH1SC0_START1-S
                          M         endif
                          M                 
                      00710         ;=================LOOP HERE==================================
                      00711         
000068                00712 CH1SC0_RESTART_UNMUTE                                                           ;SF8 OFF-UNMUTE!
                      00713         LOAD_MODIFIER   MTYPE_WORK_IMMED,WORK_GLBL_GAIN,DEFAULT_GLBL_GAIN,MERGE_ALL_MASK        ;load WO
000068 08E6 00C0          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),WORK_GLBL_GAIN,DEFAULT_GLBL_GAIN,MERGE_A
                      00714         ;COULD STILL BE MUTE HERE (SEE ABOVE)
                      00715         LOAD_MODIFIER   MTYPE_BLEND,BLEND_CURRENT_CHNL+BLEND_GAIN0+BLEND_FASE0,0,0      ;blend immed
00006C 00E3 0000          M                 DB      CMD_LOAD_MODIFY+(MTYPE_BLEND&0x0F),BLEND_CURRENT_CHNL+BLEND_GAIN0+BLEND_FASE0,0,
                      00716         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_LODE+WORK_PEAK_SPD,00,0  ;clear WORK_PEAK_SPD    
000070 19E6 0000          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_LODE+WORK_PEAK_SPD,00,0
                      00717                 
                      00718         MASK_COMPARE WORK_STATUS_BITS,IMMED_DATA,0x0,0xFE,SKIP_SAME     ;0      254
000074 07FC FE00          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,WORK_STATUS_BITS,0x0,0xFE
                      00719         BRANCH_TO       CH1SC0_SKIP_STARTSOUND
                          M         
                          M         if      (CH1SC0_SKIP_STARTSOUND-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_SKIP_STARTSOUND range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000078 6AC1               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_SKIP_STARTSOUND-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      00720          
                      00721         MASK_COMPARE    WORK_SPEED,IMMED_DATA,1,COMP_ALL,SKIP_LESS ;when moving
00007A 00FE 0001          M                 DB      CMD_MASK_COMPARE+SKIP_LESS+IMMED_DATA,WORK_SPEED,1,COMP_ALL
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 24
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00722             BRANCH_TO   CH1SC0_SKIP_STARTSOUND
                          M         
                          M         if      (CH1SC0_SKIP_STARTSOUND-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_SKIP_STARTSOUND range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00007E 6AC1               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_SKIP_STARTSOUND-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      00723                 
000080                00724 CH1SC0_STARTER2
                      00725         ;=========================
                      00726         ;test PRIMARY decoder STATUS:   
                      00727         ;================== TABLE OF COMP BITS INVOLVED ==============
                      00728         ;=== COMP_bit7 =MATH=           EQU     0x7F                    ;MASK just do bit7
                      00729         ;=== COMP_bit6 =IDLELOCK=       EQU     0xBF                    ;MASK just do bit6
                      00730         ;=== COMP_bit5 =INTERLOCK=      EQU     0xDF                    ;MASK just do bit5
                      00731         ;=== COMP_bit4 =SPDDELTA=       EQU     0xEF                    ;MASK just do bit4
                      00732         ;=== COMP_bit3 =ACEL=           EQU     0xF7                    ;MASK just do bit3
                      00733         ;=== COMP_bit2 =RUN=            EQU     0xFB                    ;MASK just do bit2
                      00734         ;=== COMP_bit1 =DIRNOW=         EQU     0xFD                    ;MASK just do bit1
                      00735         ;=== COMP_bit0 =ANALOG=         EQU     0xFE                    ;MASK just do bit0
                      00736 ;-
                      00737         MASK_COMPARE    WORK_STATUS_BITS,IMMED_DATA,0x00,~WKSB_ANALOG_MASK,SKIP_SAME ;see if ANALOG=0/DC
000080 07FC FE00          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,WORK_STATUS_BITS,0x00,~WKSB_ANALOG_MASK
000084                00738 CH1SC0_DC_START
                      00739                 BRANCH_TO       CH1SC0_SERVO_ENABLE     ;ANALOG status bit=1, is DC -> NO START sequence
                          M         
                          M         if      (CH1SC0_SERVO_ENABLE-SKEME_BASE) > 0xFFF            ;check branch size in SCHEME
                          M                 error   CH1SC0_SERVO_ENABLE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000084 72C1               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_SERVO_ENABLE-SKEME_BASE)) & 0x0F) , low (CH1SC0_SE
                          M         endif
                          M                 
                      00740 ;--     otherwise
                      00741          SKIP_ON_TRIGGER        TRIG_FALSE,TRIG_LIGHTS_ON                                               
000086 0C04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_LIGHTS_ON 
                      00742                 BRANCH_TO       CH1SC0_SKIP_STARTSOUND
                          M         
                          M         if      (CH1SC0_SKIP_STARTSOUND-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_SKIP_STARTSOUND range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000088 6AC1               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_SKIP_STARTSOUND-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      00743                 
00008A                00744 CH1SC0_DCC_START
                      00745 ;       skip start sounds when moving or headlight is already on -- to prevent issues when electrical co
                      00746         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_B   ;use VOL control
00008A 80E1 0B8B          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_B
                      00747         LOAD_MODIFIER   MTYPE_WORK_IMMED,WORK_GLBL_GAIN,DEFAULT_GLBL_GAIN,MERGE_ALL_MASK  ;STD full volu
00008E 08E6 00C0          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),WORK_GLBL_GAIN,DEFAULT_GLBL_GAIN,MERGE_A
                      00748 
                      00749         ; Check STARTUP SOUNDS INTERLOCK if Disabled
                      00750         MASK_COMPARE    USER_INTLK_BITS,IMMED_DATA,START_MASK1,~START_MASK1,SKIP_SAME   ;TEST BIT1 FOR T
000092 1EFC FD02          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,USER_INTLK_BITS,START_MASK1,~START_MASK1
                      00751                 BRANCH_TO       CH1SC0_SKIP_STARTSOUND
                          M         
                          M         if      (CH1SC0_SKIP_STARTSOUND-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_SKIP_STARTSOUND range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000096 6AC1               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_SKIP_STARTSOUND-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      00752                 
                      00753         MASK_COMPARE    0x7,IMMED_DATA,0x0,0xFE,SKIP_SAME               ;test bit 1 WKSB_ANALOG_BIT  of 
000098 07FC FE00          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,0x7,0x0,0xFE
                      00754                 BRANCH_TO       CH1SC0_SKIP_STARTSOUND
                          M         
                          M         if      (CH1SC0_SKIP_STARTSOUND-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 25
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                 error   CH1SC0_SKIP_STARTSOUND range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00009C 6AC1               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_SKIP_STARTSOUND-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      00755                         
                      00756         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_LIGHTS_ON       ; But skip if SF0 was previously on
00009E 0C04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_LIGHTS_ON 
                      00757                 BRANCH_TO  CH1SC0_SKIP_STARTSOUND
                          M         
                          M         if      (CH1SC0_SKIP_STARTSOUND-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_SKIP_STARTSOUND range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0000A0 6AC1               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_SKIP_STARTSOUND-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      00758 
                      00759         ;       WKSB_RUN_BIT    EQU     2               ;0= stop motor PWM, non-primemover sounds RUN
                      00760 ;******************************************************** UNLESS SF0 IS ON THE MOTOR WILL NOT RUN UNTIL 
                      00761         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_AND+WORK_STATUS_BITS,~WKSB_RUN_MASK,MERGE_ALL_MASK       
0000A2 27E6 00FB          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_AND+WORK_STATUS_BITS,~WKSB_RUN_MAS
                      00762         
                      00763         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_MOVING  
0000A6 0E04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_MOVING 
                      00764                 BRANCH_TO       CH1SC0_SKIP_STARTSOUND  
                          M         
                          M         if      (CH1SC0_SKIP_STARTSOUND-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_SKIP_STARTSOUND range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0000A8 6AC1               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_SKIP_STARTSOUND-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      00765                 
                      00766         MASK_COMPARE    WORK_SPEED,IMMED_DATA,0x01,COMP_ALL,SKIP_GRTR           ; Check if stopped
0000AA 00FF 0001          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,WORK_SPEED,0x01,COMP_ALL
                      00767                 BRANCH_TO       CH1SC0_NOT_MOVING_YET
                          M         
                          M         if      (CH1SC0_NOT_MOVING_YET-SKEME_BASE) > 0xFFF          ;check branch size in SCHEME
                          M                 error   CH1SC0_NOT_MOVING_YET range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0000AE B2C0               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_NOT_MOVING_YET-SKEME_BASE)) & 0x0F) , low (CH1SC0_
                          M         endif
                          M                 
                      00768         BRANCH_TO       CH1SC0_SKIP_STARTSOUND
                          M         
                          M         if      (CH1SC0_SKIP_STARTSOUND-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_SKIP_STARTSOUND range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0000B0 6AC1               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_SKIP_STARTSOUND-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      00769         
0000B2                00770 CH1SC0_NOT_MOVING_YET
                      00771 ;--
                      00772 ;======================================================
0000B2                00773 CH1SC0_STARTSOUND
                      00774         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_B   ;use VOL control
0000B2 80E1 0B8B          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_B
                      00775 
                      00776         ;       WKSB_RUN_BIT    EQU     2               ;0= stop motor PWM, non-primemover sounds RUN
                      00777         ;       bit2 disable startup sounds
                      00778         MASK_COMPARE    SCV_FEATURE_DISABLE,IMMED_DATA,0x01,COMP_bit2,SKIP_SAME         ;SKIP_LESSSKIP_G
0000B6 B8FC FB01          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_FEATURE_DISABLE,0x01,COMP_bit2
                      00779                 BRANCH_TO       CH1SC0_SKIP_STARTSOUND                  ;Skipped when ARG1 = ARG2       
                          M         
                          M         if      (CH1SC0_SKIP_STARTSOUND-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_SKIP_STARTSOUND range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0000BA 6AC1               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_SKIP_STARTSOUND-SKEME_BASE)) & 0x0F) , low (CH1SC0
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 26
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         endif
                          M                 
                      00780         
                      00781         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_LIGHTS_ON       ; But skip if SF0 was previously on
0000BC 0C04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_LIGHTS_ON 
                      00782                 BRANCH_TO       CH1SC0_SKIP_STARTSOUND
                          M         
                          M         if      (CH1SC0_SKIP_STARTSOUND-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_SKIP_STARTSOUND range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0000BE 6AC1               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_SKIP_STARTSOUND-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      00783         
                      00784         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_STARTUP_ON      ;if SF30 was previously on
0000C0 2904               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_STARTUP_ON 
                      00785                 BRANCH_TO       CH1SC0_PRIME_FUEL
                          M         
                          M         if      (CH1SC0_PRIME_FUEL-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH1SC0_PRIME_FUEL range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0000C2 DCC0               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_PRIME_FUEL-SKEME_BASE)) & 0x0F) , low (CH1SC0_PRIM
                          M         endif
                          M                 
                      00786         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_LETOFF_ON       ;if SF19 was previously on
0000C4 1E04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_LETOFF_ON 
                      00787                 BRANCH_TO       CH1SC0_PRIME_FUEL
                          M         
                          M         if      (CH1SC0_PRIME_FUEL-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH1SC0_PRIME_FUEL range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0000C6 DCC0               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_PRIME_FUEL-SKEME_BASE)) & 0x0F) , low (CH1SC0_PRIM
                          M         endif
                          M                 
                      00788 
                      00789         MASK_COMPARE WORK_SPEED,IMMED_DATA,0x01,COMP_ALL,SKIP_GRTR ;when moving
0000C8 00FF 0001          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,WORK_SPEED,0x01,COMP_ALL
                      00790                 BRANCH_TO       CH1SC0_START_ALARM
                          M         
                          M         if      (CH1SC0_START_ALARM-SKEME_BASE) > 0xFFF             ;check branch size in SCHEME
                          M                 error   CH1SC0_START_ALARM range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0000CC D0C0               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_START_ALARM-SKEME_BASE)) & 0x0F) , low (CH1SC0_STA
                          M         endif
                          M                 
                      00791         BRANCH_TO       CH1SC0_SKIP_STARTSOUND
                          M         
                          M         if      (CH1SC0_SKIP_STARTSOUND-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_SKIP_STARTSOUND range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0000CE 6AC1               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_SKIP_STARTSOUND-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      00792         
                      00793         ;;;;;;;;;;;;;;;;; BEGIN STARTUP SOUNDS :::::::::::::::::::      
0000D0                00794 CH1SC0_START_ALARM      
                      00795         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_B
0000D0 80E1 0B8B          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_B
                      00796         ;;;;;; this section IS fuel prime once for Gen1 diesels and warning bells for Gen2 diesels
                      00797         MASK_COMPARE    SCV_FEATURE_DISABLE,IMMED_DATA,0x01,COMP_bit7,SKIP_SAME         
0000D4 B8FC 7F01          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_FEATURE_DISABLE,0x01,COMP_bit7
                      00798                 BRANCH_TO       CH1SC0_PRIME_FUEL                       ;Skipped when =1
                          M         
                          M         if      (CH1SC0_PRIME_FUEL-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH1SC0_PRIME_FUEL range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0000D8 DCC0               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_PRIME_FUEL-SKEME_BASE)) & 0x0F) , low (CH1SC0_PRIM
                          M         endif
                          M                 
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 27
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00799         BRANCH_TO       CH1SC0_NO_FUEL_PRIME
                          M         
                          M         if      (CH1SC0_NO_FUEL_PRIME-SKEME_BASE) > 0xFFF           ;check branch size in SCHEME
                          M                 error   CH1SC0_NO_FUEL_PRIME range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0000DA F6C0               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_NO_FUEL_PRIME-SKEME_BASE)) & 0x0F) , low (CH1SC0_N
                          M         endif
                          M                 
                      00800            
0000DC                00801 CH1SC0_PRIME_FUEL
                      00802         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_C 
0000DC 80E1 0C8B          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_C
                      00803         MASK_COMPARE    SCV_FEATURE_DISABLE,IMMED_DATA,0x01,COMP_bit7,SKIP_SAME         
0000E0 B8FC 7F01          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_FEATURE_DISABLE,0x01,COMP_bit7
                      00804                 PLAY    HNDL_SC0_WARNING_ALARM,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
0000E4 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_WARNING_ALARM & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHE
0000E6 2E00               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_WARNING_ALARM & 0x3F)+((no_loop<<6)&0xC
                          M         list
                      00805         DELAY_SOUND     DELAY_THIS,(150/24),DELAY_GLOBAL        
0000E8 06B5               M                 DB      CMD_DELAY_SND + (DELAY_GLOBAL & 0x01), ((150/24) & 0x7F)+DELAY_THIS 
                      00806 
                      00807         ;cold start
                      00808         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_AND+USER_INTLK_BITS,~START_MASK1,MERGE_ALL_MASK  ;AND=FLI
0000EA 3EE6 00FD          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_AND+USER_INTLK_BITS,~START_MASK1,M
                      00809         PLAY    HNDL_SC0_PRIME_WARN_START,no_loop,loop_STD      
                          M         list ;2 byte PLAY  [HANDLE]
0000EE 0140               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_PRIME_WARN_START & 0x3F)+((no_loop
                          M         list
                      00810         PLAY    HNDL_SC0_PRIME_WARN_LOOP,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
0000F0 0240               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_PRIME_WARN_LOOP & 0x3F)+((no_loop<
                          M         list
                      00811         PLAY    HNDL_SC0_PRIME_WARN_LOOP,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
0000F2 0240               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_PRIME_WARN_LOOP & 0x3F)+((no_loop<
                          M         list
                      00812         PLAY    HNDL_SC0_PRIME_WARN_END,no_loop,loop_STD 
                          M         list ;2 byte PLAY  [HANDLE]
0000F4 0340               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_PRIME_WARN_END & 0x3F)+((no_loop<<
                          M         list
                      00813         
0000F6                00814 CH1SC0_NO_FUEL_PRIME
                      00815         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_DITCHL_ON                                               ;test MU
0000F6 1104               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_DITCHL_ON 
                      00816                 BRANCH_TO       CH1SC0_COLD_START
                          M         
                          M         if      (CH1SC0_COLD_START-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH1SC0_COLD_START range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0000F8 06C1               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_COLD_START-SKEME_BASE)) & 0x0F) , low (CH1SC0_COLD
                          M         endif
                          M                 
                      00817 
                      00818         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_B
0000FA 80E1 0B8B          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_B
                      00819         ;see if INTERLOCK ON    
                      00820         ;       PLAY HNDL_SC0_ABOUT,no_loop,loop_STD    ;DEBUG2
                      00821         ; Check STARTUP SOUNDS INTERLOCK if Disabled
                      00822         MASK_COMPARE    USER_INTLK_BITS,IMMED_DATA,START_MASK1,~START_MASK1,SKIP_SAME   ;TEST BIT1 FOR T
0000FE 1EFC FD02          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,USER_INTLK_BITS,START_MASK1,~START_MASK1
                      00823                 BRANCH_TO       CH1SC0_COLD_START
                          M         
                          M         if      (CH1SC0_COLD_START-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH1SC0_COLD_START range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000102 06C1               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_COLD_START-SKEME_BASE)) & 0x0F) , low (CH1SC0_COLD
                          M         endif
                          M                 
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 28
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00824         BRANCH_TO       CH1SC0_WARM_START       
                          M         
                          M         if      (CH1SC0_WARM_START-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH1SC0_WARM_START range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000104 14C1               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_WARM_START-SKEME_BASE)) & 0x0F) , low (CH1SC0_WARM
                          M         endif
                          M                 
                      00825         
                      00826         
000106                00827 CH1SC0_COLD_START
                      00828         SKIP_ON_TRIGGER TRIG_TRUE,TRIG_MOVING   ; when moving there must have been a short out
000106 0E05               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_TRUE & 0x03), TRIG_MOVING 
                      00829                 PLAY    HNDL_SC0_STARTUP_1ST,no_loop,loop_STD   
                          M         list ;2 byte PLAY  [HANDLE]
000108 0440               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_STARTUP_1ST & 0x3F)+((no_loop<<6)&
                          M         list
                      00830         SKIP_ON_TRIGGER TRIG_TRUE,TRIG_MOVING   ; when moving there must have been a short out
00010A 0E05               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_TRUE & 0x03), TRIG_MOVING 
                      00831                 PLAY    HNDL_SC0_STARTUP_2ND,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
00010C 0540               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_STARTUP_2ND & 0x3F)+((no_loop<<6)&
                          M         list
                      00832                 
                      00833         ;CHECK 
                      00834         MASK_COMPARE    WORK_PEAK_SPD,IMMED_DATA,+1,COMP_ALL,SKIP_GRTR ;compare PREV speed 
00010E 19FF 0001          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,WORK_PEAK_SPD,+1,COMP_ALL
                      00835                 BRANCH_TO       CH1SC0_FINISH_START
                          M         
                          M         if      (CH1SC0_FINISH_START-SKEME_BASE) > 0xFFF            ;check branch size in SCHEME
                          M                 error   CH1SC0_FINISH_START range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000112 18C1               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_FINISH_START-SKEME_BASE)) & 0x0F) , low (CH1SC0_FI
                          M         endif
                          M                 
                      00836                 
000114                00837 CH1SC0_WARM_START
                      00838         SKIP_ON_TRIGGER TRIG_TRUE,TRIG_MOVING   ; when moving there must have been a short out
000114 0E05               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_TRUE & 0x03), TRIG_MOVING 
                      00839                 PLAY    HNDL_SC0_STARTUP_3RD,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
000116 0640               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_STARTUP_3RD & 0x3F)+((no_loop<<6)&
                          M         list
                      00840                 
000118                00841 CH1SC0_FINISH_START
                      00842         SKIP_ON_TRIGGER TRIG_TRUE,TRIG_MOVING   ; when moving there must have been a short out
000118 0E05               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_TRUE & 0x03), TRIG_MOVING 
                      00843                 PLAY    HNDL_SC0_STARTUP_4TH,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
00011A 0740               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_STARTUP_4TH & 0x3F)+((no_loop<<6)&
                          M         list
                      00844 
                      00845         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_B   
00011C 80E1 0B8B          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_B
                      00846 
                      00847         ; Check STARTUP SOUNDS INTERLOCK if Disabled
                      00848         MASK_COMPARE    USER_INTLK_BITS,IMMED_DATA,START_MASK1,~START_MASK1,SKIP_SAME   ;TEST BIT1 FOR T
000120 1EFC FD02          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,USER_INTLK_BITS,START_MASK1,~START_MASK1
                      00849                 BRANCH_TO       CH1SC0_FINISH3
                          M         
                          M         if      (CH1SC0_FINISH3-SKEME_BASE) > 0xFFF                 ;check branch size in SCHEME
                          M                 error   CH1SC0_FINISH3 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000124 28C1               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_FINISH3-SKEME_BASE)) & 0x0F) , low (CH1SC0_FINISH3
                          M         endif
                          M                 
                      00850         BRANCH_TO       CH1SC0_SKIP_STARTSOUND           ;interlock is 00, SKIP 
                          M         
                          M         if      (CH1SC0_SKIP_STARTSOUND-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 29
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                 error   CH1SC0_SKIP_STARTSOUND range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000126 6AC1               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_SKIP_STARTSOUND-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      00851         
000128                00852 CH1SC0_FINISH3
                      00853         ;Disable Start Sounds Play AGAIN
                      00854         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_OR+USER_INTLK_BITS,START_MASK1,MERGE_ALL_MASK    ;OR=SETt
000128 5EE6 0002          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_OR+USER_INTLK_BITS,START_MASK1,MER
                      00855         ;Allow Compressor Run
                      00856         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_OR+USER_INTLK_BITS,COMP_MASK0,MERGE_ALL_MASK     ;OR=SETt
00012C 5EE6 0001          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_OR+USER_INTLK_BITS,COMP_MASK0,MERG
                      00857         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_LIGHTS_ON       ; But skip if SF0 was previously on
000130 0C04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_LIGHTS_ON 
                      00858                 BRANCH_TO       CH1SC0_SKIP_STARTSOUND
                          M         
                          M         if      (CH1SC0_SKIP_STARTSOUND-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_SKIP_STARTSOUND range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000132 6AC1               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_SKIP_STARTSOUND-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      00859         
                      00860         SKIP_ON_TRIGGER TRIG_TRUE,TRIG_SMUTE_ON ; But skip if SF8 was previously MUTED
000134 1305               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_TRUE & 0x03), TRIG_SMUTE_ON 
                      00861                 ;MAX GAIN:      
                      00862                 LOAD_MODIFIER   MTYPE_WORK_IMMED,WORK_GLBL_GAIN,DEFAULT_GLBL_GAIN,MERGE_ALL_MASK  ;STD f
000136 08E6 00C0          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),WORK_GLBL_GAIN,DEFAULT_GLBL_GAIN,MERGE_A
                      00863 
                      00864         ;============== low idle is bit0 value 0
                      00865         ;                               regular idle is bit0 value 1
                      00866         ;==============
                      00867         MASK_COMPARE    SCV_FEATURE2_DISABLE,IMMED_DATA,0x00,COMP_bit0,SKIP_SAME                ;SKIP_LE
00013A B9FC FE00          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_FEATURE2_DISABLE,0x00,COMP_bit0
                      00868                 BRANCH_TO       CH1SC0_RUNIDLE6 ;bit0 disable Diesel Low Idle=1 Enabled=0       =1
                          M         
                          M         if      (CH1SC0_RUNIDLE6-SKEME_BASE) > 0xFFF                ;check branch size in SCHEME
                          M                 error   CH1SC0_RUNIDLE6 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00013E 44C1               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RUNIDLE6-SKEME_BASE)) & 0x0F) , low (CH1SC0_RUNIDL
                          M         endif
                          M                 
                      00869         
000140                00870 CH1SC0_RUNNOTCH1                ;increase idle to run1
                      00871         PLAY    HNDL_SC0_RUN_HIGH_IDLE,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
000140 1240               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_RUN_HIGH_IDLE & 0x3F)+((no_loop<<6
                          M         list
                      00872         PLAY    HNDL_SC0_INC_H1,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
000142 0940               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_INC_H1 & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      00873         
000144                00874 CH1SC0_RUNIDLE6
                      00875         PLAY    HNDL_SC0_RUN_1,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
000144 1340               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_RUN_1 & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      00876         ;Allow Compressor Run
                      00877         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_OR+USER_INTLK_BITS,COMP_MASK0,MERGE_ALL_MASK     ;OR=SETt
000146 5EE6 0001          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_OR+USER_INTLK_BITS,COMP_MASK0,MERG
                      00878 
00014A                00879 CH1SC0_RUNIDLE7
                      00880         MASK_COMPARE    SCV_FEATURE_DISABLE,IMMED_DATA,0x00,COMP_bit0,SKIP_SAME         ;SKIP_LESSSKIP_G
00014A B8FC FE00          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_FEATURE_DISABLE,0x00,COMP_bit0
                      00881                 ;PLAY   HNDL_SC0_GEN1_TRANSITION,no_loop,loop_STD
                      00882                 BRANCH_TO       CH1SC0_GEN1_IDLE_RUN_TRANSITION
                          M         
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 30
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         if      (CH1SC0_GEN1_IDLE_RUN_TRANSITION-SKEME_BASE) > 0xFFF ;check branch size in SCHEME
                          M                 error   CH1SC0_GEN1_IDLE_RUN_TRANSITION range over 4096 bytes -- MUST USE BRANCH_EXT for
                          M         else
00014E 30C3               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_GEN1_IDLE_RUN_TRANSITION-SKEME_BASE)) & 0x0F) , lo
                          M         endif
                          M                 
                      00883                 
                      00884         MASK_COMPARE    SCV_FEATURE2_DISABLE,IMMED_DATA,0x00,COMP_bit0,SKIP_SAME                ;SKIP_LE
000150 B9FC FE00          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_FEATURE2_DISABLE,0x00,COMP_bit0
                      00885                 BRANCH_TO       CH1SC0_SKIP_STARTSOUND
                          M         
                          M         if      (CH1SC0_SKIP_STARTSOUND-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_SKIP_STARTSOUND range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000154 6AC1               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_SKIP_STARTSOUND-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      00886         
000156                00887 CH1SC0_RUNLOWIDLE
                      00888         PLAY    HNDL_SC0_DEC_1H,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
000156 2240               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_DEC_1H & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      00889         PLAY    HNDL_SC0_DEC_H0,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
000158 2340               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_DEC_H0 & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      00890                 
00015A                00891 CH1SC0_PLAY_LOWIDLE
                      00892         ;PLAY HNDL_SC0_DEBUG1,no_loop,loop_STD  
                      00893 
                      00894         SKIP_ON_TRIGGER TRIG_TRUE,TRIG_NOTCHDN_ON               ; Skip if SF27 is not currently oFF
00015A 2605               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_TRUE & 0x03), TRIG_NOTCHDN_ON 
                      00895                 PLAY    HNDL_SC0_RUN_LOW_IDLE,no_loop,loop_STD                  ;sTART->IDLE choice
                          M         list ;2 byte PLAY  [HANDLE]
00015C 1140               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_RUN_LOW_IDLE & 0x3F)+((no_loop<<6)
                          M         list
                      00896         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_NOTCHDN_ON              ; Skip if SF27 is not currently oFF
00015E 2604               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_NOTCHDN_ON 
                      00897                 PLAY    HNDL_SC0_RUN_HIGH_IDLE,no_loop,loop_STD                 ;sTART->IDLE choice
                          M         list ;2 byte PLAY  [HANDLE]
000160 1240               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_RUN_HIGH_IDLE & 0x3F)+((no_loop<<6
                          M         list
                      00898 
                      00899         ;fix trans low to run1 1/25/18
                      00900         MASK_COMPARE    WORK_PEAK_SPD,IMMED_DATA,0x00,COMP_ALL,SKIP_SAME        ;if PK_SPD=0, no MOVEMEN
000162 19FC 0000          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,WORK_PEAK_SPD,0x00,COMP_ALL
                      00901                 LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_LODE+PREV_NOTCH,0,0    ;Set value initial
000166 1BE6 0000          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_LODE+PREV_NOTCH,0,0
                      00902 
                      00903 ;***************
00016A                00904 CH1SC0_SKIP_STARTSOUND
                      00905 ;***************
                      00906         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_OR+USER_INTLK_BITS,STATIC_MAINT_MASK6,MERGE_ALL_MASK     
00016A 5EE6 0040          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_OR+USER_INTLK_BITS,STATIC_MAINT_MA
                      00907         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_LODE+PREV_NOTCH,0,0    ;Set value initial
00016E 1BE6 0000          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_LODE+PREV_NOTCH,0,0
                      00908 
                      00909 ;---
000172                00910 CH1SC0_SERVO_ENABLE
                      00911         ;Notch1=0 is initial default...
                      00912         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_LODE+WORK_SPEED_DELTA,NOTCH1,0     ;initial value is 0
000172 0BE6 0000          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_LODE+WORK_SPEED_DELTA,NOTCH1,0
                      00913         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_LODE+PREV_NOTCH,NOTCH1,0   ;initial value is 0
000176 1BE6 0000          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_LODE+PREV_NOTCH,NOTCH1,0
                      00914         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_LODE+WORK_PEAK_SPD,0x00,0  ;initial value is 0
00017A 19E6 0000          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_LODE+WORK_PEAK_SPD,0x00,0
                      00915 
                      00916         ;this allows the MOTOR to run once PRIME mover is STARTED and audible, [unless defeated by user 
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 31
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00917         ;Allow Compressor Run
                      00918         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_OR+USER_INTLK_BITS,COMP_MASK0,MERGE_ALL_MASK     ;OR=SETt
00017E 5EE6 0001          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_OR+USER_INTLK_BITS,COMP_MASK0,MERG
                      00919         GENERATE_TRIGGER  TRIG_FANS_ON  
000182 1AB1               M                 DB      CMD_BLIP_TRIGGER, TRIG_FANS_ON 
                      00920 
                      00921         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_OR+USER_INTLK_BITS,START_MASK1,MERGE_ALL_MASK    ;OR=SETt
000184 5EE6 0002          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_OR+USER_INTLK_BITS,START_MASK1,MER
                      00922         ;set PRIMARY decoder STATUS:
                      00923         ;================== TABLE OF COMP BITS INVOLVED ==============
                      00924         ;=== COMP_bit7 =MATH=           EQU     0x7F                    ;MASK just do bit7
                      00925         ;=== COMP_bit6 =IDLELOCK=       EQU     0xBF                    ;MASK just do bit6
                      00926         ;=== COMP_bit5 =INTERLOCK=      EQU     0xDF                    ;MASK just do bit5
                      00927         ;=== COMP_bit4 =SPDDELTA=       EQU     0xEF                    ;MASK just do bit4
                      00928         ;=== COMP_bit3 =ACEL=           EQU     0xF7                    ;MASK just do bit3
                      00929         ;=== COMP_bit2 =RUN=            EQU     0xFB                    ;MASK just do bit2
                      00930         ;=== COMP_bit1 =DIRNOW=         EQU     0xFD                    ;MASK just do bit1
                      00931         ;=== COMP_bit0 =ANALOG=         EQU     0xFE                    ;MASK just do bit0      
                      00932         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_OR+WORK_STATUS_BITS,WKSB_RUN_MASK,MERGE_ALL_MASK ;set the
000188 47E6 0004          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_OR+WORK_STATUS_BITS,WKSB_RUN_MASK,
                      00933         
00018C                00934 CH1SC0_CH2_3_ENABLE     ;CH 2 and 3 ENABLE HERE:
                      00935         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_OR+WORK_STATUS_BITS,WKSB_INTERLOCK_MASK,MERGE_ALL_MASK   
00018C 47E6 0020          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_OR+WORK_STATUS_BITS,WKSB_INTERLOCK
                      00936 
000190                00937 CH1SC0_NOTCH_MODE_CHECK
                      00938         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_AND+WORK_STATUS_BITS,~WKSB_SPDDELTA_MASK,MERGE_ALL_MASK  
000190 27E6 00EF          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_AND+WORK_STATUS_BITS,~WKSB_SPDDELT
                      00939 
                      00940         MASK_COMPARE    SCV_SPEED_MODE,IMMED_DATA,CV155_MANUAL,COMP_ALL,SKIP_SAME       ;CV155, 0=AUTO, 
000194 9AFC 0002          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_SPEED_MODE,CV155_MANUAL,COMP_ALL
                      00941                 BRANCH_TO       CH1SC0_BEGIN_IDLE                       ;NOT manual mode!       ;Skipped
                          M         
                          M         if      (CH1SC0_BEGIN_IDLE-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH1SC0_BEGIN_IDLE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000198 9EC1               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_BEGIN_IDLE-SKEME_BASE)) & 0x0F) , low (CH1SC0_BEGI
                          M         endif
                          M                 
                      00942                 
                      00943 ;CV155 is MANUAL mode
00019A                00944 CH1SC0_MANUAL_NOTCHES
                      00945         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_OR+WORK_STATUS_BITS,WKSB_SPDDELTA_MASK,MERGE_ALL_MASK    
00019A 47E6 0010          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_OR+WORK_STATUS_BITS,WKSB_SPDDELTA_
                      00946 
                      00947 ;---
00019E                00948 CH1SC0_BEGIN_IDLE       
                      00949         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_LODE+WORK_SPEED_DELTA,0,0        ;clr SPD DELTA HISTORY
00019E 0BE6 0000          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_LODE+WORK_SPEED_DELTA,0,0
                      00950         END_SOUND
0001A2 0000               M                 DB      CMD_END_SND,0
                      00951  
                      00952 ;================================================================
                      00953 ;UC1.7================
                      00954         INITIATE_SOUND  TRIG_MOVING,NOT_TRIG                    ; TRANSITION back to IDLE   RUN_WHILE_TR
0001A4 8E90               M                 DB      CMD_INITIATE_SND + ((NOT_TRIG) & 0x07), TRIG_MOVING +((NOT_TRIG) & 0x80)
  00000002                M ICNT += 1
                          M 
                      00955         ;clear delta here:
                      00956         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_LODE+WORK_SPEED_DELTA,NOTCH1,0     ; set Manual Notch value
0001A6 0BE6 0000          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_LODE+WORK_SPEED_DELTA,NOTCH1,0
                      00957 
                      00958         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_INTEGRATE+VARY_LOAD,+SCALE_INCR_2,SCALE_MAX      ;revised
0001AA BCE6 0F02          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+VARY_LOAD,+SCALE_INCR_2,
                      00959         
0001AE                00960 CH1SC0_GEN1_RUN_IDLE_TRANSITION         
                      00961         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_DRIFT
0001AE 80E1 0B8B          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_DRIFT
                      00962 
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 32
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00963 
0001B2                00964 CH1SC0_GEN1_RUN_IDLE_ASYNC
                      00965         MASK_COMPARE    WORK_STATUS_BITS,IMMED_DATA,WKSB_IDLELOCK_MASK,~WKSB_IDLELOCK_MASK,SKIP_SAME    
0001B2 07FC BF40          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,WORK_STATUS_BITS,WKSB_IDLELOCK_MASK,~WKSB_
                      00966                 BRANCH_TO       CH1SC0_GEN1_IDLE_DISABLE         ;IDLE is 0, freeze     
                          M         
                          M         if      (CH1SC0_GEN1_IDLE_DISABLE-SKEME_BASE) > 0xFFF       ;check branch size in SCHEME
                          M                 error   CH1SC0_GEN1_IDLE_DISABLE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0001B6 BAC1               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_GEN1_IDLE_DISABLE-SKEME_BASE)) & 0x0F) , low (CH1S
                          M         endif
                          M                 
                      00967          
0001B8                00968 CH1SC0_GEN1_IDLE_ALLOWED
                      00969         PLAY    HNDL_SC0_SHUTDOWN_BEGIN,no_loop,loop_STD        ;GEN1_RUN_IDL1a 
                          M         list ;2 byte PLAY  [HANDLE]
0001B8 2440               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_SHUTDOWN_BEGIN & 0x3F)+((no_loop<<
                          M         list
0001BA                00970 CH1SC0_GEN1_IDLE_DISABLE
                      00971         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_AND+WORK_STATUS_BITS,~WKSB_IDLELOCK_MASK,MERGE_ALL_MASK  
0001BA 27E6 00BF          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_AND+WORK_STATUS_BITS,~WKSB_IDLELOC
                      00972         ;Disable Compressor Run
                      00973         ;LOAD_MODIFIER  MTYPE_WORK_IMMED,FMATH_AND+USER_INTLK_BITS,~COMP_MASK0,MERGE_ALL_MASK   ;AND=FLI
                      00974 
                      00975  
                      00976         END_SOUND 
0001BE 0000               M                 DB      CMD_END_SND,0
                      00977         
                      00978 ; ============================ SF8 RELOCATED HERE ==================================
                      00979         ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                      00980         ;       THIS ROUTINE IS CH1_ primary PERSISTENT (NOT INTERRUPTABLE)
                      00981         ;       SF8 Off, set REG volume - TURN ALL SOUNDS ON 
                      00982         ; ---------------------------------------------------------
                      00983 ;UC1.1================
                      00984         INITIATE_SOUND  TRIG_SMUTE_ON,NOT_TRIG
0001C0 9390               M                 DB      CMD_INITIATE_SND + ((NOT_TRIG) & 0x07), TRIG_SMUTE_ON +((NOT_TRIG) & 0x80)
  00000003                M ICNT += 1
                          M 
                      00985         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_BELLS_ON        
0001C2 0804               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_BELLS_ON 
                      00986                 BRANCH_TO       CH1SC0_RESTART_UNMUTE
                          M         
                          M         if      (CH1SC0_RESTART_UNMUTE-SKEME_BASE) > 0xFFF          ;check branch size in SCHEME
                          M                 error   CH1SC0_RESTART_UNMUTE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0001C4 68C0               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RESTART_UNMUTE-SKEME_BASE)) & 0x0F) , low (CH1SC0_
                          M         endif
                          M                 
                      00987         END_SOUND       
0001C6 0000               M                 DB      CMD_END_SND,0
                      00988                 
                      00989         ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                      00990         ;       THIS ROUTINE IS CH1_ primary PERSISTENT (NOT INTERRUPTABLE)
                      00991         ;       SF8 OFF, set mute/cv volume - MUTE ALL SOUNDS
                      00992         ;       ROUTINE WAS CHANNEL1 IN ver4.  
                      00993         ; --------------------------------------------------
                      00994 ;UC1.2================
                      00995         INITIATE_SOUND  TRIG_SMUTE_ON,NORMAL
0001C8 1390               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), TRIG_SMUTE_ON +((NORMAL) & 0x80)
  00000004                M ICNT += 1
                          M 
                      00996         ;USE SF8 TO PLAY STARTUP SOUNDS WHEN SERVO MOTOR IS DISABLED:
0001CA                00997 CH1SC0_MUTE
                      00998         ;CHECK TO ESTOP AND WITH BRAKES
                      00999         SKIP_ON_TRIGGER TRIG_TRUE,TRIG_IBRAKES_ON               
0001CA 1905               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_TRUE & 0x03), TRIG_IBRAKES_ON 
                      01000                 BRANCH_TO       CH1SC0_MUTE_ON0
                          M         
                          M         if      (CH1SC0_MUTE_ON0-SKEME_BASE) > 0xFFF                ;check branch size in SCHEME
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 33
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                 error   CH1SC0_MUTE_ON0 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0001CC D0C1               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_MUTE_ON0-SKEME_BASE)) & 0x0F) , low (CH1SC0_MUTE_O
                          M         endif
                          M                 
                      01001         BRANCH_TO       CH1SC0_ESTOP
                          M         
                          M         if      (CH1SC0_ESTOP-SKEME_BASE) > 0xFFF                   ;check branch size in SCHEME
                          M                 error   CH1SC0_ESTOP range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0001CE 56C2               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_ESTOP-SKEME_BASE)) & 0x0F) , low (CH1SC0_ESTOP-SKE
                          M         endif
                          M                 
                      01002 ;-
0001D0                01003 CH1SC0_MUTE_ON0 ;1st time =192, 2nd time=91, 3rd time=32, 4th time=0
                      01004         ;Disable Compressor Run
                      01005         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_AND+USER_INTLK_BITS,~COMP_MASK0,MERGE_ALL_MASK   ;AND=FLI
0001D0 3EE6 00FE          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_AND+USER_INTLK_BITS,~COMP_MASK0,ME
                      01006         
                      01007         MASK_COMPARE    WORK_GLBL_GAIN,IMMED_DATA,0x01,COMP_ALL,SKIP_SAME       ;When SF8 is toggled twi
0001D4 08FC 0001          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,WORK_GLBL_GAIN,0x01,COMP_ALL
                      01008                 BRANCH_TO       CH1SC0_MUTE_ON1 ;>0
                          M         
                          M         if      (CH1SC0_MUTE_ON1-SKEME_BASE) > 0xFFF                ;check branch size in SCHEME
                          M                 error   CH1SC0_MUTE_ON1 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0001D8 DCC1               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_MUTE_ON1-SKEME_BASE)) & 0x0F) , low (CH1SC0_MUTE_O
                          M         endif
                          M                 
                      01009         BRANCH_TO       CH1SC0_MUTE_ON5 ;=0
                          M         
                          M         if      (CH1SC0_MUTE_ON5-SKEME_BASE) > 0xFFF                ;check branch size in SCHEME
                          M                 error   CH1SC0_MUTE_ON5 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0001DA FAC1               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_MUTE_ON5-SKEME_BASE)) & 0x0F) , low (CH1SC0_MUTE_O
                          M         endif
                          M                 
                      01010         
0001DC                01011 CH1SC0_MUTE_ON1 ;>0
                      01012         MASK_COMPARE    WORK_GLBL_GAIN,TARGET_DATA,SCV_MUTE_VOL,COMP_ALL,SKIP_GRTR      ;
0001DC 08FB 0086          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+TARGET_DATA,WORK_GLBL_GAIN,SCV_MUTE_VOL,COMP_ALL
                      01013                 BRANCH_TO       CH1SC0_MUTE_ON4 ;<32 >=1
                          M         
                          M         if      (CH1SC0_MUTE_ON4-SKEME_BASE) > 0xFFF                ;check branch size in SCHEME
                          M                 error   CH1SC0_MUTE_ON4 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0001E0 F4C1               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_MUTE_ON4-SKEME_BASE)) & 0x0F) , low (CH1SC0_MUTE_O
                          M         endif
                          M                 
                      01014         MASK_COMPARE    WORK_GLBL_GAIN,IMMED_DATA,0x60,COMP_ALL,SKIP_LESS
0001E2 08FE 0060          M                 DB      CMD_MASK_COMPARE+SKIP_LESS+IMMED_DATA,WORK_GLBL_GAIN,0x60,COMP_ALL
                      01015                 BRANCH_TO       CH1SC0_MUTE_ON3 
                          M         
                          M         if      (CH1SC0_MUTE_ON3-SKEME_BASE) > 0xFFF                ;check branch size in SCHEME
                          M                 error   CH1SC0_MUTE_ON3 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0001E6 EEC1               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_MUTE_ON3-SKEME_BASE)) & 0x0F) , low (CH1SC0_MUTE_O
                          M         endif
                          M                 
                      01016          
0001E8                01017 CH1SC0_MUTE_ON2 ;<SCV_MUTE_VOL
                      01018         LOAD_MODIFIER   MTYPE_WORK_IMMED,WORK_GLBL_GAIN,0x60,MERGE_ALL_MASK  ;half MUTE
0001E8 08E6 0060          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),WORK_GLBL_GAIN,0x60,MERGE_ALL_MASK
                      01019         END_SOUND
0001EC 0000               M                 DB      CMD_END_SND,0
                      01020         
0001EE                01021 CH1SC0_MUTE_ON3 ;<SCV_MUTE_VOL
                      01022         LOAD_MODIFIER   MTYPE_WORK_INDIRECT,WORK_GLBL_GAIN,SCV_MUTE_VOL,MERGE_ALL_MASK   ;MUTE volume fr
0001EE 08E7 0086          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_INDIRECT&0x0F),WORK_GLBL_GAIN,SCV_MUTE_VOL,MERGE_ALL
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 34
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01023         END_SOUND
0001F2 0000               M                 DB      CMD_END_SND,0
                      01024         
0001F4                01025 CH1SC0_MUTE_ON4 ;>= SCV_MUTE_VOL
                      01026         LOAD_MODIFIER   MTYPE_WORK_IMMED,WORK_GLBL_GAIN,0x01,MERGE_ALL_MASK  ; full MUTE
0001F4 08E6 0001          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),WORK_GLBL_GAIN,0x01,MERGE_ALL_MASK
                      01027         END_SOUND
0001F8 0000               M                 DB      CMD_END_SND,0
                      01028         
0001FA                01029 CH1SC0_MUTE_ON5 
                      01030         LOAD_MODIFIER   MTYPE_WORK_IMMED,WORK_GLBL_GAIN,DEFAULT_GLBL_GAIN,MERGE_ALL_MASK  ;STD full volu
0001FA 08E6 00C0          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),WORK_GLBL_GAIN,DEFAULT_GLBL_GAIN,MERGE_A
                      01031         END_SOUND
0001FE 0000               M                 DB      CMD_END_SND,0
                      01032         
                      01033         
                      01034         ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                      01035         ;       THIS ROUTINE IS CH1_ primary PERSISTENT (NOT INTERRUPTABLE)
                      01036         ;       have OPSWR,be sure NOTCH mode is evaluated without RESTART
                      01037         ;----------------------------------------------------
                      01038 ;UC1.4================
                      01039         INITIATE_SOUND  TRIG_OPSPROGWR_CV,NORMAL
000200 5B90               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), TRIG_OPSPROGWR_CV +((NORMAL) & 0x80)
  00000005                M ICNT += 1
                          M 
                      01040         LOAD_MODIFIER   MTYPE_WORK_IMMED,WORK_GLBL_GAIN,DEFAULT_GLBL_GAIN,MERGE_ALL_MASK        ;load WO
000202 08E6 00C0          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),WORK_GLBL_GAIN,DEFAULT_GLBL_GAIN,MERGE_A
                      01041         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_MISC_VOLUME,SCALE_C
000206 80E1 0C90          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_MISC_VOLUME,SCALE_C
                      01042         ;error got reset here:
                      01043         PLAY    HNDL_SC0_ABOUT,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
00020A 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_ABOUT & 0xC0)+1     ;ADD REV PLAY FLAG PLUS OTHER BI
00020C 3B00               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_ABOUT & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      01044         BRANCH_TO       CH1SC0_NOTCH_MODE_CHECK
                          M         
                          M         if      (CH1SC0_NOTCH_MODE_CHECK-SKEME_BASE) > 0xFFF        ;check branch size in SCHEME
                          M                 error   CH1SC0_NOTCH_MODE_CHECK range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00020E 90C1               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_NOTCH_MODE_CHECK-SKEME_BASE)) & 0x0F) , low (CH1SC
                          M         endif
                          M                 
                      01045         END_SOUND       
000210 0000               M                 DB      CMD_END_SND,0
                      01046 
                      01047         
                      01048         ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                      01049         ;       THIS ROUTINE IS CH1_ primary PERSISTENT (NOT INTERRUPTABLE)
                      01050         ;       DIESEL shutdown when not addressed any more after CV11 timeout
                      01051         ;----------------------------------------------------
                      01052 ;UC1.5================
                      01053         INITIATE_SOUND  TRIG_SND_ACTV11,NOT_TRIG        
000212 8F90               M                 DB      CMD_INITIATE_SND + ((NOT_TRIG) & 0x07), TRIG_SND_ACTV11 +((NOT_TRIG) & 0x80)
  00000006                M ICNT += 1
                          M 
000214                01054 CH1SC0_ENDR1
                      01055         MASK_COMPARE    VARY_LOAD,IMMED_DATA,SCV_LOAD_MIN,COMP_ALL,SKIP_GRTR            ;prevent underfl
000214 1CFF 009E          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,VARY_LOAD,SCV_LOAD_MIN,COMP_ALL
                      01056                 LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+VARY_LOAD,-SCALE_INCR_1,SCALE_MAX        
000218 BCE6 0FFF          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+VARY_LOAD,-SCALE_INCR_1,
                      01057 
                      01058         PLAY    HNDL_SC0_RUN_1,no_loop,loop_STD 
                          M         list ;2 byte PLAY  [HANDLE]
00021C 1340               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_RUN_1 & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      01059         ;Disable Compressor Run
                      01060         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_AND+USER_INTLK_BITS,~COMP_MASK0,MERGE_ALL_MASK   ;AND=FLI
00021E 3EE6 00FE          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_AND+USER_INTLK_BITS,~COMP_MASK0,ME
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 35
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01061         
                      01062         MASK_COMPARE    SCV_FEATURE2_DISABLE,IMMED_DATA,0x01,COMP_bit0,SKIP_SAME                ;SKIP_LE
000222 B9FC FE01          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_FEATURE2_DISABLE,0x01,COMP_bit0
                      01063                 BRANCH_TO       CH1SC0_ENDR5    
                          M         
                          M         if      (CH1SC0_ENDR5-SKEME_BASE) > 0xFFF                   ;check branch size in SCHEME
                          M                 error   CH1SC0_ENDR5 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000226 2AC2               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_ENDR5-SKEME_BASE)) & 0x0F) , low (CH1SC0_ENDR5-SKE
                          M         endif
                          M                 
                      01064                 
                      01065         PLAY    HNDL_SC0_DEC_1H,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
000228 2240               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_DEC_1H & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      01066         
00022A                01067 CH1SC0_ENDR5
                      01068         PLAY    HNDL_SC0_SHUTDOWN_BEGIN,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
00022A 2440               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_SHUTDOWN_BEGIN & 0x3F)+((no_loop<<
                          M         list
                      01069 
                      01070         PLAY    HNDL_SC0_SHUTDOWN_END,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
00022C 2540               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_SHUTDOWN_END & 0x3F)+((no_loop<<6)
                          M         list
                      01071         
00022E                01072 CH1SC0_SERVO_DISABLE
                      01073         ;Disable Compressor Run
                      01074         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_AND+USER_INTLK_BITS,~COMP_MASK0,MERGE_ALL_MASK   ;AND=FLI
00022E 3EE6 00FE          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_AND+USER_INTLK_BITS,~COMP_MASK0,ME
                      01075         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_AND+WORK_STATUS_BITS,~WKSB_RUN_MASK,MERGE_ALL_MASK       
000232 27E6 00FB          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_AND+WORK_STATUS_BITS,~WKSB_RUN_MAS
                      01076 
                      01077 ;---
000236                01078 CH1SC0_MUTE_ACTV11
                      01079         BRANCH_TO       CH1SC0_MUTE_ON0                 ;zero VOLUME after TURNOFF
                          M         
                          M         if      (CH1SC0_MUTE_ON0-SKEME_BASE) > 0xFFF                ;check branch size in SCHEME
                          M                 error   CH1SC0_MUTE_ON0 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000236 D0C1               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_MUTE_ON0-SKEME_BASE)) & 0x0F) , low (CH1SC0_MUTE_O
                          M         endif
                          M                 
                      01080         END_SOUND       
000238 0000               M                 DB      CMD_END_SND,0
                      01081         
                      01082         ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                      01083         ;       THIS ROUTINE IS CH1_ primary PERSISTENT (NOT INTERRUPTABLE)
                      01084         ; EStop Shutdown        (disables motor movement until OFF) when SF15 is on:
                      01085         ;----------------------------------------------------
                      01086         INITIATE_SOUND  TRIG_ESTOP_ON,NOT_TRIG  ;i.e. TOGGLED OFF
00023A 9690               M                 DB      CMD_INITIATE_SND + ((NOT_TRIG) & 0x07), TRIG_ESTOP_ON +((NOT_TRIG) & 0x80)
  00000007                M ICNT += 1
                          M 
00023C                01087 CH1SC0_RESTART
                      01088         LOAD_MODIFIER   MTYPE_WORK_IMMED,WORK_GLBL_GAIN,DEFAULT_GLBL_GAIN,MERGE_ALL_MASK  ;STD full volu
00023C 08E6 00C0          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),WORK_GLBL_GAIN,DEFAULT_GLBL_GAIN,MERGE_A
                      01089         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_B
000240 80E1 0B8B          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_B
                      01090         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_LIGHTS_ON       ; But skip if SF0 was previously off
000244 0C04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_LIGHTS_ON 
                      01091                 BRANCH_TO       CH1SC0_SKIP_RESTART
                          M         
                          M         if      (CH1SC0_SKIP_RESTART-SKEME_BASE) > 0xFFF            ;check branch size in SCHEME
                          M                 error   CH1SC0_SKIP_RESTART range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000246 4CC2               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_SKIP_RESTART-SKEME_BASE)) & 0x0F) , low (CH1SC0_SK
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 36
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         endif
                          M                 
                      01092                 
000248                01093 CH1SC0_RELEASE_BRAKE
                      01094         ;       WKSB_RUN_BIT    EQU     2               ;0= stop motor PWM, non-primemover sounds RUN
                      01095 ;****** UNLESS SOME F-KEY IS ON THE SERVO MOTOR WILL NOT RUN UNTIL AFTER ALL THE STARTUP SOUNDS ********
                      01096         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_AND+WORK_STATUS_BITS,WKSB_RUN_MASK,MERGE_ALL_MASK        
000248 27E6 0004          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_AND+WORK_STATUS_BITS,WKSB_RUN_MASK
                      01097         
                      01098         ; Check STARTUP SOUNDS INTERLOCK if Disabled
                      01099         ;MASK_COMPARE   USER_INTLK_BITS,IMMED_DATA,START_MASK1,~START_MASK1,SKIP_SAME   ;TEST BIT1 FOR T
                      01100         ;       BRANCH_TO       CH1SC0_RESTART3
                      01101         ;BRANCH_TO      CH1SC0_SKIP_RESTART
                      01102         
00024C                01103 CH1SC0_SKIP_RESTART     
                      01104         ;v5.02 fix restart interlock 7/20/17
                      01105         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_OR+USER_INTLK_BITS,START_MASK1,MERGE_ALL_MASK    ;OR=SETt
00024C 5EE6 0002          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_OR+USER_INTLK_BITS,START_MASK1,MER
                      01106         ;YES BIG JUMP HERE:
                      01107         BRANCH_TO       CH1SC0_RESTART_UNMUTE
                          M         
                          M         if      (CH1SC0_RESTART_UNMUTE-SKEME_BASE) > 0xFFF          ;check branch size in SCHEME
                          M                 error   CH1SC0_RESTART_UNMUTE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000250 68C0               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RESTART_UNMUTE-SKEME_BASE)) & 0x0F) , low (CH1SC0_
                          M         endif
                          M                 
                      01108         END_SOUND
000252 0000               M                 DB      CMD_END_SND,0
                      01109         
                      01110         
                      01111         ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                      01112         ;       THIS ROUTINE IS CH1_ primary PERSISTENT (NOT INTERRUPTABLE)
                      01113         ; EStop Shutdown        (disables motor movement until OFF) when SF15 is on:
                      01114         ;----------------------------------------------------
                      01115         INITIATE_SOUND  TRIG_ESTOP_ON,NORMAL
000254 1690               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), TRIG_ESTOP_ON +((NORMAL) & 0x80)
  00000008                M ICNT += 1
                          M 
000256                01116 CH1SC0_ESTOP
                      01117 
                      01118         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_LODE+WORK_SPEED_DELTA,0x00,0       ; set Manual Notch value
000256 0BE6 0000          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_LODE+WORK_SPEED_DELTA,0x00,0
                      01119         MASK_COMPARE    VARY_LOAD,IMMED_DATA,SCALE_MID,COMP_ALL,SKIP_GRTR       ;SKIP_was >30
00025A 1CFF 000C          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,VARY_LOAD,SCALE_MID,COMP_ALL
                      01120                 BRANCH_TO       CH1SC0_ESTOP2
                          M         
                          M         if      (CH1SC0_ESTOP2-SKEME_BASE) > 0xFFF                  ;check branch size in SCHEME
                          M                 error   CH1SC0_ESTOP2 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00025E 64C2               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_ESTOP2-SKEME_BASE)) & 0x0F) , low (CH1SC0_ESTOP2-S
                          M         endif
                          M                 
                      01121         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+VARY_LOAD,-SCALE_INCR_1,SCV_LOAD_MIN    ;decremen
000260 BCE6 9EFF          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+VARY_LOAD,-SCALE_INCR_1,
000264                01122 CH1SC0_ESTOP2
                      01123         MASK_COMPARE    VARY_LOAD,IMMED_DATA,SCV_LOAD_MIN,COMP_ALL,SKIP_GRTR            ;prevent underfl
000264 1CFF 009E          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,VARY_LOAD,SCV_LOAD_MIN,COMP_ALL
                      01124                 LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+VARY_LOAD,-SCALE_INCR_1,SCALE_MAX        
000268 BCE6 0FFF          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+VARY_LOAD,-SCALE_INCR_1,
                      01125 
                      01126         ;decrement SCALE        
                      01127         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_BRAKE_VOLUME,SCALE_MID 
00026C 80E1 0C8F          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_BRAKE_VOLUME,SCALE_MID
                      01128         ;MASK_COMPARE   WORK_SPEED,IMMED_DATA,0x01,COMP_ALL,SKIP_GRTR           ; Check if stopped
                      01129         ;       BRANCH_TO       CH1SC0_ESTOP3
                      01130         ;BRANCH_TO      CH1SC0_ESTOPPED
000270                01131 CH1SC0_ESTOP3
000270                01132 CH1SC0_ESTOPPED
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 37
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01133         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_OR+WORK_STATUS_BITS,~WKSB_INTERLOCK_MASK,MERGE_ALL_MASK  
000270 47E6 00DF          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_OR+WORK_STATUS_BITS,~WKSB_INTERLOC
                      01134         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_AND+USER_INTLK_BITS,~START_MASK1,MERGE_ALL_MASK  ;AND=FLI
000274 3EE6 00FD          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_AND+USER_INTLK_BITS,~START_MASK1,M
                      01135         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_OR+USER_INTLK_BITS,COUPLER_MASK5,MERGE_ALL_MASK  ;OR=SETt
000278 5EE6 0020          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_OR+USER_INTLK_BITS,COUPLER_MASK5,M
                      01136 
                      01137 
                      01138         ;SERVO_DISABLE
                      01139         ;******************************************************** UNLESS SF0 IS ON THE MOTOR WILL NOT RU
                      01140         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_AND+WORK_STATUS_BITS,~WKSB_RUN_MASK,MERGE_ALL_MASK       
00027C 27E6 00FB          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_AND+WORK_STATUS_BITS,~WKSB_RUN_MAS
                      01141         ;Disable Compressor Run 
                      01142         GENERATE_TRIGGER  TRIG_COMPR_ON         ;       
000280 1FB1               M                 DB      CMD_BLIP_TRIGGER, TRIG_COMPR_ON 
                      01143         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_AND+USER_INTLK_BITS,~COMP_MASK0,MERGE_ALL_MASK   ;AND=FLI
000282 3EE6 00FE          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_AND+USER_INTLK_BITS,~COMP_MASK0,ME
                      01144         PLAY    HNDL_SC0_SHUTDOWN_BEGIN,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
000286 2440               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_SHUTDOWN_BEGIN & 0x3F)+((no_loop<<
                          M         list
                      01145         PLAY    HNDL_SC0_SHUTDOWN_END,no_loop,loop_STD  
                          M         list ;2 byte PLAY  [HANDLE]
000288 2540               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_SHUTDOWN_END & 0x3F)+((no_loop<<6)
                          M         list
                      01146         
                      01147         LOAD_MODIFIER MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_BRAKE_VOLUME,SCALE_B
00028A 80E1 0B8F          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_BRAKE_VOLUME,SCALE_B
                      01148         PLAY    HNDL_SC0_BRAKE_SET,no_loop,loop_STD     
                          M         list ;2 byte PLAY  [HANDLE]
00028E 3940               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_BRAKE_SET & 0x3F)+((no_loop<<6)&0x
                          M         list
                      01149         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+AIR_PRESS,-0x13,0   ;decrease
000290 BDE6 00ED          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+AIR_PRESS,-0x13,0
                      01150 
                      01151         ;LONG LOOP HERE FILLS SOUNDS SO THAT UNIT APPEARS TO BE SHUTDOWN:
                      01152         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_ESTOP_ON                ; But skip if F14 was previously off
000294 1604               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_ESTOP_ON 
                      01153                 LOAD_MODIFIER   MTYPE_WORK_IMMED,WORK_GLBL_GAIN,0x01,MERGE_ALL_MASK  ; full MUTE
000296 08E6 0001          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),WORK_GLBL_GAIN,0x01,MERGE_ALL_MASK
                      01154         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_ESTOP_ON                ; But skip if F14 was previously off
00029A 1604               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_ESTOP_ON 
                      01155                 PLAY    HNDL_SC0_SILENCE,loop_till_ESTOP_OFF,loop_INVERT
                          M         list ;4 byte XPLAY      [HANDLE]
00029C 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_SILENCE & 0xC0)+1   ;ADD REV PLAY FLAG PLUS OTHER BI
00029E 940D               M                 DB      ((loop_till_ESTOP_OFF>>2)&0x07)+loop_INVERT, (HNDL_SC0_SILENCE & 0x3F)+((loop_ti
                          M         list
                      01156         LOAD_MODIFIER   MTYPE_WORK_IMMED,WORK_GLBL_GAIN,DEFAULT_GLBL_GAIN,MERGE_ALL_MASK        ;load WO
0002A0 08E6 00C0          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),WORK_GLBL_GAIN,DEFAULT_GLBL_GAIN,MERGE_A
                      01157         LOAD_MODIFIER MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_BRAKE_VOLUME,SCALE_B
0002A4 80E1 0B8F          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_BRAKE_VOLUME,SCALE_B
                      01158         
                      01159         ;PLAY   HNDL_SC0_BRAKE_RELEASE,no_loop,loop_STD
                      01160         ;play isolation/reverser:
                      01161         LOAD_MODIFIER MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_POWER_REVERSER_VOLUME,SCALE_A
0002A8 80E1 0AB4          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_POWER_REVERSER_VOLUME,SC
                      01162         PLAY    HNDL_SC0_ISOLATION_CENTER,no_loop,loop_STD              
                          M         list ;2 byte PLAY  [HANDLE]
0002AC 3840               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_ISOLATION_CENTER & 0x3F)+((no_loop
                          M         list
                      01163 ;-
0002AE                01164 CH1SC0_ESTOPPED_QUIET   ;loops here until SF15 OFF OR BRAKE IS RELEASED
                      01165         LOAD_MODIFIER   MTYPE_WORK_IMMED,WORK_GLBL_GAIN,0x01,MERGE_ALL_MASK  ; full MUTE
0002AE 08E6 0001          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),WORK_GLBL_GAIN,0x01,MERGE_ALL_MASK
                      01166         PLAY    HNDL_SC0_SILENCE,loop_till_IBRAKES_OFF,loop_INVERT              
                          M         list ;4 byte XPLAY      [HANDLE]
0002B2 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_SILENCE & 0xC0)+1   ;ADD REV PLAY FLAG PLUS OTHER BI
0002B4 540E               M                 DB      ((loop_till_IBRAKES_OFF>>2)&0x07)+loop_INVERT, (HNDL_SC0_SILENCE & 0x3F)+((loop_
                          M         list
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 38
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01167         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_ESTOP_ON                ; But skip if SF15 was previously off
0002B6 1604               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_ESTOP_ON 
                      01168                 BRANCH_TO       CH1SC0_ESTOPPED_QUIET   
                          M         
                          M         if      (CH1SC0_ESTOPPED_QUIET-SKEME_BASE) > 0xFFF          ;check branch size in SCHEME
                          M                 error   CH1SC0_ESTOPPED_QUIET range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0002B8 AEC2               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_ESTOPPED_QUIET-SKEME_BASE)) & 0x0F) , low (CH1SC0_
                          M         endif
                          M                 
                      01169         LOAD_MODIFIER   MTYPE_WORK_IMMED,WORK_GLBL_GAIN,DEFAULT_GLBL_GAIN,MERGE_ALL_MASK        ;load WO
0002BA 08E6 00C0          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),WORK_GLBL_GAIN,DEFAULT_GLBL_GAIN,MERGE_A
                      01170                 
                      01171         END_SOUND
0002BE 0000               M                 DB      CMD_END_SND,0
                      01172         
                      01173 
                      01174 ;================================================= major routine ===========================            
                      01175 ;----------------------------------------------------
                      01176 ; Increase to run
                      01177 ; ---------------------------------------------------------
                      01178         ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                      01179         ;       THIS ROUTINE IS CH1_ primary PERSISTENT (NOT INTERRUPTABLE)
                      01180         ;       this is MODIFIED by DISCRETE notch change logic to vary AMPL with NOTCH setting, RPMs al
                      01181         ;---------------------------------------------------- 
                      01182         ; ---------------------------------------------------------
                      01183         ;     Play increase from stopped idle -- no load    
                      01184         ; pick up notch at prev and increase to new current:                        
                      01185         ; ---------------------------------------------------------
                      01186         INITIATE_SOUND T_SPD_IDLEXIT,NORMAL+NO_PREEMPT_TRIG     ;RUN_WHILE_TRIG+ZAP     ;leaving IDLE st
0002C0 7694               M                 DB      CMD_INITIATE_SND + ((NORMAL+NO_PREEMPT_TRIG) & 0x07), T_SPD_IDLEXIT +((NORMAL+NO
  00000009                M ICNT += 1
                          M 
                      01187         ;finish play here due to interrupted idle event: 8/1/19
                      01188 
                      01189         ;CHECK HEP HERE:
                      01190         ;aux or hep is running:
                      01191         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_AXGEN_ON; But branch if SF30/25 was previously on
0002C2 2404               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_AXGEN_ON 
                      01192                 BRANCH_TO       CH1SC0_CONTINUOUS_NOTCH 
                          M         
                          M         if      (CH1SC0_CONTINUOUS_NOTCH-SKEME_BASE) > 0xFFF        ;check branch size in SCHEME
                          M                 error   CH1SC0_CONTINUOUS_NOTCH range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0002C4 48C3               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_CONTINUOUS_NOTCH-SKEME_BASE)) & 0x0F) , low (CH1SC
                          M         endif
                          M                 
                      01193         
                      01194         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_RUN8_ON; But branch if SF28 was previously on
0002C6 2704               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_RUN8_ON 
                      01195                 BRANCH_TO       CH1SC0_CONTINUOUS_NOTCH         ;END_SOUND      
                          M         
                          M         if      (CH1SC0_CONTINUOUS_NOTCH-SKEME_BASE) > 0xFFF        ;check branch size in SCHEME
                          M                 error   CH1SC0_CONTINUOUS_NOTCH range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0002C8 48C3               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_CONTINUOUS_NOTCH-SKEME_BASE)) & 0x0F) , low (CH1SC
                          M         endif
                          M                 
                      01196         ;SKIP_ON_TRIGGER        TRIG_FALSE,TRIG_RUN1_ON; But branch if SF21 was previously on
                      01197         ;       END_SOUND       
                      01198         
                      01199         LOAD_MODIFIER MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_MID
0002CA 80E1 0C8B          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_MID
                      01200         PLAY HNDL_SC0_INC_0H,no_loop,loop_STD   ; 
                          M         list ;2 byte PLAY  [HANDLE]
0002CE 0840               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_INC_0H & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      01201 
                      01202         ;begin to play acceleration...
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 39
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01203         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_OR+USER_INTLK_BITS,COUPLER_MASK5,MERGE_ALL_MASK  ;OR=SETt
0002D0 5EE6 0020          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_OR+USER_INTLK_BITS,COUPLER_MASK5,M
                      01204         ;NOTE: CANNOT PLAY NON PRIME MOVER SOUNDS IN THIS EVENT --
                      01205         ;               IT INTERRUPTS IDLE SOUNDS...
                      01206                 ;BRANCH_TO      CH1SC0_IDLE_EXIT_IDLERUN
                      01207         ;Notch1=0 is initial default...
                      01208         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_LODE+WORK_SPEED_DELTA,NOTCH1,WORK_NOTCH    
0002D4 0BE6 0100          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_LODE+WORK_SPEED_DELTA,NOTCH1,WORK_
                      01209         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_LODE+PREV_NOTCH,NOTCH1,WORK_NOTCH  
0002D8 1BE6 0100          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_LODE+PREV_NOTCH,NOTCH1,WORK_NOTCH
                      01210         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_LODE+WORK_PEAK_SPD,0x00,0  
0002DC 19E6 0000          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_LODE+WORK_PEAK_SPD,0x00,0
                      01211 
                      01212         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+VARY_LOAD,+SCALE_INCR_2,SCALE_MAX   ;increment SC
0002E0 BCE6 0F02          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+VARY_LOAD,+SCALE_INCR_2,
                      01213 
0002E4                01214 CH1SC0_IDLE_EXIT_IDLERUN
                      01215         MASK_COMPARE    WORK_SPEED_DELTA,IMMED_DATA,0x00,COMP_ALL,SKIP_SAME   ;Skip if <
0002E4 0BFC 0000          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,WORK_SPEED_DELTA,0x00,COMP_ALL
                      01216                 BRANCH_TO       CH1SC0_IDLE_EXIT_IDLERUN2       ;do not re-trim when unit has been movin
                          M         
                          M         if      (CH1SC0_IDLE_EXIT_IDLERUN2-SKEME_BASE) > 0xFFF      ;check branch size in SCHEME
                          M                 error   CH1SC0_IDLE_EXIT_IDLERUN2 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0002E8 2AC3               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_IDLE_EXIT_IDLERUN2-SKEME_BASE)) & 0x0F) , low (CH1
                          M         endif
                          M                 
                      01217  
                      01218         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_NOTCHDN_ON              ; Skip if SF27 is not currently oFF
0002EA 2604               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_NOTCHDN_ON 
                      01219                 BRANCH_TO       CH1SC0_IDLE_EXIT_IDLERUN2       ;do not trim when operator has selected 
                          M         
                          M         if      (CH1SC0_IDLE_EXIT_IDLERUN2-SKEME_BASE) > 0xFFF      ;check branch size in SCHEME
                          M                 error   CH1SC0_IDLE_EXIT_IDLERUN2 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0002EC 2AC3               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_IDLE_EXIT_IDLERUN2-SKEME_BASE)) & 0x0F) , low (CH1
                          M         endif
                          M                 
                      01220          
                      01221         ;LOAD_MODIFIER  MTYPE_SNDCV,SCV_INIT_IDLE_TRIM,48,0             ;CV169 ;decimal 4, 16, 32, 64
                      01222         ;INIT_IDLE_TRIM EQU 0x32        ;decimal 4, 16, 32, 64
                      01223         MASK_COMPARE    SCV_INIT_IDLE_TRIM,IMMED_DATA,0x00,COMP_ALL,SKIP_SAME   ;Skip if <
0002EE A0FC 0000          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_INIT_IDLE_TRIM,0x00,COMP_ALL
                      01224                 BRANCH_TO       CH1SC0_IDLE_EXIT_IDLERUN1
                          M         
                          M         if      (CH1SC0_IDLE_EXIT_IDLERUN1-SKEME_BASE) > 0xFFF      ;check branch size in SCHEME
                          M                 error   CH1SC0_IDLE_EXIT_IDLERUN1 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0002F2 F6C2               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_IDLE_EXIT_IDLERUN1-SKEME_BASE)) & 0x0F) , low (CH1
                          M         endif
                          M                 
                      01225         BRANCH_TO       CH1SC0_IDLE_EXIT_IDLERUN2       ;do not trim when value is not >0...
                          M         
                          M         if      (CH1SC0_IDLE_EXIT_IDLERUN2-SKEME_BASE) > 0xFFF      ;check branch size in SCHEME
                          M                 error   CH1SC0_IDLE_EXIT_IDLERUN2 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0002F4 2AC3               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_IDLE_EXIT_IDLERUN2-SKEME_BASE)) & 0x0F) , low (CH1
                          M         endif
                          M                 
                      01226 ;---
0002F6                01227 CH1SC0_IDLE_EXIT_IDLERUN1
                      01228 ;--------------------------------------------------------------
                      01229 ;       Standing locomotive will idle at greater notch depending on trim LOAD_TRIM.
                      01230 ;       Where a value of zero will result in no trim increase (i.e., idle in Notch1)
                      01231 ;       and a value of 16 (0x10) in CV167 will result in an increase to idle in Notch2.
                      01232 ;       CV can select notch1-4 for idle
                      01233 ;--------------------------------------------------------------
                      01234         MASK_COMPARE    SCV_INIT_IDLE_TRIM,IMMED_DATA,0x17,COMP_ALL,SKIP_GRTR   ;Skip if 
0002F6 A0FF 0017          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,SCV_INIT_IDLE_TRIM,0x17,COMP_ALL
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 40
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01235                 BRANCH_TO       CH1SC0_IDLE_TRIM1
                          M         
                          M         if      (CH1SC0_IDLE_TRIM1-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH1SC0_IDLE_TRIM1 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0002FA FEC2               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_IDLE_TRIM1-SKEME_BASE)) & 0x0F) , low (CH1SC0_IDLE
                          M         endif
                          M                 
                      01236         BRANCH_TO       CH1SC0_IDLE_TEST_TRIM2  ;set increased delta for big trim...
                          M         
                          M         if      (CH1SC0_IDLE_TEST_TRIM2-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_IDLE_TEST_TRIM2 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0002FC 08C3               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_IDLE_TEST_TRIM2-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      01237 
0002FE                01238 CH1SC0_IDLE_TRIM1       
                      01239         ;since SCV_INIT_IDLE_TRIM defaults to 4 then SMALL delta is set...
                      01240         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+VARY_LOAD,+SCALE_INCR_2,SCALE_MAX    ;Increment S
0002FE BCE6 0F02          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+VARY_LOAD,+SCALE_INCR_2,
                      01241         ;TRIM (INCREASE) IDLE TO NOTCH2
                      01242         ;v6.1
                      01243         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+WORK_SPEED_DELTA,+NOTCH1,MAX_NOTCH_VAL   ;increme
000302 ABE6 7000          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+WORK_SPEED_DELTA,+NOTCH1
                      01244         BRANCH_TO       CH1SC0_IDLE_EXIT_IDLERUN2
                          M         
                          M         if      (CH1SC0_IDLE_EXIT_IDLERUN2-SKEME_BASE) > 0xFFF      ;check branch size in SCHEME
                          M                 error   CH1SC0_IDLE_EXIT_IDLERUN2 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000306 2AC3               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_IDLE_EXIT_IDLERUN2-SKEME_BASE)) & 0x0F) , low (CH1
                          M         endif
                          M                 
                      01245         
000308                01246 CH1SC0_IDLE_TEST_TRIM2
                      01247         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+VARY_LOAD,+SCALE_INCR_3,SCALE_MAX    ;Increment S
000308 BCE6 0F03          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+VARY_LOAD,+SCALE_INCR_3,
                      01248         MASK_COMPARE    SCV_INIT_IDLE_TRIM,IMMED_DATA,0x33,COMP_ALL,SKIP_GRTR   ;Skip if 
00030C A0FF 0033          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,SCV_INIT_IDLE_TRIM,0x33,COMP_ALL
                      01249                 BRANCH_TO       CH1SC0_IDLE_TRIM2
                          M         
                          M         if      (CH1SC0_IDLE_TRIM2-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH1SC0_IDLE_TRIM2 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000310 14C3               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_IDLE_TRIM2-SKEME_BASE)) & 0x0F) , low (CH1SC0_IDLE
                          M         endif
                          M                 
                      01250         BRANCH_TO       CH1SC0_IDLE_TEST_TRIM3  ;set big increase delte for bigger trim...
                          M         
                          M         if      (CH1SC0_IDLE_TEST_TRIM3-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_IDLE_TEST_TRIM3 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000312 1EC3               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_IDLE_TEST_TRIM3-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      01251         
000314                01252 CH1SC0_IDLE_TRIM2
                      01253         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+VARY_LOAD,+SCALE_INCR_2,SCALE_MAX    ;Increment S
000314 BCE6 0F02          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+VARY_LOAD,+SCALE_INCR_2,
                      01254         ;TRIM (INCREASE) IDLE TO NOTCH3
                      01255         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+WORK_SPEED_DELTA,NOTCH2,MAX_NOTCH_VAL   ;incremen
000318 ABE6 7010          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+WORK_SPEED_DELTA,NOTCH2,
                      01256         BRANCH_TO       CH1SC0_IDLE_EXIT_IDLERUN2
                          M         
                          M         if      (CH1SC0_IDLE_EXIT_IDLERUN2-SKEME_BASE) > 0xFFF      ;check branch size in SCHEME
                          M                 error   CH1SC0_IDLE_EXIT_IDLERUN2 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00031C 2AC3               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_IDLE_EXIT_IDLERUN2-SKEME_BASE)) & 0x0F) , low (CH1
                          M         endif
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 41
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                 
                      01257         
00031E                01258 CH1SC0_IDLE_TEST_TRIM3
                      01259         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+VARY_LOAD,+SCALE_INCR_3,SCALE_MAX    ;Increment S
00031E BCE6 0F03          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+VARY_LOAD,+SCALE_INCR_3,
                      01260         MASK_COMPARE    SCV_INIT_IDLE_TRIM,IMMED_DATA,0x32,COMP_ALL,SKIP_LESS   ;Skip if <
000322 A0FE 0032          M                 DB      CMD_MASK_COMPARE+SKIP_LESS+IMMED_DATA,SCV_INIT_IDLE_TRIM,0x32,COMP_ALL
                      01261                 ;TRIM (INCREASE) IDLE TO NOTCH4
                      01262                 LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+WORK_SPEED_DELTA,NOTCH3,MAX_NOTCH_VAL   ;
000326 ABE6 7020          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+WORK_SPEED_DELTA,NOTCH3,
                      01263                 
00032A                01264 CH1SC0_IDLE_EXIT_IDLERUN2       
                      01265 ;Fall thru to complete transition
                      01266 
00032A                01267 CH1SC0_ACCEL_IDLERUN2
                      01268 ;======================================================================
                      01269 ;       Evaluate WORK_NOTCH  
                      01270 ;===================================================================================
                      01271 ;       WORK_NOTCH is computed by the decoder and is continuously changed.
                      01272 ;       The rate of change is managed by the SCV_NOTCH   (CV132) Controller Notch Rate where the 
                      01273 ;       default value CV132=127 is mid range. Lower values are a slower rate -- higher is faster.  
                      01274 ;       This project uses increments by NOTCH_UP_VAL of decimal 16 [0x10] for each notch.
                      01275 ;       WORK_NOTCH will vary by more than one increment depending on rate of speed change and notch rate
                      01276 ;       The variable input to the computation is WORK_SPEED which is an internal value from decimal 0-99
                      01277 ;       99 divided by 16 gives the 7 integers for notches 1-8.
                      01278 ;       However the WORK_NOTCH register is incremented by 16's and has the range:
                      01279 ;       NOTCH   Decimal HEX                     Bit                     Throttle 
                      01280 ;                                                               7654 3210       Speed (typical)
                      01281 ;       0               0               (low idle option is at rest, not moving... )
                      01282 ;       1               0               0x00            0000 0000               0
                      01283 ;       2               16              0x10            0001 0000               12
                      01284 ;       3               32              0x20            0010 0000               24
                      01285 ;       4               48              0x30            0011 0000               36
                      01286 ;       5               64              0x40            0100 0000               48
                      01287 ;       6               80              0x50            0101 0000               60
                      01288 ;       7               96              0x60            0110 0000               72
                      01289 ;       8               112             0x70            0111 0000               84
                      01290 ;       9               128             0x80            1000 0000               96
                      01291 ;       10              144             0x90            1001 0000
                      01292 ;       11              160             0xA0            1010 0000
                      01293 ;       12              176             0xB0            1011 0000
                      01294 ;       13              192             0xC0            1100 0000
                      01295 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      01296 
00032A                01297 CH1SC0_STARTMOVE_END_ACCL
                      01298         ;======================== current notch is passed to continuous running
                      01299         ;                                                       via PREV_NOTCH. Any additional accelerat
                      01300         ;                                                       or deceleration is processed there.
                      01301         ;========================
                      01302         ;v6.1 DO fall thru to run continuous 
                      01303         BRANCH_TO       CH1SC0_CONTINUOUS_NOTCH 
                          M         
                          M         if      (CH1SC0_CONTINUOUS_NOTCH-SKEME_BASE) > 0xFFF        ;check branch size in SCHEME
                          M                 error   CH1SC0_CONTINUOUS_NOTCH range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00032A 48C3               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_CONTINUOUS_NOTCH-SKEME_BASE)) & 0x0F) , low (CH1SC
                          M         endif
                          M                 
                      01304         END_SOUND
00032C 0000               M                 DB      CMD_END_SND,0
                      01305 
                      01306         
                      01307 ;======================================major rotine  ================================
                      01308 ;UC1.6.2================
                      01309   INITIATE_SOUND        TRIG_MOVING,NORMAL              ;T_SPD_IDLEXIT,RUN_WHILE_TRIG+ZAP       ;NO_PREE
00032E 0E90               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), TRIG_MOVING +((NORMAL) & 0x80)
  0000000A                M ICNT += 1
                          M 
                      01310   ; TRANSITION to STEP 1   RUN_WHILE_TRIG       
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 42
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01311 ;---
000330                01312 CH1SC0_GEN1_IDLE_RUN_TRANSITION
                      01313         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+VARY_LOAD,+SCALE_INCR_2,SCALE_MAX   ;increment SC
000330 BCE6 0F02          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+VARY_LOAD,+SCALE_INCR_2,
                      01314         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_MID
000334 80E1 0C8B          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_MID
                      01315         MASK_COMPARE    SCV_FEATURE_DISABLE,IMMED_DATA,0x00,COMP_bit0,SKIP_SAME         ;SKIP_LESSSKIP_G
000338 B8FC FE00          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_FEATURE_DISABLE,0x00,COMP_bit0
                      01316                 PLAY            HNDL_SC0_DEC_1H,no_loop,loop_STD                ;GEN1_RUN_IDL2b
                          M         list ;2 byte PLAY  [HANDLE]
00033C 2240               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_DEC_1H & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      01317         MASK_COMPARE    SCV_FEATURE_DISABLE,IMMED_DATA,0x00,COMP_bit0,SKIP_SAME         ;SKIP_LESSSKIP_G
00033E B8FC FE00          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_FEATURE_DISABLE,0x00,COMP_bit0
                      01318                 PLAY            HNDL_SC0_INC_0H,no_loop,loop_STD                ;GEN1_IDL_RUN2b
                          M         list ;2 byte PLAY  [HANDLE]
000342 0840               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_INC_0H & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      01319         END_SOUND       
000344 0000               M                 DB      CMD_END_SND,0
                      01320         
                      01321         
                      01322         ; ------------------------------------------------
                      01323         ;  CONTINUOUS NOTCH SOUNDS WITH INTER-NOTCH SOUNDS
                      01324         ; ------------------------------------------------
                      01325 ;-------------------------------
                      01326 ;DIESEL RUN phase
                      01327         ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                      01328         ;       THIS ROUTINE IS CH1_ primary PERSISTENT (NOT INTERRUPTABLE)
                      01329         ;       this is MODIFIED by DISCRETE notch change logic to vary AMPL with NOTCH setting, RPMs al
                      01330         ;----------------------------------------------------
                      01331 ;UC1.6.2================
                      01332         INITIATE_SOUND  TRIG_MOVING,RUN_WHILE_TRIG      ;+ZAP   ;T_SPD_RUN
000346 0E92               M                 DB      CMD_INITIATE_SND + ((RUN_WHILE_TRIG) & 0x07), TRIG_MOVING +((RUN_WHILE_TRIG) & 0
  0000000B                M ICNT += 1
                          M 
                      01333         ;+++++++++++++++++++++++++++++++++++++++++++++++++
000348                01334 CH1SC0_CONTINUOUS_NOTCH
                      01335         ;SKIP_ON_TRIGGER        TRIG_FALSE,TRIG_FAND_ON         ; But skip if SF33 was previously on
                      01336         ;       BRANCH_TO       CH1SC0_NEXT_RUN_SOUNDS  
                      01337 ;---    
                      01338         ;Increase LOAD
                      01339         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_TBRAKE_ON               ; But skip if SF26 was previously oFF
000348 2B04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_TBRAKE_ON 
                      01340                 BRANCH_TO       CH1SC0_LOAD_RUN_IS_ACCEL
                          M         
                          M         if      (CH1SC0_LOAD_RUN_IS_ACCEL-SKEME_BASE) > 0xFFF       ;check branch size in SCHEME
                          M                 error   CH1SC0_LOAD_RUN_IS_ACCEL range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00034A 62C3               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_LOAD_RUN_IS_ACCEL-SKEME_BASE)) & 0x0F) , low (CH1S
                          M         endif
                          M                 
                      01341                 
                      01342         ;Decrease LOAD
                      01343         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_NOTCHDN_ON              ; But skip if SF27 was previously oFF
00034C 2604               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_NOTCHDN_ON 
                      01344                 BRANCH_TO       CH1SC0_LOAD_RUN_IS_DECEL
                          M         
                          M         if      (CH1SC0_LOAD_RUN_IS_DECEL-SKEME_BASE) > 0xFFF       ;check branch size in SCHEME
                          M                 error   CH1SC0_LOAD_RUN_IS_DECEL range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00034E 7AC3               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_LOAD_RUN_IS_DECEL-SKEME_BASE)) & 0x0F) , low (CH1S
                          M         endif
                          M                 
                      01345                 
                      01346         LOAD_MODIFIER   MTYPE_BLEND,BLEND_CURRENT_CHNL+BLEND_GAIN0+BLEND_FASE0,BLENDG_DSL_ACCEL1,BLENDF_
000350 00E3 0506          M                 DB      CMD_LOAD_MODIFY+(MTYPE_BLEND&0x0F),BLEND_CURRENT_CHNL+BLEND_GAIN0+BLEND_FASE0,BL
                      01347         LOAD_MODIFIER MTYPE_PITCH,ANALOG_PITCH_MODIFY+0x0,IMAXP_DIESEL,DITHERP_DIESEL   ;for discrete no
000354 A0E2 005E          M                 DB      CMD_LOAD_MODIFY+(MTYPE_PITCH&0x0F),ANALOG_PITCH_MODIFY+0x0,IMAXP_DIESEL,DITHERP_
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 43
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01348         ;since prev = 10=NOTCH2 and work = 0 or 10 do next transition...
                      01349 
000358                01350 CH1SC0_TEST_LOAD_RUN
                      01351         SKIP_ON_TRIGGER TRIG_TRUE,T_SPD_DECEL1          ;check if DECEL
000358 7805               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_TRUE & 0x03), T_SPD_DECEL1 
                      01352                 BRANCH_TO       CH1SC0_LOAD_RUN_TEST_ACCEL
                          M         
                          M         if      (CH1SC0_LOAD_RUN_TEST_ACCEL-SKEME_BASE) > 0xFFF     ;check branch size in SCHEME
                          M                 error   CH1SC0_LOAD_RUN_TEST_ACCEL range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00035A 5EC3               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_LOAD_RUN_TEST_ACCEL-SKEME_BASE)) & 0x0F) , low (CH
                          M         endif
                          M                 
                      01353         BRANCH_TO       CH1SC0_LOAD_RUN_IS_DECEL
                          M         
                          M         if      (CH1SC0_LOAD_RUN_IS_DECEL-SKEME_BASE) > 0xFFF       ;check branch size in SCHEME
                          M                 error   CH1SC0_LOAD_RUN_IS_DECEL range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00035C 7AC3               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_LOAD_RUN_IS_DECEL-SKEME_BASE)) & 0x0F) , low (CH1S
                          M         endif
                          M                 
                      01354 ;---
00035E                01355 CH1SC0_LOAD_RUN_TEST_ACCEL
                      01356         ;should continue to run up to NOTCH3...
                      01357 
                      01358         SKIP_ON_TRIGGER TRIG_TRUE,T_SPD_ACCEL1          ;check if ACCEL
00035E 7305               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_TRUE & 0x03), T_SPD_ACCEL1 
                      01359                 BRANCH_TO       CH1SC0_LOAD_RUN_CADENCE
                          M         
                          M         if      (CH1SC0_LOAD_RUN_CADENCE-SKEME_BASE) > 0xFFF        ;check branch size in SCHEME
                          M                 error   CH1SC0_LOAD_RUN_CADENCE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000360 9AC3               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_LOAD_RUN_CADENCE-SKEME_BASE)) & 0x0F) , low (CH1SC
                          M         endif
                          M                 
                      01360                 
                      01361         ;ACCCEL1 STAYS ON UNTIL THROTTLE IS DECREASED...
000362                01362 CH1SC0_LOAD_RUN_IS_ACCEL
                      01363         LOAD_MODIFIER  MTYPE_BLEND,BLEND_CURRENT_CHNL,BLENDG_DSL_ACCEL0,BLENDF_DSL_ACCEL0
000362 00E3 0204          M                 DB      CMD_LOAD_MODIFY+(MTYPE_BLEND&0x0F),BLEND_CURRENT_CHNL,BLENDG_DSL_ACCEL0,BLENDF_D
                      01364         LOAD_MODIFIER  MTYPE_PITCH,ANALOG_PITCH_MODIFY,MAXP_DIESEL,0x0  
000366 A0E2 003E          M                 DB      CMD_LOAD_MODIFY+(MTYPE_PITCH&0x0F),ANALOG_PITCH_MODIFY,MAXP_DIESEL,0x0
                      01365         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+VARY_LOAD,+SCALE_INCR_6,SCALE_MAX   ;Increment
00036A BCE6 0F06          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+VARY_LOAD,+SCALE_INCR_6,
                      01366         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_NOTCHDN_ON              ; But skip if SF27 was previously oFF
00036E 2604               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_NOTCHDN_ON 
                      01367                 LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+VARY_LOAD,+SCALE_INCR_4,SCALE_MAX   ;Incr
000370 BCE6 0F04          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+VARY_LOAD,+SCALE_INCR_4,
                      01368                 
                      01369         ;set drift interlock:
                      01370         ;(drift is interlocked when not decelerating. when accelerating heavy sounds play.
                      01371         ;interlock is set on bit is =1)(i.e. DRIFTING IS OFF)
                      01372         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_OR+USER_INTLK_BITS,VARY_DRIFT_MASK7,MERGE_ALL_MASK       
000374 5EE6 0080          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_OR+USER_INTLK_BITS,VARY_DRIFT_MASK
                      01373 
                      01374         BRANCH_TO       CH1SC0_LOAD_RUN_CADENCE
                          M         
                          M         if      (CH1SC0_LOAD_RUN_CADENCE-SKEME_BASE) > 0xFFF        ;check branch size in SCHEME
                          M                 error   CH1SC0_LOAD_RUN_CADENCE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000378 9AC3               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_LOAD_RUN_CADENCE-SKEME_BASE)) & 0x0F) , low (CH1SC
                          M         endif
                          M                 
                      01375 
00037A                01376 CH1SC0_LOAD_RUN_IS_DECEL
                      01377         LOAD_MODIFIER  MTYPE_BLEND,BLEND_CURRENT_CHNL,BLENDG_DSL_DECEL0,BLENDF_DSL_DECEL0
00037A 00E3 0709          M                 DB      CMD_LOAD_MODIFY+(MTYPE_BLEND&0x0F),BLEND_CURRENT_CHNL,BLENDG_DSL_DECEL0,BLENDF_D
                      01378         LOAD_MODIFIER  MTYPE_PITCH,ANALOG_PITCH_MODIFY,MAXP_DIESEL,0x0
00037E A0E2 003E          M                 DB      CMD_LOAD_MODIFY+(MTYPE_PITCH&0x0F),ANALOG_PITCH_MODIFY,MAXP_DIESEL,0x0
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 44
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01379         MASK_COMPARE    VARY_LOAD,IMMED_DATA,SCV_LOAD_MIN,COMP_ALL,SKIP_GRTR            ;Prevent underfl
000382 1CFF 009E          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,VARY_LOAD,SCV_LOAD_MIN,COMP_ALL
                      01380                 LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+VARY_LOAD,-SCALE_INCR_2,SCALE_MAX        
000386 BCE6 0FFE          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+VARY_LOAD,-SCALE_INCR_2,
                      01381         ;decrement delta after throttle change:.............
                      01382         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_INTEGRATE+WORK_SPEED_DELTA,-0x10,MAX_NOTCH_VAL   ;decreme
00038A ABE6 70F0          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+WORK_SPEED_DELTA,-0x10,M
                      01383         MASK_COMPARE    WORK_SPEED_DELTA,IMMED_DATA,MIN_NOTCH_VAL,COMP_ALL,SKIP_SAME            ;prevent
00038E 0BFC 0000          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,WORK_SPEED_DELTA,MIN_NOTCH_VAL,COMP_ALL
                      01384                 LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_INTEGRATE+WORK_SPEED_DELTA,-0x10,MAX_NOTCH_VAL   
000392 ABE6 70F0          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+WORK_SPEED_DELTA,-0x10,M
                      01385 
                      01386         ;unset drift interlock: (DRIFTING IS ON)
                      01387         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_AND+USER_INTLK_BITS,~VARY_DRIFT_MASK7,MERGE_ALL_MASK     
Warning[202]: Argument out of range.  Least significant bits used.
000396 3EE6 007F          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_AND+USER_INTLK_BITS,~VARY_DRIFT_MA
                      01388 
                      01389 ;-----
00039A                01390 CH1SC0_LOAD_RUN_CADENCE
                      01391         ;(drift is interlocked when not decelerating. when accelerating heavy sounds play.
                      01392         ;interlock is set on bit is =1)(i.e. DRIFTING IS OFF)
                      01393         MASK_COMPARE    USER_INTLK_BITS,IMMED_DATA,VARY_DRIFT_MASK7,~VARY_DRIFT_MASK7,SKIP_SAME ;bit7   
Warning[202]: Argument out of range.  Least significant bits used.
00039A 1EFC 7F80          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,USER_INTLK_BITS,VARY_DRIFT_MASK7,~VARY_DRI
                      01394                 BRANCH_TO       CH1SC0_SET_LIGHT_DRIFT
                          M         
                          M         if      (CH1SC0_SET_LIGHT_DRIFT-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_SET_LIGHT_DRIFT range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00039E D6C3               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_SET_LIGHT_DRIFT-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      01395         
                      01396 ;;;;;;;;;;;VARY_LOAD            EQU WORK_USER_2 ; used to vary scale from outside motor sound loop      
                      01397                         ;                                                               ; used to branch
                      01398         ;tune VARY_LOAD with SCV_LOAD_MIN:
                      01399 ;;;;;;;;;;;;;;; coding extra GOTOs in branch table::::::::::::::::::
                      01400         MASK_COMPARE    VARY_LOAD,IMMED_DATA,SCALE_F,COMP_ALL,SKIP_SAME
0003A0 1CFC 000F          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,VARY_LOAD,SCALE_F,COMP_ALL
                      01401                 BRANCH_TO       CH1SC0_EXAUST_15
                          M         
                          M         if      (CH1SC0_EXAUST_15-SKEME_BASE) > 0xFFF               ;check branch size in SCHEME
                          M                 error   CH1SC0_EXAUST_15 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0003A4 ACC3               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_EXAUST_15-SKEME_BASE)) & 0x0F) , low (CH1SC0_EXAUS
                          M         endif
                          M                 
                      01402         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_F
0003A6 80E1 0F8B          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_F
                      01403         BRANCH_TO       CH1SC0_RUN_MAIN
                          M         
                          M         if      (CH1SC0_RUN_MAIN-SKEME_BASE) > 0xFFF                ;check branch size in SCHEME
                          M                 error   CH1SC0_RUN_MAIN range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0003AA 00C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RUN_MAIN-SKEME_BASE)) & 0x0F) , low (CH1SC0_RUN_MA
                          M         endif
                          M                 
                      01404                 
0003AC                01405 CH1SC0_EXAUST_15        
                      01406         MASK_COMPARE    VARY_LOAD,IMMED_DATA,SCALE_E,COMP_ALL,SKIP_SAME
0003AC 1CFC 000E          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,VARY_LOAD,SCALE_E,COMP_ALL
                      01407                 BRANCH_TO       CH1SC0_EXAUST_14
                          M         
                          M         if      (CH1SC0_EXAUST_14-SKEME_BASE) > 0xFFF               ;check branch size in SCHEME
                          M                 error   CH1SC0_EXAUST_14 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0003B0 B8C3               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_EXAUST_14-SKEME_BASE)) & 0x0F) , low (CH1SC0_EXAUS
                          M         endif
                          M                 
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 45
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01408         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_E
0003B2 80E1 0E8B          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_E
                      01409         BRANCH_TO       CH1SC0_RUN_MAIN
                          M         
                          M         if      (CH1SC0_RUN_MAIN-SKEME_BASE) > 0xFFF                ;check branch size in SCHEME
                          M                 error   CH1SC0_RUN_MAIN range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0003B6 00C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RUN_MAIN-SKEME_BASE)) & 0x0F) , low (CH1SC0_RUN_MA
                          M         endif
                          M                 
                      01410                 
0003B8                01411 CH1SC0_EXAUST_14
                      01412         MASK_COMPARE    VARY_LOAD,IMMED_DATA,SCALE_D,COMP_ALL,SKIP_SAME
0003B8 1CFC 000D          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,VARY_LOAD,SCALE_D,COMP_ALL
                      01413                 BRANCH_TO       CH1SC0_EXAUST_13
                          M         
                          M         if      (CH1SC0_EXAUST_13-SKEME_BASE) > 0xFFF               ;check branch size in SCHEME
                          M                 error   CH1SC0_EXAUST_13 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0003BC C4C3               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_EXAUST_13-SKEME_BASE)) & 0x0F) , low (CH1SC0_EXAUS
                          M         endif
                          M                 
                      01414         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_D
0003BE 80E1 0D8B          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_D
                      01415         BRANCH_TO       CH1SC0_RUN_MAIN
                          M         
                          M         if      (CH1SC0_RUN_MAIN-SKEME_BASE) > 0xFFF                ;check branch size in SCHEME
                          M                 error   CH1SC0_RUN_MAIN range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0003C2 00C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RUN_MAIN-SKEME_BASE)) & 0x0F) , low (CH1SC0_RUN_MA
                          M         endif
                          M                 
                      01416                 
0003C4                01417 CH1SC0_EXAUST_13
                      01418         MASK_COMPARE    VARY_LOAD,IMMED_DATA,SCALE_C,COMP_ALL,SKIP_SAME
0003C4 1CFC 000C          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,VARY_LOAD,SCALE_C,COMP_ALL
                      01419                 BRANCH_TO       CH1SC0_EXAUST_12
                          M         
                          M         if      (CH1SC0_EXAUST_12-SKEME_BASE) > 0xFFF               ;check branch size in SCHEME
                          M                 error   CH1SC0_EXAUST_12 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0003C8 D0C3               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_EXAUST_12-SKEME_BASE)) & 0x0F) , low (CH1SC0_EXAUS
                          M         endif
                          M                 
                      01420         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_C
0003CA 80E1 0C8B          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_C
                      01421         BRANCH_TO       CH1SC0_RUN_MAIN
                          M         
                          M         if      (CH1SC0_RUN_MAIN-SKEME_BASE) > 0xFFF                ;check branch size in SCHEME
                          M                 error   CH1SC0_RUN_MAIN range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0003CE 00C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RUN_MAIN-SKEME_BASE)) & 0x0F) , low (CH1SC0_RUN_MA
                          M         endif
                          M                 
                      01422                 
0003D0                01423 CH1SC0_EXAUST_12
                      01424         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_B
0003D0 80E1 0B8B          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_B
                      01425         BRANCH_TO       CH1SC0_RUN_MAIN
                          M         
                          M         if      (CH1SC0_RUN_MAIN-SKEME_BASE) > 0xFFF                ;check branch size in SCHEME
                          M                 error   CH1SC0_RUN_MAIN range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0003D4 00C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RUN_MAIN-SKEME_BASE)) & 0x0F) , low (CH1SC0_RUN_MA
                          M         endif
                          M                 
                      01426                 
0003D6                01427 CH1SC0_SET_LIGHT_DRIFT  
                      01428         MASK_COMPARE    VARY_LOAD,IMMED_DATA,SCALE_F,COMP_ALL,SKIP_SAME
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 46
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003D6 1CFC 000F          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,VARY_LOAD,SCALE_F,COMP_ALL
                      01429                 BRANCH_TO       CH1SC0_DRIFT_15
                          M         
                          M         if      (CH1SC0_DRIFT_15-SKEME_BASE) > 0xFFF                ;check branch size in SCHEME
                          M                 error   CH1SC0_DRIFT_15 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0003DA E2C3               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_DRIFT_15-SKEME_BASE)) & 0x0F) , low (CH1SC0_DRIFT_
                          M         endif
                          M                 
                      01430         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,DRIFT_VOLUME,SCALE_F
0003DC 80E1 0F37          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,DRIFT_VOLUME,SCALE_F
                      01431         BRANCH_TO       CH1SC0_RUN_MAIN
                          M         
                          M         if      (CH1SC0_RUN_MAIN-SKEME_BASE) > 0xFFF                ;check branch size in SCHEME
                          M                 error   CH1SC0_RUN_MAIN range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0003E0 00C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RUN_MAIN-SKEME_BASE)) & 0x0F) , low (CH1SC0_RUN_MA
                          M         endif
                          M                 
                      01432         
0003E2                01433 CH1SC0_DRIFT_15
                      01434         MASK_COMPARE    VARY_LOAD,IMMED_DATA,SCALE_E,COMP_ALL,SKIP_SAME
0003E2 1CFC 000E          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,VARY_LOAD,SCALE_E,COMP_ALL
                      01435                 BRANCH_TO       CH1SC0_DRIFT_14
                          M         
                          M         if      (CH1SC0_DRIFT_14-SKEME_BASE) > 0xFFF                ;check branch size in SCHEME
                          M                 error   CH1SC0_DRIFT_14 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0003E6 EEC3               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_DRIFT_14-SKEME_BASE)) & 0x0F) , low (CH1SC0_DRIFT_
                          M         endif
                          M                 
                      01436         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,DRIFT_VOLUME,SCALE_E
0003E8 80E1 0E37          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,DRIFT_VOLUME,SCALE_E
                      01437         BRANCH_TO       CH1SC0_RUN_MAIN
                          M         
                          M         if      (CH1SC0_RUN_MAIN-SKEME_BASE) > 0xFFF                ;check branch size in SCHEME
                          M                 error   CH1SC0_RUN_MAIN range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0003EC 00C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RUN_MAIN-SKEME_BASE)) & 0x0F) , low (CH1SC0_RUN_MA
                          M         endif
                          M                 
                      01438                 
0003EE                01439 CH1SC0_DRIFT_14
                      01440         MASK_COMPARE    VARY_LOAD,IMMED_DATA,SCALE_D,COMP_ALL,SKIP_SAME
0003EE 1CFC 000D          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,VARY_LOAD,SCALE_D,COMP_ALL
                      01441                 BRANCH_TO       CH1SC0_DRIFT_13
                          M         
                          M         if      (CH1SC0_DRIFT_13-SKEME_BASE) > 0xFFF                ;check branch size in SCHEME
                          M                 error   CH1SC0_DRIFT_13 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0003F2 FAC3               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_DRIFT_13-SKEME_BASE)) & 0x0F) , low (CH1SC0_DRIFT_
                          M         endif
                          M                 
                      01442         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,DRIFT_VOLUME,SCALE_D
0003F4 80E1 0D37          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,DRIFT_VOLUME,SCALE_D
                      01443         BRANCH_TO       CH1SC0_RUN_MAIN
                          M         
                          M         if      (CH1SC0_RUN_MAIN-SKEME_BASE) > 0xFFF                ;check branch size in SCHEME
                          M                 error   CH1SC0_RUN_MAIN range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0003F8 00C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RUN_MAIN-SKEME_BASE)) & 0x0F) , low (CH1SC0_RUN_MA
                          M         endif
                          M                 
                      01444                 
0003FA                01445 CH1SC0_DRIFT_13
                      01446         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,DRIFT_VOLUME,SCALE_C
0003FA 80E1 0C37          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,DRIFT_VOLUME,SCALE_C
                      01447         BRANCH_TO       CH1SC0_RUN_MAIN
                          M         
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 47
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         if      (CH1SC0_RUN_MAIN-SKEME_BASE) > 0xFFF                ;check branch size in SCHEME
                          M                 error   CH1SC0_RUN_MAIN range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0003FE 00C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RUN_MAIN-SKEME_BASE)) & 0x0F) , low (CH1SC0_RUN_MA
                          M         endif
                          M                 
                      01448                 
                      01449         
                      01450 ;--
000400                01451 CH1SC0_RUN_MAIN
                      01452 
                      01453 ;;;;;;;;;;;;;;;;;;;;;;;;; EVALUATE MOTOR ::::::::::::::::::
                      01454 
000400                01455 CH1SC0_EVAL_LOAD_RUN
                      01456 ;==============================================================
                      01457 ; all normal changes to notch come thru here:           
                      01458         ;CONTINUE CHECKING NOTCH CHANGES:
                      01459 ;======================================================================
                      01460 ;       Evaluate WORK_NOTCH  
                      01461 ;======================================================================
                      01462         ;TEST VARIOUS WAYS TO DETERMINE NOTCH CHANGE DIRECTION:
000400                01463 CH1SC0_CURRNOTCH_TEST
                      01464         ;accelerate?
                      01465         MASK_COMPARE    PREV_NOTCH,TARGET_DATA,WORK_NOTCH,COMP_7LSB,SKIP_LESS   ;Skip if   previousNotch
000400 1BFA 8001          M                 DB      CMD_MASK_COMPARE+SKIP_LESS+TARGET_DATA,PREV_NOTCH,WORK_NOTCH,COMP_7LSB
                      01466                 BRANCH_TO       CH1SC0_CURRNOTCH_TEST2          ;work is less
                          M         
                          M         if      (CH1SC0_CURRNOTCH_TEST2-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_CURRNOTCH_TEST2 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000404 08C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_CURRNOTCH_TEST2-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      01467         BRANCH_TO       CH1SC0_SETACC
                          M         
                          M         if      (CH1SC0_SETACC-SKEME_BASE) > 0xFFF                  ;check branch size in SCHEME
                          M                 error   CH1SC0_SETACC range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000406 1AC4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_SETACC-SKEME_BASE)) & 0x0F) , low (CH1SC0_SETACC-S
                          M         endif
                          M                 
                      01468         
000408                01469 CH1SC0_CURRNOTCH_TEST2  ;is decelerate?
                      01470         MASK_COMPARE    WORK_NOTCH,TARGET_DATA,PREV_NOTCH,COMP_7LSB,SKIP_LESS   ;Skip unless  previousNo
000408 01FA 801B          M                 DB      CMD_MASK_COMPARE+SKIP_LESS+TARGET_DATA,WORK_NOTCH,PREV_NOTCH,COMP_7LSB
                      01471                 BRANCH_TO       CH1SC0_CURRNOTCH_TEST3  ;prev is equal
                          M         
                          M         if      (CH1SC0_CURRNOTCH_TEST3-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_CURRNOTCH_TEST3 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00040C 10C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_CURRNOTCH_TEST3-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      01472         BRANCH_TO       CH1SC0_SETDEC                           ;decelerate
                          M         
                          M         if      (CH1SC0_SETDEC-SKEME_BASE) > 0xFFF                  ;check branch size in SCHEME
                          M                 error   CH1SC0_SETDEC range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00040E 88C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_SETDEC-SKEME_BASE)) & 0x0F) , low (CH1SC0_SETDEC-S
                          M         endif
                          M                 
                      01473 
000410                01474 CH1SC0_CURRNOTCH_TEST3  
                      01475         ;no change?  PREViousNotch = current
                      01476         ;work notch may change mid routine to a lesser value...
                      01477         MASK_COMPARE    PREV_NOTCH,TARGET_DATA,WORK_NOTCH,COMP_7LSB,SKIP_SAME   ;Skip if   previousNotch
000410 1BF8 8001          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+TARGET_DATA,PREV_NOTCH,WORK_NOTCH,COMP_7LSB
                      01478                 BRANCH_TO       CH1SC0_ERROR    ;skipped when =
                          M         
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 48
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         if      (CH1SC0_ERROR-SKEME_BASE) > 0xFFF                   ;check branch size in SCHEME
                          M                 error   CH1SC0_ERROR range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000414 18C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_ERROR-SKEME_BASE)) & 0x0F) , low (CH1SC0_ERROR-SKE
                          M         endif
                          M                 
                      01479         ;run:
                      01480         BRANCH_TO       CH1SC0_SETRUN
                          M         
                          M         if      (CH1SC0_SETRUN-SKEME_BASE) > 0xFFF                  ;check branch size in SCHEME
                          M                 error   CH1SC0_SETRUN range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000416 FAC4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_SETRUN-SKEME_BASE)) & 0x0F) , low (CH1SC0_SETRUN-S
                          M         endif
                          M                 
                      01481         
000418                01482 CH1SC0_ERROR
                      01483         ;DEBUG: THROTTLE ERROR....
                      01484         ;PLAY HNDL_SC0_DEBUG1,no_loop,loop_STD  
                      01485         BRANCH_TO       CH1SC0_SETRUN
                          M         
                          M         if      (CH1SC0_SETRUN-SKEME_BASE) > 0xFFF                  ;check branch size in SCHEME
                          M                 error   CH1SC0_SETRUN range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000418 FAC4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_SETRUN-SKEME_BASE)) & 0x0F) , low (CH1SC0_SETRUN-S
                          M         endif
                          M                 
                      01486 
                      01487         
                      01488         
                      01489 ;=====================BEGIN ACCELERATION TO NEW NOTCH===================================================
00041A                01490 CH1SC0_SETACC           
                      01491         LOAD_MODIFIER MTYPE_BLEND,BLEND_CURRENT_CHNL,BLENDG_DSL_ACCEL0,BLENDF_DSL_ACCEL0        ; motor 
00041A 00E3 0204          M                 DB      CMD_LOAD_MODIFY+(MTYPE_BLEND&0x0F),BLEND_CURRENT_CHNL,BLENDG_DSL_ACCEL0,BLENDF_D
                      01492 ;===================================
00041E                01493 CH1SC0_SETACC_START
                      01494 ;============================================================================================   
                      01495 ;       PREV_NOTCH is an integer work register value between 0 and 7 representing the nominal 
                      01496 ;       prior running notch. It is set by the continuous running routine.
                      01497 ;==================================================================
00041E                01498 CH1SC0_ACC_TESTN        
                      01499         MASK_COMPARE PREV_NOTCH,IMMED_DATA,NOTCH1,COMP_ALL,SKIP_SAME    ;Skip if Equal
00041E 1BFC 0000          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,PREV_NOTCH,NOTCH1,COMP_ALL
                      01500                 BRANCH_TO       CH1SC0_ACC_TESTN2
                          M         
                          M         if      (CH1SC0_ACC_TESTN2-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH1SC0_ACC_TESTN2 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000422 26C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_ACC_TESTN2-SKEME_BASE)) & 0x0F) , low (CH1SC0_ACC_
                          M         endif
                          M                 
                      01501         BRANCH_TO       CH1SC0_ACC1
                          M         
                          M         if      (CH1SC0_ACC1-SKEME_BASE) > 0xFFF                    ;check branch size in SCHEME
                          M                 error   CH1SC0_ACC1 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000424 60C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_ACC1-SKEME_BASE)) & 0x0F) , low (CH1SC0_ACC1-SKEME
                          M         endif
                          M                 
                      01502  
000426                01503 CH1SC0_ACC_TESTN2       
                      01504         MASK_COMPARE PREV_NOTCH,IMMED_DATA,NOTCH2,COMP_ALL,SKIP_SAME    ;Skip if Equal
000426 1BFC 0010          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,PREV_NOTCH,NOTCH2,COMP_ALL
                      01505                 BRANCH_TO       CH1SC0_ACC_TESTN3
                          M         
                          M         if      (CH1SC0_ACC_TESTN3-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH1SC0_ACC_TESTN3 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00042A 2EC4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_ACC_TESTN3-SKEME_BASE)) & 0x0F) , low (CH1SC0_ACC_
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 49
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         endif
                          M                 
                      01506         BRANCH_TO       CH1SC0_ACC2
                          M         
                          M         if      (CH1SC0_ACC2-SKEME_BASE) > 0xFFF                    ;check branch size in SCHEME
                          M                 error   CH1SC0_ACC2 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00042C 64C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_ACC2-SKEME_BASE)) & 0x0F) , low (CH1SC0_ACC2-SKEME
                          M         endif
                          M                 
                      01507         
00042E                01508 CH1SC0_ACC_TESTN3       
                      01509         MASK_COMPARE PREV_NOTCH,IMMED_DATA,NOTCH3,COMP_ALL,SKIP_SAME    ;Skip if Equal
00042E 1BFC 0020          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,PREV_NOTCH,NOTCH3,COMP_ALL
                      01510                 BRANCH_TO       CH1SC0_ACC_TESTN4
                          M         
                          M         if      (CH1SC0_ACC_TESTN4-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH1SC0_ACC_TESTN4 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000432 36C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_ACC_TESTN4-SKEME_BASE)) & 0x0F) , low (CH1SC0_ACC_
                          M         endif
                          M                 
                      01511         BRANCH_TO       CH1SC0_ACC3
                          M         
                          M         if      (CH1SC0_ACC3-SKEME_BASE) > 0xFFF                    ;check branch size in SCHEME
                          M                 error   CH1SC0_ACC3 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000434 74C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_ACC3-SKEME_BASE)) & 0x0F) , low (CH1SC0_ACC3-SKEME
                          M         endif
                          M                 
000436                01512 CH1SC0_ACC_TESTN4       
                      01513         MASK_COMPARE PREV_NOTCH,IMMED_DATA,NOTCH4,COMP_ALL,SKIP_SAME    ;Skip if Equal
000436 1BFC 0030          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,PREV_NOTCH,NOTCH4,COMP_ALL
                      01514                 BRANCH_TO       CH1SC0_ACC_TESTN5
                          M         
                          M         if      (CH1SC0_ACC_TESTN5-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH1SC0_ACC_TESTN5 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00043A 3EC4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_ACC_TESTN5-SKEME_BASE)) & 0x0F) , low (CH1SC0_ACC_
                          M         endif
                          M                 
                      01515         BRANCH_TO       CH1SC0_ACC4
                          M         
                          M         if      (CH1SC0_ACC4-SKEME_BASE) > 0xFFF                    ;check branch size in SCHEME
                          M                 error   CH1SC0_ACC4 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00043C 78C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_ACC4-SKEME_BASE)) & 0x0F) , low (CH1SC0_ACC4-SKEME
                          M         endif
                          M                 
00043E                01516 CH1SC0_ACC_TESTN5       
                      01517         MASK_COMPARE PREV_NOTCH,IMMED_DATA,NOTCH5,COMP_ALL,SKIP_SAME    ;Skip if Equal
00043E 1BFC 0040          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,PREV_NOTCH,NOTCH5,COMP_ALL
                      01518                 BRANCH_TO       CH1SC0_ACC_TESTN6
                          M         
                          M         if      (CH1SC0_ACC_TESTN6-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH1SC0_ACC_TESTN6 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000442 46C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_ACC_TESTN6-SKEME_BASE)) & 0x0F) , low (CH1SC0_ACC_
                          M         endif
                          M                 
                      01519         BRANCH_TO       CH1SC0_ACC5
                          M         
                          M         if      (CH1SC0_ACC5-SKEME_BASE) > 0xFFF                    ;check branch size in SCHEME
                          M                 error   CH1SC0_ACC5 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000444 7CC4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_ACC5-SKEME_BASE)) & 0x0F) , low (CH1SC0_ACC5-SKEME
                          M         endif
                          M                 
000446                01520 CH1SC0_ACC_TESTN6       
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 50
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01521         MASK_COMPARE PREV_NOTCH,IMMED_DATA,NOTCH6,COMP_ALL,SKIP_SAME    ;Skip if Equal
000446 1BFC 0050          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,PREV_NOTCH,NOTCH6,COMP_ALL
                      01522                 BRANCH_TO       CH1SC0_ACC_TESTN7
                          M         
                          M         if      (CH1SC0_ACC_TESTN7-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH1SC0_ACC_TESTN7 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00044A 4EC4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_ACC_TESTN7-SKEME_BASE)) & 0x0F) , low (CH1SC0_ACC_
                          M         endif
                          M                 
                      01523         BRANCH_TO       CH1SC0_ACC6
                          M         
                          M         if      (CH1SC0_ACC6-SKEME_BASE) > 0xFFF                    ;check branch size in SCHEME
                          M                 error   CH1SC0_ACC6 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00044C 80C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_ACC6-SKEME_BASE)) & 0x0F) , low (CH1SC0_ACC6-SKEME
                          M         endif
                          M                 
                      01524         
00044E                01525 CH1SC0_ACC_TESTN7
                      01526         MASK_COMPARE PREV_NOTCH,IMMED_DATA,NOTCH7,COMP_ALL,SKIP_SAME    ;Skip if Equal
00044E 1BFC 0060          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,PREV_NOTCH,NOTCH7,COMP_ALL
                      01527                 BRANCH_TO       CH1SC0_NEXT_RUN_SOUNDS  
                          M         
                          M         if      (CH1SC0_NEXT_RUN_SOUNDS-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_NEXT_RUN_SOUNDS range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000452 60C5               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_NEXT_RUN_SOUNDS-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      01528         BRANCH_TO       CH1SC0_ACC7
                          M         
                          M         if      (CH1SC0_ACC7-SKEME_BASE) > 0xFFF                    ;check branch size in SCHEME
                          M                 error   CH1SC0_ACC7 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000454 84C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_ACC7-SKEME_BASE)) & 0x0F) , low (CH1SC0_ACC7-SKEME
                          M         endif
                          M                 
                      01529         
                      01530 ;=========================================
000456                01531 CH1SC0_INCR_PREV_NOTCH_ACC      
                      01532 ;--------------
                      01533         MASK_COMPARE    PREV_NOTCH,TARGET_DATA,WORK_NOTCH,COMP_7LSB,SKIP_GRTR   ;Skip if  previousNotch 
000456 1BFB 8001          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+TARGET_DATA,PREV_NOTCH,WORK_NOTCH,COMP_7LSB
                      01534                 LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+PREV_NOTCH,+0x10,MAX_NOTCH_VAL   ; Increm
00045A BBE6 7010          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+PREV_NOTCH,+0x10,MAX_NOT
                      01535         BRANCH_TO       CH1SC0_NEXT_RUN_SOUNDS
                          M         
                          M         if      (CH1SC0_NEXT_RUN_SOUNDS-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_NEXT_RUN_SOUNDS range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00045E 60C5               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_NEXT_RUN_SOUNDS-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      01536         
                      01537 
                      01538 ;========================================================================
000460                01539 CH1SC0_ACC1             
                      01540 ;========================================================================
                      01541         ; will rev to next notch; running will lower to correct notch;
                      01542         ; run1 sounds will only play when CV132 computes notch1;
                      01543         ; Skipped when prev >= 1  (current must be > 1 to enter ACC (see compare above in normal))
                      01544         ; Only plays when manually selected notch 2:
                      01545 
                      01546         PLAY HNDL_SC0_INC_12,no_loop,loop_STD   
                          M         list ;2 byte PLAY  [HANDLE]
000460 0A40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_INC_12 & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      01547         BRANCH_TO       CH1SC0_INCR_PREV_NOTCH_ACC
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 51
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         
                          M         if      (CH1SC0_INCR_PREV_NOTCH_ACC-SKEME_BASE) > 0xFFF     ;check branch size in SCHEME
                          M                 error   CH1SC0_INCR_PREV_NOTCH_ACC range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000462 56C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_INCR_PREV_NOTCH_ACC-SKEME_BASE)) & 0x0F) , low (CH
                          M         endif
                          M                 
                      01548         
000464                01549 CH1SC0_ACC2
                      01550         PLAY HNDL_SC0_INC_23,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
000464 0B40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_INC_23 & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      01551         
                      01552         ;decrement delta after throttle change:.............
                      01553         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_INTEGRATE+WORK_SPEED_DELTA,-0x10,MAX_NOTCH_VAL   ;decreme
000466 ABE6 70F0          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+WORK_SPEED_DELTA,-0x10,M
                      01554         MASK_COMPARE    WORK_SPEED_DELTA,IMMED_DATA,MIN_NOTCH_VAL,COMP_ALL,SKIP_SAME            ;prevent
00046A 0BFC 0000          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,WORK_SPEED_DELTA,MIN_NOTCH_VAL,COMP_ALL
                      01555                 LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_INTEGRATE+WORK_SPEED_DELTA,-0x10,MAX_NOTCH_VAL   
00046E ABE6 70F0          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+WORK_SPEED_DELTA,-0x10,M
                      01556 
                      01557         BRANCH_TO       CH1SC0_INCR_PREV_NOTCH_ACC
                          M         
                          M         if      (CH1SC0_INCR_PREV_NOTCH_ACC-SKEME_BASE) > 0xFFF     ;check branch size in SCHEME
                          M                 error   CH1SC0_INCR_PREV_NOTCH_ACC range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000472 56C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_INCR_PREV_NOTCH_ACC-SKEME_BASE)) & 0x0F) , low (CH
                          M         endif
                          M                 
                      01558         
000474                01559 CH1SC0_ACC3
                      01560         PLAY HNDL_SC0_INC_34,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
000474 0C40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_INC_34 & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      01561         BRANCH_TO       CH1SC0_INCR_PREV_NOTCH_ACC
                          M         
                          M         if      (CH1SC0_INCR_PREV_NOTCH_ACC-SKEME_BASE) > 0xFFF     ;check branch size in SCHEME
                          M                 error   CH1SC0_INCR_PREV_NOTCH_ACC range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000476 56C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_INCR_PREV_NOTCH_ACC-SKEME_BASE)) & 0x0F) , low (CH
                          M         endif
                          M                 
                      01562         
000478                01563 CH1SC0_ACC4
                      01564         PLAY HNDL_SC0_INC_45,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
000478 0D40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_INC_45 & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      01565         BRANCH_TO       CH1SC0_INCR_PREV_NOTCH_ACC
                          M         
                          M         if      (CH1SC0_INCR_PREV_NOTCH_ACC-SKEME_BASE) > 0xFFF     ;check branch size in SCHEME
                          M                 error   CH1SC0_INCR_PREV_NOTCH_ACC range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00047A 56C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_INCR_PREV_NOTCH_ACC-SKEME_BASE)) & 0x0F) , low (CH
                          M         endif
                          M                 
                      01566         
00047C                01567 CH1SC0_ACC5 
                      01568         PLAY HNDL_SC0_INC_56,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
00047C 0E40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_INC_56 & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      01569         BRANCH_TO       CH1SC0_INCR_PREV_NOTCH_ACC
                          M         
                          M         if      (CH1SC0_INCR_PREV_NOTCH_ACC-SKEME_BASE) > 0xFFF     ;check branch size in SCHEME
                          M                 error   CH1SC0_INCR_PREV_NOTCH_ACC range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 52
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00047E 56C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_INCR_PREV_NOTCH_ACC-SKEME_BASE)) & 0x0F) , low (CH
                          M         endif
                          M                 
                      01570         
000480                01571 CH1SC0_ACC6
                      01572         PLAY HNDL_SC0_INC_67,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
000480 0F40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_INC_67 & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      01573         BRANCH_TO       CH1SC0_INCR_PREV_NOTCH_ACC
                          M         
                          M         if      (CH1SC0_INCR_PREV_NOTCH_ACC-SKEME_BASE) > 0xFFF     ;check branch size in SCHEME
                          M                 error   CH1SC0_INCR_PREV_NOTCH_ACC range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000482 56C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_INCR_PREV_NOTCH_ACC-SKEME_BASE)) & 0x0F) , low (CH
                          M         endif
                          M                 
                      01574         
000484                01575 CH1SC0_ACC7
                      01576         PLAY HNDL_SC0_INC_78,no_loop,loop_STD           
                          M         list ;2 byte PLAY  [HANDLE]
000484 1040               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_INC_78 & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      01577         BRANCH_TO       CH1SC0_INCR_PREV_NOTCH_ACC
                          M         
                          M         if      (CH1SC0_INCR_PREV_NOTCH_ACC-SKEME_BASE) > 0xFFF     ;check branch size in SCHEME
                          M                 error   CH1SC0_INCR_PREV_NOTCH_ACC range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000486 56C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_INCR_PREV_NOTCH_ACC-SKEME_BASE)) & 0x0F) , low (CH
                          M         endif
                          M                 
                      01578         
                      01579 ;================================================
                      01580 ; Decelerate CHANGE IN NOTCH DOWN:
000488                01581 CH1SC0_SETDEC
                      01582         ; Yes Decelerate:
                      01583         LOAD_MODIFIER MTYPE_BLEND,BLEND_CURRENT_CHNL,BLENDG_DSL_DECEL0,BLENDF_DSL_DECEL0        ; motor 
000488 00E3 0709          M                 DB      CMD_LOAD_MODIFY+(MTYPE_BLEND&0x0F),BLEND_CURRENT_CHNL,BLENDG_DSL_DECEL0,BLENDF_D
                      01584 
                      01585         
00048C                01586 CH1SC0_DEC_TESTN
                      01587 ;============================================================================================   
                      01588 ;       PREV_NOTCH is an integer work register value between 0 and 7 representing the nominal 
                      01589 ;       prior running notch. It is set by the continuous running routine.
                      01590 ;==================================================================
00048C                01591 CH1SC0_DEC_TESTN1               
                      01592         MASK_COMPARE PREV_NOTCH,IMMED_DATA,NOTCH1,COMP_ALL,SKIP_SAME    ;Skip if Equal
00048C 1BFC 0000          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,PREV_NOTCH,NOTCH1,COMP_ALL
                      01593                 BRANCH_TO       CH1SC0_DEC_TESTN2       
                          M         
                          M         if      (CH1SC0_DEC_TESTN2-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH1SC0_DEC_TESTN2 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000490 94C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_DEC_TESTN2-SKEME_BASE)) & 0x0F) , low (CH1SC0_DEC_
                          M         endif
                          M                 
                      01594         BRANCH_TO       CH1SC0_DEC1
                          M         
                          M         if      (CH1SC0_DEC1-SKEME_BASE) > 0xFFF                    ;check branch size in SCHEME
                          M                 error   CH1SC0_DEC1 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000492 F4C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_DEC1-SKEME_BASE)) & 0x0F) , low (CH1SC0_DEC1-SKEME
                          M         endif
                          M                 
                      01595         
000494                01596 CH1SC0_DEC_TESTN2       
                      01597         MASK_COMPARE PREV_NOTCH,IMMED_DATA,NOTCH2,COMP_ALL,SKIP_SAME    ;Skip if Equal
000494 1BFC 0010          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,PREV_NOTCH,NOTCH2,COMP_ALL
                      01598                 BRANCH_TO       CH1SC0_DEC_TESTN3
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 53
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         
                          M         if      (CH1SC0_DEC_TESTN3-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH1SC0_DEC_TESTN3 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000498 9CC4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_DEC_TESTN3-SKEME_BASE)) & 0x0F) , low (CH1SC0_DEC_
                          M         endif
                          M                 
                      01599         BRANCH_TO       CH1SC0_DEC2
                          M         
                          M         if      (CH1SC0_DEC2-SKEME_BASE) > 0xFFF                    ;check branch size in SCHEME
                          M                 error   CH1SC0_DEC2 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00049A F0C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_DEC2-SKEME_BASE)) & 0x0F) , low (CH1SC0_DEC2-SKEME
                          M         endif
                          M                 
                      01600         
00049C                01601 CH1SC0_DEC_TESTN3       
                      01602         MASK_COMPARE PREV_NOTCH,IMMED_DATA,NOTCH3,COMP_ALL,SKIP_SAME    ;Skip if Equal
00049C 1BFC 0020          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,PREV_NOTCH,NOTCH3,COMP_ALL
                      01603                 BRANCH_TO       CH1SC0_DEC_TESTN4
                          M         
                          M         if      (CH1SC0_DEC_TESTN4-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH1SC0_DEC_TESTN4 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0004A0 A4C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_DEC_TESTN4-SKEME_BASE)) & 0x0F) , low (CH1SC0_DEC_
                          M         endif
                          M                 
                      01604         BRANCH_TO       CH1SC0_DEC3
                          M         
                          M         if      (CH1SC0_DEC3-SKEME_BASE) > 0xFFF                    ;check branch size in SCHEME
                          M                 error   CH1SC0_DEC3 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0004A2 ECC4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_DEC3-SKEME_BASE)) & 0x0F) , low (CH1SC0_DEC3-SKEME
                          M         endif
                          M                 
                      01605         
0004A4                01606 CH1SC0_DEC_TESTN4       
                      01607         MASK_COMPARE PREV_NOTCH,IMMED_DATA,NOTCH4,COMP_ALL,SKIP_SAME    ;Skip if Equal
0004A4 1BFC 0030          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,PREV_NOTCH,NOTCH4,COMP_ALL
                      01608                 BRANCH_TO       CH1SC0_DEC_TESTN5
                          M         
                          M         if      (CH1SC0_DEC_TESTN5-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH1SC0_DEC_TESTN5 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0004A8 ACC4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_DEC_TESTN5-SKEME_BASE)) & 0x0F) , low (CH1SC0_DEC_
                          M         endif
                          M                 
                      01609         BRANCH_TO       CH1SC0_DEC4
                          M         
                          M         if      (CH1SC0_DEC4-SKEME_BASE) > 0xFFF                    ;check branch size in SCHEME
                          M                 error   CH1SC0_DEC4 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0004AA E8C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_DEC4-SKEME_BASE)) & 0x0F) , low (CH1SC0_DEC4-SKEME
                          M         endif
                          M                 
                      01610         
0004AC                01611 CH1SC0_DEC_TESTN5       
                      01612         MASK_COMPARE PREV_NOTCH,IMMED_DATA,NOTCH5,COMP_ALL,SKIP_SAME    ;Skip if Equal
0004AC 1BFC 0040          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,PREV_NOTCH,NOTCH5,COMP_ALL
                      01613                 BRANCH_TO       CH1SC0_DEC_TESTN6
                          M         
                          M         if      (CH1SC0_DEC_TESTN6-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH1SC0_DEC_TESTN6 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0004B0 B4C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_DEC_TESTN6-SKEME_BASE)) & 0x0F) , low (CH1SC0_DEC_
                          M         endif
                          M                 
                      01614         BRANCH_TO       CH1SC0_DEC5
                          M         
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 54
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         if      (CH1SC0_DEC5-SKEME_BASE) > 0xFFF                    ;check branch size in SCHEME
                          M                 error   CH1SC0_DEC5 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0004B2 E4C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_DEC5-SKEME_BASE)) & 0x0F) , low (CH1SC0_DEC5-SKEME
                          M         endif
                          M                 
                      01615         
0004B4                01616 CH1SC0_DEC_TESTN6       
                      01617         ;test prev=6 work=4
                      01618         MASK_COMPARE PREV_NOTCH,IMMED_DATA,NOTCH6,COMP_ALL,SKIP_SAME    ;Skip if Equal
0004B4 1BFC 0050          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,PREV_NOTCH,NOTCH6,COMP_ALL
                      01619                 BRANCH_TO       CH1SC0_DEC_TESTN7
                          M         
                          M         if      (CH1SC0_DEC_TESTN7-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH1SC0_DEC_TESTN7 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0004B8 BCC4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_DEC_TESTN7-SKEME_BASE)) & 0x0F) , low (CH1SC0_DEC_
                          M         endif
                          M                 
                      01620         BRANCH_TO       CH1SC0_DEC6
                          M         
                          M         if      (CH1SC0_DEC6-SKEME_BASE) > 0xFFF                    ;check branch size in SCHEME
                          M                 error   CH1SC0_DEC6 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0004BA E0C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_DEC6-SKEME_BASE)) & 0x0F) , low (CH1SC0_DEC6-SKEME
                          M         endif
                          M                 
                      01621         
0004BC                01622 CH1SC0_DEC_TESTN7       
                      01623         MASK_COMPARE PREV_NOTCH,IMMED_DATA,NOTCH7,COMP_ALL,SKIP_SAME    ;Skip if Equal
0004BC 1BFC 0060          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,PREV_NOTCH,NOTCH7,COMP_ALL
                      01624                 BRANCH_TO       CH1SC0_DEC_TESTN8
                          M         
                          M         if      (CH1SC0_DEC_TESTN8-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH1SC0_DEC_TESTN8 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0004C0 C4C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_DEC_TESTN8-SKEME_BASE)) & 0x0F) , low (CH1SC0_DEC_
                          M         endif
                          M                 
                      01625         BRANCH_TO       CH1SC0_DEC7
                          M         
                          M         if      (CH1SC0_DEC7-SKEME_BASE) > 0xFFF                    ;check branch size in SCHEME
                          M                 error   CH1SC0_DEC7 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0004C2 DCC4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_DEC7-SKEME_BASE)) & 0x0F) , low (CH1SC0_DEC7-SKEME
                          M         endif
                          M                 
                      01626                 
0004C4                01627 CH1SC0_DEC_TESTN8       
                      01628         MASK_COMPARE PREV_NOTCH,IMMED_DATA,NOTCH8,COMP_ALL,SKIP_SAME    ;Skip if Equal
0004C4 1BFC 0070          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,PREV_NOTCH,NOTCH8,COMP_ALL
                      01629                 BRANCH_TO       CH1SC0_NEXT_RUN_SOUNDS
                          M         
                          M         if      (CH1SC0_NEXT_RUN_SOUNDS-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_NEXT_RUN_SOUNDS range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0004C8 60C5               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_NEXT_RUN_SOUNDS-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      01630         BRANCH_TO       CH1SC0_DEC8
                          M         
                          M         if      (CH1SC0_DEC8-SKEME_BASE) > 0xFFF                    ;check branch size in SCHEME
                          M                 error   CH1SC0_DEC8 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0004CA D8C4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_DEC8-SKEME_BASE)) & 0x0F) , low (CH1SC0_DEC8-SKEME
                          M         endif
                          M                 
                      01631                 
                      01632 ;       CATCH ODD CHANGE IN NOTCH UP:
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 55
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01633         BRANCH_TO       CH1SC0_NEXT_RUN_SOUNDS
                          M         
                          M         if      (CH1SC0_NEXT_RUN_SOUNDS-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_NEXT_RUN_SOUNDS range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0004CC 60C5               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_NEXT_RUN_SOUNDS-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      01634 
0004CE                01635 CH1SC0_DECR_PREV_NOTCH  
                      01636 ;---------------        
0004CE                01637 CH1SC0_DECR_PREV_NOTCH_DEC1
                      01638         MASK_COMPARE    PREV_NOTCH,TARGET_DATA,MIN_NOTCH_VAL,COMP_ALL,SKIP_SAME   ;Skip if  previousNotc
0004CE 1BF8 0000          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+TARGET_DATA,PREV_NOTCH,MIN_NOTCH_VAL,COMP_ALL
                      01639                 LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+PREV_NOTCH,-0x10,MAX_NOTCH_VAL   ;Decreme
0004D2 BBE6 70F0          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+PREV_NOTCH,-0x10,MAX_NOT
                      01640         BRANCH_TO       CH1SC0_NEXT_RUN_SOUNDS
                          M         
                          M         if      (CH1SC0_NEXT_RUN_SOUNDS-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_NEXT_RUN_SOUNDS range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0004D6 60C5               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_NEXT_RUN_SOUNDS-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
0004D8                01641 CH1SC0_DEC8
                      01642         PLAY HNDL_SC0_DEC_87,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
0004D8 1B40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_DEC_87 & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      01643         BRANCH_TO       CH1SC0_DECR_PREV_NOTCH
                          M         
                          M         if      (CH1SC0_DECR_PREV_NOTCH-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_DECR_PREV_NOTCH range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0004DA CEC4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_DECR_PREV_NOTCH-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      01644         
0004DC                01645 CH1SC0_DEC7
                      01646         PLAY HNDL_SC0_DEC_76,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
0004DC 1C40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_DEC_76 & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      01647         BRANCH_TO       CH1SC0_DECR_PREV_NOTCH
                          M         
                          M         if      (CH1SC0_DECR_PREV_NOTCH-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_DECR_PREV_NOTCH range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0004DE CEC4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_DECR_PREV_NOTCH-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      01648         
0004E0                01649 CH1SC0_DEC6
                      01650         PLAY HNDL_SC0_DEC_65,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
0004E0 1D40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_DEC_65 & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      01651         BRANCH_TO       CH1SC0_DECR_PREV_NOTCH  
                          M         
                          M         if      (CH1SC0_DECR_PREV_NOTCH-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_DECR_PREV_NOTCH range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0004E2 CEC4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_DECR_PREV_NOTCH-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      01652         
0004E4                01653 CH1SC0_DEC5 
                      01654         PLAY HNDL_SC0_DEC_54,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 56
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004E4 1E40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_DEC_54 & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      01655         BRANCH_TO       CH1SC0_DECR_PREV_NOTCH  
                          M         
                          M         if      (CH1SC0_DECR_PREV_NOTCH-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_DECR_PREV_NOTCH range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0004E6 CEC4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_DECR_PREV_NOTCH-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      01656         
0004E8                01657 CH1SC0_DEC4
                      01658         PLAY HNDL_SC0_DEC_43,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
0004E8 1F40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_DEC_43 & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      01659         BRANCH_TO       CH1SC0_DECR_PREV_NOTCH  
                          M         
                          M         if      (CH1SC0_DECR_PREV_NOTCH-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_DECR_PREV_NOTCH range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0004EA CEC4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_DECR_PREV_NOTCH-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      01660         
0004EC                01661 CH1SC0_DEC3
                      01662         PLAY HNDL_SC0_DEC_32,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
0004EC 2040               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_DEC_32 & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      01663         BRANCH_TO       CH1SC0_DECR_PREV_NOTCH
                          M         
                          M         if      (CH1SC0_DECR_PREV_NOTCH-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_DECR_PREV_NOTCH range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0004EE CEC4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_DECR_PREV_NOTCH-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      01664         
0004F0                01665 CH1SC0_DEC2 
                      01666 
                      01667         PLAY HNDL_SC0_DEC_21,no_loop,loop_STD   
                          M         list ;2 byte PLAY  [HANDLE]
0004F0 2140               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_DEC_21 & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      01668         BRANCH_TO       CH1SC0_DECR_PREV_NOTCH  
                          M         
                          M         if      (CH1SC0_DECR_PREV_NOTCH-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_DECR_PREV_NOTCH range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0004F2 CEC4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_DECR_PREV_NOTCH-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      01669         
0004F4                01670 CH1SC0_DEC1 
                      01671         PLAY HNDL_SC0_DEC_1H,no_loop,loop_STD   
                          M         list ;2 byte PLAY  [HANDLE]
0004F4 2240               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_DEC_1H & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      01672         BRANCH_TO       CH1SC0_DECR_PREV_NOTCH  
                          M         
                          M         if      (CH1SC0_DECR_PREV_NOTCH-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_DECR_PREV_NOTCH range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0004F6 CEC4               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_DECR_PREV_NOTCH-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      01673 
                      01674         
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 57
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004F8                01675 CH1SC0_DEC_EXIT
                      01676         BRANCH_TO       CH1SC0_NEXT_RUN_SOUNDS
                          M         
                          M         if      (CH1SC0_NEXT_RUN_SOUNDS-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_NEXT_RUN_SOUNDS range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0004F8 60C5               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_NEXT_RUN_SOUNDS-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      01677 
                      01678 ;============================================================================================   
                      01679 ; ALL AFTER NOTCH CHANGE COMES THRU HERE:
                      01680 ;=====================================
0004FA                01681 CH1SC0_SETRUN   
                      01682 ;
                      01683 ;UC1.7================  BEGIN_RUNNING_SOUNDS
                      01684         ;----------------------------------------------
                      01685         ; no change in notch or speed:
                      01686         ;----------------------------------------------
0004FA                01687 CH1SC0_SETRUN_START
                      01688 ; Will catch any missed change and play proper notch sound:
                      01689 ;======================================================================
0004FA                01690 CH1SC0_RUN_TESTN
                      01691         MASK_COMPARE    PREV_NOTCH,IMMED_DATA,NOTCH1,COMP_ALL,SKIP_SAME    ;Skip if Equal
0004FA 1BFC 0000          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,PREV_NOTCH,NOTCH1,COMP_ALL
                      01692                 BRANCH_TO       CH1SC0_RUN_TESTN2
                          M         
                          M         if      (CH1SC0_RUN_TESTN2-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH1SC0_RUN_TESTN2 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0004FE 02C5               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RUN_TESTN2-SKEME_BASE)) & 0x0F) , low (CH1SC0_RUN_
                          M         endif
                          M                 
                      01693         BRANCH_TO       CH1SC0_RUN1        
                          M         
                          M         if      (CH1SC0_RUN1-SKEME_BASE) > 0xFFF                    ;check branch size in SCHEME
                          M                 error   CH1SC0_RUN1 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000500 42C5               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RUN1-SKEME_BASE)) & 0x0F) , low (CH1SC0_RUN1-SKEME
                          M         endif
                          M                 
                      01694         
000502                01695 CH1SC0_RUN_TESTN2       
                      01696         MASK_COMPARE    PREV_NOTCH,IMMED_DATA,NOTCH2,COMP_ALL,SKIP_SAME    ;Skip if Equal
000502 1BFC 0010          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,PREV_NOTCH,NOTCH2,COMP_ALL
                      01697                 BRANCH_TO       CH1SC0_RUN_TESTN3
                          M         
                          M         if      (CH1SC0_RUN_TESTN3-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH1SC0_RUN_TESTN3 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000506 0AC5               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RUN_TESTN3-SKEME_BASE)) & 0x0F) , low (CH1SC0_RUN_
                          M         endif
                          M                 
                      01698         BRANCH_TO       CH1SC0_RUN2
                          M         
                          M         if      (CH1SC0_RUN2-SKEME_BASE) > 0xFFF                    ;check branch size in SCHEME
                          M                 error   CH1SC0_RUN2 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000508 46C5               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RUN2-SKEME_BASE)) & 0x0F) , low (CH1SC0_RUN2-SKEME
                          M         endif
                          M                 
                      01699         
00050A                01700 CH1SC0_RUN_TESTN3       
                      01701         MASK_COMPARE    PREV_NOTCH,IMMED_DATA,NOTCH3,COMP_ALL,SKIP_SAME    ;Skip if Equal
00050A 1BFC 0020          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,PREV_NOTCH,NOTCH3,COMP_ALL
                      01702                 BRANCH_TO       CH1SC0_RUN_TESTN4
                          M         
                          M         if      (CH1SC0_RUN_TESTN4-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH1SC0_RUN_TESTN4 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 58
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         else
00050E 12C5               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RUN_TESTN4-SKEME_BASE)) & 0x0F) , low (CH1SC0_RUN_
                          M         endif
                          M                 
                      01703         BRANCH_TO       CH1SC0_RUN3
                          M         
                          M         if      (CH1SC0_RUN3-SKEME_BASE) > 0xFFF                    ;check branch size in SCHEME
                          M                 error   CH1SC0_RUN3 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000510 4AC5               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RUN3-SKEME_BASE)) & 0x0F) , low (CH1SC0_RUN3-SKEME
                          M         endif
                          M                 
                      01704         
000512                01705 CH1SC0_RUN_TESTN4       
                      01706         MASK_COMPARE    PREV_NOTCH,IMMED_DATA,NOTCH4,COMP_ALL,SKIP_SAME    ;Skip if Equal
000512 1BFC 0030          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,PREV_NOTCH,NOTCH4,COMP_ALL
                      01707                 BRANCH_TO       CH1SC0_RUN_TESTN5
                          M         
                          M         if      (CH1SC0_RUN_TESTN5-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH1SC0_RUN_TESTN5 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000516 1AC5               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RUN_TESTN5-SKEME_BASE)) & 0x0F) , low (CH1SC0_RUN_
                          M         endif
                          M                 
                      01708         BRANCH_TO       CH1SC0_RUN4
                          M         
                          M         if      (CH1SC0_RUN4-SKEME_BASE) > 0xFFF                    ;check branch size in SCHEME
                          M                 error   CH1SC0_RUN4 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000518 4EC5               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RUN4-SKEME_BASE)) & 0x0F) , low (CH1SC0_RUN4-SKEME
                          M         endif
                          M                 
                      01709         
00051A                01710 CH1SC0_RUN_TESTN5       
                      01711         MASK_COMPARE    PREV_NOTCH,IMMED_DATA,NOTCH5,COMP_ALL,SKIP_SAME    ;Skip if Equal
00051A 1BFC 0040          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,PREV_NOTCH,NOTCH5,COMP_ALL
                      01712                 BRANCH_TO       CH1SC0_RUN_TESTN6
                          M         
                          M         if      (CH1SC0_RUN_TESTN6-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH1SC0_RUN_TESTN6 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00051E 22C5               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RUN_TESTN6-SKEME_BASE)) & 0x0F) , low (CH1SC0_RUN_
                          M         endif
                          M                 
                      01713         BRANCH_TO       CH1SC0_RUN5
                          M         
                          M         if      (CH1SC0_RUN5-SKEME_BASE) > 0xFFF                    ;check branch size in SCHEME
                          M                 error   CH1SC0_RUN5 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000520 52C5               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RUN5-SKEME_BASE)) & 0x0F) , low (CH1SC0_RUN5-SKEME
                          M         endif
                          M                 
                      01714                 
000522                01715 CH1SC0_RUN_TESTN6       
                      01716         MASK_COMPARE    PREV_NOTCH,IMMED_DATA,NOTCH6,COMP_ALL,SKIP_SAME    ;Skip if Equal
000522 1BFC 0050          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,PREV_NOTCH,NOTCH6,COMP_ALL
                      01717                 BRANCH_TO       CH1SC0_RUN_TESTN7
                          M         
                          M         if      (CH1SC0_RUN_TESTN7-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH1SC0_RUN_TESTN7 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000526 2AC5               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RUN_TESTN7-SKEME_BASE)) & 0x0F) , low (CH1SC0_RUN_
                          M         endif
                          M                 
                      01718         BRANCH_TO       CH1SC0_RUN6
                          M         
                          M         if      (CH1SC0_RUN6-SKEME_BASE) > 0xFFF                    ;check branch size in SCHEME
                          M                 error   CH1SC0_RUN6 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 59
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000528 56C5               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RUN6-SKEME_BASE)) & 0x0F) , low (CH1SC0_RUN6-SKEME
                          M         endif
                          M                 
                      01719         
00052A                01720 CH1SC0_RUN_TESTN7       
                      01721         MASK_COMPARE    PREV_NOTCH,IMMED_DATA,NOTCH7,COMP_ALL,SKIP_SAME    ;Skip if Equal
00052A 1BFC 0060          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,PREV_NOTCH,NOTCH7,COMP_ALL
                      01722                 BRANCH_TO       CH1SC0_RUN_TESTN8
                          M         
                          M         if      (CH1SC0_RUN_TESTN8-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH1SC0_RUN_TESTN8 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00052E 32C5               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RUN_TESTN8-SKEME_BASE)) & 0x0F) , low (CH1SC0_RUN_
                          M         endif
                          M                 
                      01723         BRANCH_TO       CH1SC0_RUN7
                          M         
                          M         if      (CH1SC0_RUN7-SKEME_BASE) > 0xFFF                    ;check branch size in SCHEME
                          M                 error   CH1SC0_RUN7 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000530 5AC5               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RUN7-SKEME_BASE)) & 0x0F) , low (CH1SC0_RUN7-SKEME
                          M         endif
                          M                 
                      01724         
000532                01725 CH1SC0_RUN_TESTN8
                      01726         MASK_COMPARE    PREV_NOTCH,IMMED_DATA,NOTCH8,COMP_ALL,SKIP_SAME    ;Skip if Equal
000532 1BFC 0070          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,PREV_NOTCH,NOTCH8,COMP_ALL
                      01727                 BRANCH_TO       CH1SC0_RUN_TESTN8
                          M         
                          M         if      (CH1SC0_RUN_TESTN8-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH1SC0_RUN_TESTN8 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000536 32C5               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RUN_TESTN8-SKEME_BASE)) & 0x0F) , low (CH1SC0_RUN_
                          M         endif
                          M                 
                      01728         ;BRANCH_TO      CH1SC0_RUN8
                      01729         
                      01730         ;       CATCH ODD CHANGE IN NOTCH DOWN:
                      01731         ;In case pitch and blend get over boosted -- set both blend and pitch here
                      01732         LOAD_MODIFIER   MTYPE_BLEND,BLEND_CURRENT_CHNL+BLEND_GAIN0+BLEND_FASE0,0,0      ;blend immed
000538 00E3 0000          M                 DB      CMD_LOAD_MODIFY+(MTYPE_BLEND&0x0F),BLEND_CURRENT_CHNL+BLEND_GAIN0+BLEND_FASE0,0,
                      01733         LOAD_MODIFIER   MTYPE_PITCH,ANALOG_PITCH_MODIFY+0x0,IMAXP_DIESEL,DITHERP_DIESEL ;for discrete no
00053C A0E2 005E          M                 DB      CMD_LOAD_MODIFY+(MTYPE_PITCH&0x0F),ANALOG_PITCH_MODIFY+0x0,IMAXP_DIESEL,DITHERP_
                      01734         BRANCH_TO       CH1SC0_RUN8     ;= NOTCH8
                          M         
                          M         if      (CH1SC0_RUN8-SKEME_BASE) > 0xFFF                    ;check branch size in SCHEME
                          M                 error   CH1SC0_RUN8 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000540 5EC5               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RUN8-SKEME_BASE)) & 0x0F) , low (CH1SC0_RUN8-SKEME
                          M         endif
                          M                 
                      01735 
000542                01736 CH1SC0_RUN1
                      01737         PLAY  HNDL_SC0_RUN_1,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
000542 1340               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_RUN_1 & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      01738         BRANCH_TO       CH1SC0_NEXT_RUN_SOUNDS
                          M         
                          M         if      (CH1SC0_NEXT_RUN_SOUNDS-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_NEXT_RUN_SOUNDS range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000544 60C5               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_NEXT_RUN_SOUNDS-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      01739         
000546                01740 CH1SC0_RUN2
                      01741         PLAY  HNDL_SC0_RUN_2,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 60
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000546 1440               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_RUN_2 & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      01742         BRANCH_TO       CH1SC0_NEXT_RUN_SOUNDS
                          M         
                          M         if      (CH1SC0_NEXT_RUN_SOUNDS-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_NEXT_RUN_SOUNDS range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000548 60C5               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_NEXT_RUN_SOUNDS-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      01743         
00054A                01744 CH1SC0_RUN3
                      01745         PLAY HNDL_SC0_RUN_3,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
00054A 1540               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_RUN_3 & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      01746         BRANCH_TO       CH1SC0_NEXT_RUN_SOUNDS
                          M         
                          M         if      (CH1SC0_NEXT_RUN_SOUNDS-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_NEXT_RUN_SOUNDS range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00054C 60C5               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_NEXT_RUN_SOUNDS-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      01747         
00054E                01748 CH1SC0_RUN4
                      01749         PLAY HNDL_SC0_RUN_4,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
00054E 1640               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_RUN_4 & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      01750         BRANCH_TO       CH1SC0_NEXT_RUN_SOUNDS
                          M         
                          M         if      (CH1SC0_NEXT_RUN_SOUNDS-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_NEXT_RUN_SOUNDS range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000550 60C5               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_NEXT_RUN_SOUNDS-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      01751         
000552                01752 CH1SC0_RUN5
                      01753         PLAY HNDL_SC0_RUN_5,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
000552 1740               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_RUN_5 & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      01754         BRANCH_TO       CH1SC0_NEXT_RUN_SOUNDS
                          M         
                          M         if      (CH1SC0_NEXT_RUN_SOUNDS-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_NEXT_RUN_SOUNDS range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000554 60C5               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_NEXT_RUN_SOUNDS-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      01755         
000556                01756 CH1SC0_RUN6 
                      01757         PLAY HNDL_SC0_RUN_6,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
000556 1840               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_RUN_6 & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      01758         BRANCH_TO       CH1SC0_NEXT_RUN_SOUNDS
                          M         
                          M         if      (CH1SC0_NEXT_RUN_SOUNDS-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_NEXT_RUN_SOUNDS range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000558 60C5               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_NEXT_RUN_SOUNDS-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      01759         
00055A                01760 CH1SC0_RUN7 
                      01761         PLAY HNDL_SC0_RUN_7,no_loop,loop_STD
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 61
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         list ;2 byte PLAY  [HANDLE]
00055A 1940               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_RUN_7 & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      01762         BRANCH_TO       CH1SC0_NEXT_RUN_SOUNDS
                          M         
                          M         if      (CH1SC0_NEXT_RUN_SOUNDS-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH1SC0_NEXT_RUN_SOUNDS range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00055C 60C5               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_NEXT_RUN_SOUNDS-SKEME_BASE)) & 0x0F) , low (CH1SC0
                          M         endif
                          M                 
                      01763         
00055E                01764 CH1SC0_RUN8
                      01765         PLAY HNDL_SC0_RUN_8,no_loop,loop_STD                                                            
                          M         list ;2 byte PLAY  [HANDLE]
00055E 1A40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_RUN_8 & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      01766         ;BRANCH_TO      CH1SC0_NEXT_RUN_SOUNDS          
                      01767         
                      01768 ;=======================================        
000560                01769 CH1SC0_NEXT_RUN_SOUNDS  
                      01770         ; all must exit here
                      01771         END_SOUND       
000560 0000               M                 DB      CMD_END_SND,0
                      01772         
                      01773         ; ---------------------------------------------------------
                      01774         ;     END CONTINUOUS SOUNDS
                      01775         ; ---------------------------------------------------------     
                      01776 
                      01777         
                      01778         
                      01779 ;----------------------------------------------------
                      01780 ;  Decrease to idle             removed 10/2013 used only in NV projects not in DN projects
                      01781 ;----------------------------------------------------
                      01782 ;----------------------------------------------------
                      01783 ;IDLE/not moving Phase
                      01784         ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                      01785         ;       THIS ROUTINE IS CH12_ primary PERSISTENT (NOT INTERRUPTABLE)
                      01786         ;       this is MODIFIED by DISCRETE notch change logic to vary AMPL with NOTCH setting, RPMs al
                      01787         ;----------------------------------------------------
                      01788         INITIATE_SOUND  TRIG_SND_ACTV11,RUN_WHILE_TRIG  ;               T_SPD_IDLE,RUN_WHILE_TRIG
000562 0F92               M                 DB      CMD_INITIATE_SND + ((RUN_WHILE_TRIG) & 0x07), TRIG_SND_ACTV11 +((RUN_WHILE_TRIG)
  0000000C                M ICNT += 1
                          M 
                      01789         ; Blend Parms for drifting?
                      01790         LOAD_MODIFIER  MTYPE_BLEND, BLEND_CURRENT_CHNL+BLEND_GAIN0+BLEND_FASE0, BLENDG_DSL_DECEL0, BLEND
000564 00E3 0709          M                 DB      CMD_LOAD_MODIFY+(MTYPE_BLEND&0x0F),BLEND_CURRENT_CHNL+BLEND_GAIN0+BLEND_FASE0,BL
                      01791         ;original base code sets both blend and pitch here
                      01792         LOAD_MODIFIER   MTYPE_PITCH,ANALOG_PITCH_MODIFY+WORK_NOTCH,IMAXP_DIESEL,DITHERP_DIESEL
000568 A1E2 005E          M                 DB      CMD_LOAD_MODIFY+(MTYPE_PITCH&0x0F),ANALOG_PITCH_MODIFY+WORK_NOTCH,IMAXP_DIESEL,D
                      01793         MASK_COMPARE    VARY_LOAD,IMMED_DATA,SCALE_MID,COMP_ALL,SKIP_GRTR               ;prevent underfl
00056C 1CFF 000C          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,VARY_LOAD,SCALE_MID,COMP_ALL
                      01794                 LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+VARY_LOAD,-SCALE_INCR_1,SCALE_MID    ;dec
000570 BCE6 0CFF          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+VARY_LOAD,-SCALE_INCR_1,
                      01795 
                      01796         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_MIN 
000574 80E1 088B          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_MIN
                      01797         
000578                01798 CH12SC0_RUN_IDLE        
                      01799         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+AIR_PRESS,-0x01,0   ;decrease
000578 BDE6 00FF          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+AIR_PRESS,-0x01,0
                      01800 
                      01801         ;;;;;;;;;;;;;;;;;;;;;; DRIVE HOLD WHEN DELTA >0..........5/30/19
                      01802         MASK_COMPARE    WORK_SPEED_DELTA,IMMED_DATA,MIN_NOTCH_VAL,COMP_ALL,SKIP_SAME            ;test fo
00057C 0BFC 0000          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,WORK_SPEED_DELTA,MIN_NOTCH_VAL,COMP_ALL
                      01803                 BRANCH_TO       CH1SC0_CONTINUOUS_NOTCH         ;play run notch >0
                          M         
                          M         if      (CH1SC0_CONTINUOUS_NOTCH-SKEME_BASE) > 0xFFF        ;check branch size in SCHEME
                          M                 error   CH1SC0_CONTINUOUS_NOTCH range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 62
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         else
000580 48C3               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_CONTINUOUS_NOTCH-SKEME_BASE)) & 0x0F) , low (CH1SC
                          M         endif
                          M                 
                      01804 
                      01805         MASK_COMPARE    SCV_FEATURE2_DISABLE,IMMED_DATA,0x01,COMP_bit0,SKIP_SAME                ;SKIP_LE
000582 B9FC FE01          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_FEATURE2_DISABLE,0x01,COMP_bit0
                      01806                 BRANCH_TO       CH12SC0_RUN3_LOWIDLE
                          M         
                          M         if      (CH12SC0_RUN3_LOWIDLE-SKEME_BASE) > 0xFFF           ;check branch size in SCHEME
                          M                 error   CH12SC0_RUN3_LOWIDLE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000586 8CC5               M                 DB      CMD_GOTO_SND + ((high (CH12SC0_RUN3_LOWIDLE-SKEME_BASE)) & 0x0F) , low (CH12SC0_
                          M         endif
                          M                 
                      01807 
000588                01808 CH12SC0_RUN2_IDLE
                      01809         ;============== low idle is bit0 value 0
                      01810         ;                               regular idle is bit0 value 1
                      01811         ;                               unless ALCO stumble which is bit5
                      01812         ;==============
                      01813         PLAY    HNDL_SC0_RUN_1,loop_till_init_TRIG,loop_INVERT
                          M         list ;2 byte PLAY  [HANDLE]
000588 D349               M         DB      CMD_PLAY_SND+((loop_till_init_TRIG>>2)&0x07)+loop_INVERT, (HNDL_SC0_RUN_1 & 0x3F)+((loop
                          M         list
                      01814 
                      01815         BRANCH_TO       CH12SC0_SKIP_STOPR2
                          M         
                          M         if      (CH12SC0_SKIP_STOPR2-SKEME_BASE) > 0xFFF            ;check branch size in SCHEME
                          M                 error   CH12SC0_SKIP_STOPR2 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00058A D8C5               M                 DB      CMD_GOTO_SND + ((high (CH12SC0_SKIP_STOPR2-SKEME_BASE)) & 0x0F) , low (CH12SC0_S
                          M         endif
                          M                 
                      01816 ;---
00058C                01817 CH12SC0_RUN3_LOWIDLE    ;low idle here:
                      01818         MASK_COMPARE    SCV_FEATURE2_DISABLE,IMMED_DATA,0x01,COMP_bit5,SKIP_SAME                ;SKIP_LE
00058C B9FC DF01          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_FEATURE2_DISABLE,0x01,COMP_bit5
                      01819                 BRANCH_TO       CH12SC0_ALCO_STUMBLE
                          M         
                          M         if      (CH12SC0_ALCO_STUMBLE-SKEME_BASE) > 0xFFF           ;check branch size in SCHEME
                          M                 error   CH12SC0_ALCO_STUMBLE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000590 A6C5               M                 DB      CMD_GOTO_SND + ((high (CH12SC0_ALCO_STUMBLE-SKEME_BASE)) & 0x0F) , low (CH12SC0_
                          M         endif
                          M                 
                      01820         ;;;;;LONG LOOP HERE TO IDLE:
                      01821 
                      01822         ;when locomotive has moved then play normal idle:
                      01823         MASK_COMPARE    WORK_PEAK_SPD,IMMED_DATA,7,COMP_ALL,SKIP_LESS 
000592 19FE 0007          M                 DB      CMD_MASK_COMPARE+SKIP_LESS+IMMED_DATA,WORK_PEAK_SPD,7,COMP_ALL
                      01824                 BRANCH_TO       CH12SC0_RUN2_IDLE
                          M         
                          M         if      (CH12SC0_RUN2_IDLE-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH12SC0_RUN2_IDLE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000596 88C5               M                 DB      CMD_GOTO_SND + ((high (CH12SC0_RUN2_IDLE-SKEME_BASE)) & 0x0F) , low (CH12SC0_RUN
                          M         endif
                          M                 
                      01825                 
                      01826         ;WHEN LOW IDLE DISABLED PLAY RUN 1: AT CH12SC0_RUN2_IDLE
                      01827 
                      01828         ;ELSE PLAY RUN 0
                      01829         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+AIR_PRESS,-0x01,0   ;decrease
000598 BDE6 00FF          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+AIR_PRESS,-0x01,0
                      01830         ;PLAY HNDL_SC0_DEBUG1,no_loop,loop_STD  
                      01831 
                      01832         PLAY HNDL_SC0_DEC_H0,no_loop,loop_STD   ; 
                          M         list ;2 byte PLAY  [HANDLE]
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 63
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00059C 2340               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_DEC_H0 & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      01833         LOAD_MODIFIER MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_MIN
00059E 80E1 088B          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_MIN
                      01834         PLAY    HNDL_SC0_RUN_LOW_IDLE,loop_till_init_TRIG,loop_INVERT
                          M         list ;2 byte PLAY  [HANDLE]
0005A2 D149               M         DB      CMD_PLAY_SND+((loop_till_init_TRIG>>2)&0x07)+loop_INVERT, (HNDL_SC0_RUN_LOW_IDLE & 0x3F)
                          M         list
                      01835         ;cannot play here due to interrupted event: 8/1/19
                      01836 
                      01837         ;THIS CODE IS INTERRUPTED (see above)
                      01838         BRANCH_TO       CH12SC0_SKIP_STOPR2
                          M         
                          M         if      (CH12SC0_SKIP_STOPR2-SKEME_BASE) > 0xFFF            ;check branch size in SCHEME
                          M                 error   CH12SC0_SKIP_STOPR2 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0005A4 D8C5               M                 DB      CMD_GOTO_SND + ((high (CH12SC0_SKIP_STOPR2-SKEME_BASE)) & 0x0F) , low (CH12SC0_S
                          M         endif
                          M                 
                      01839         
0005A6                01840 CH12SC0_ALCO_STUMBLE
                      01841         LOAD_MODIFIER MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_MID
0005A6 80E1 0C8B          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_MID
                      01842         PLAY    HNDL_SC0_RUN_1,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
0005AA 1340               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_RUN_1 & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      01843         PLAY    HNDL_SC0_DEC_1H,no_loop,loop_STD        ;ALCO_IDL_RUN2b
                          M         list ;2 byte PLAY  [HANDLE]
0005AC 2240               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_DEC_1H & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      01844         PLAY    HNDL_SC0_STARTUP_4TH,no_loop,loop_STD   ;ALCO_RUN_IDL2b
                          M         list ;2 byte PLAY  [HANDLE]
0005AE 0740               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_STARTUP_4TH & 0x3F)+((no_loop<<6)&
                          M         list
                      01845         PLAY    HNDL_SC0_INC_0H,no_loop,loop_STD        ;ALCO_RUN_IDL1a
                          M         list ;2 byte PLAY  [HANDLE]
0005B0 0840               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_INC_0H & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      01846         PLAY    HNDL_SC0_RUN_1,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
0005B2 1340               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_RUN_1 & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      01847         LOAD_MODIFIER MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_C
0005B4 80E1 0C8B          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_C
                      01848         PLAY    HNDL_SC0_DEC_1H,no_loop,loop_STD        ;ALCO_IDL_RUN2b
                          M         list ;2 byte PLAY  [HANDLE]
0005B8 2240               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_DEC_1H & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      01849         LOAD_MODIFIER MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_A
0005BA 80E1 0A8B          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_A
                      01850         PLAY    HNDL_SC0_RUN_1,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
0005BE 1340               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_RUN_1 & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      01851         PLAY    HNDL_SC0_DEC_1H,no_loop,loop_STD        ;ALCO_IDL_RUN2b
                          M         list ;2 byte PLAY  [HANDLE]
0005C0 2240               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_DEC_1H & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      01852         LOAD_MODIFIER MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_B
0005C2 80E1 0B8B          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_B
                      01853         PLAY    HNDL_SC0_DEC_H0,no_loop,loop_STD        ;ALCO_IDL_RUN2b 
                          M         list ;2 byte PLAY  [HANDLE]
0005C6 2340               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_DEC_H0 & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      01854         LOAD_MODIFIER MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_C
0005C8 80E1 0C8B          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_C
                      01855         PLAY    HNDL_SC0_INC_0H,no_loop,loop_STD        ;ALCO_RUN_IDL1a
                          M         list ;2 byte PLAY  [HANDLE]
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 64
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005CC 0840               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_INC_0H & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      01856         PLAY    HNDL_SC0_RUN_1,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
0005CE 1340               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_RUN_1 & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      01857         LOAD_MODIFIER MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_D
0005D0 80E1 0D8B          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_PRIME_VOLUME,SCALE_D
                      01858         PLAY    HNDL_SC0_DEC_1H,no_loop,loop_STD        ;ALCO_IDL_RUN2b
                          M         list ;2 byte PLAY  [HANDLE]
0005D4 2240               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_DEC_1H & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      01859         PLAY    HNDL_SC0_RUN_HIGH_IDLE,no_loop,loop_INVERT
                          M         list ;2 byte PLAY  [HANDLE]
0005D6 1248               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_INVERT, (HNDL_SC0_RUN_HIGH_IDLE & 0x3F)+((no_loop<
                          M         list
                      01860         
0005D8                01861 CH12SC0_SKIP_STOPR2
                      01862         END_SOUND
0005D8 0000               M                 DB      CMD_END_SND,0
                      01863         
                      01864         ;END CH1_ ===============================================================
                      01865 
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 65
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01866         PAGE
                      01867         
                      01868         ;//////////////////// TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT
                      01869 
                      01870 ;------------------------------------------------
                      01871 ;Start Channel 2                whistle/horn
                      01872 ;------------------------------------------------
0005DA                01873 CH12SC0_BEGIN
                      01874         CHANNEL_START   2       ;typically TRANSIENT channel for QUEUED non-persistent sounds
0005DA 0281               M                 DB      CMD_START_CHNL,2
                          M ;CTEMP += 1
                      01875 ;----------------------------------------------------
                      01876 ;---------RUN ONCE!  always LOAD SCATTER tasks when locomotive becomes ACTIVE! (hi priority-no sound)
                      01877 ;       NOTE: SCATTER EVENTS MUST BE INTERLOCKED IN HANDLERS TO PREVENT PLAY AFTER DISABLE.
                      01878 ;----------------------------------------------------
                      01879         INITIATE_SOUND  TRIG_SND_ACTV11,NORMAL          ;run ONCE only
0005DC 0F90               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), TRIG_SND_ACTV11 +((NORMAL) & 0x80)
  0000000D                M ICNT += 1
                          M 
                      01880 ;------------------------------------------------
                      01881  ;added 8/13/06 to holdoff until START is complete
                      01882 ;----------------------------------------------------
0005DE                01883 CH12SC0_INTERLOCK_HOLD
                      01884         MASK_COMPARE    WORK_STATUS_BITS,IMMED_DATA,WKSB_INTERLOCK_MASK,~WKSB_INTERLOCK_MASK,SKIP_SAME ;
0005DE 07FC DF20          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,WORK_STATUS_BITS,WKSB_INTERLOCK_MASK,~WKSB
                      01885                 BRANCH_TO       CH12SC0_INTERLOCK_HOLD  ;interlock is 00, freeze                
                          M         
                          M         if      (CH12SC0_INTERLOCK_HOLD-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH12SC0_INTERLOCK_HOLD range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0005E2 DEC5               M                 DB      CMD_GOTO_SND + ((high (CH12SC0_INTERLOCK_HOLD-SKEME_BASE)) & 0x0F) , low (CH12SC
                          M         endif
                          M                 
                      01886 
                      01887         ;---------------------------------------------
                      01888         ;  Setup random sounds -- scatter               
                      01889         ;---------------------------------------------                  ;keep scatter channels straight:
                      01890         ;TRIG_SCAT0     
                      01891         LOAD_MODIFIER   MTYPE_SCATTER,SCAT_CMD_PERIOD+SCAT_CHNL0,DRYER_RATE,SINTEN_LOW+WORK_SPEED       
0005E4 20E4 402F          M                 DB      CMD_LOAD_MODIFY+(MTYPE_SCATTER&0x0F),SCAT_CMD_PERIOD+SCAT_CHNL0,DRYER_RATE,SINTE
                      01892         ;TRIG_SCAT2     FAN1
                      01893         LOAD_MODIFIER   MTYPE_SCATTER,SCAT_CMD_PERIOD+SCAT_CHNL2,0x61,SINTEN_MID+WORK_SPEED             
0005E8 22E4 6061          M                 DB      CMD_LOAD_MODIFY+(MTYPE_SCATTER&0x0F),SCAT_CMD_PERIOD+SCAT_CHNL2,0x61,SINTEN_MID+
                      01894         ;TRIG_SCAT3     FAN2
                      01895         LOAD_MODIFIER   MTYPE_SCATTER,SCAT_CMD_PERIOD+SCAT_CHNL3,0x51,SINTEN_HIGH+WORK_SPEED    ;FAN1  $
0005EC 23E4 C051          M                 DB      CMD_LOAD_MODIFY+(MTYPE_SCATTER&0x0F),SCAT_CMD_PERIOD+SCAT_CHNL3,0x51,SINTEN_HIGH
                      01896 
                      01897         ;TRIG_SCAT1     COMPRESSOR
                      01898         LOAD_MODIFIER   MTYPE_SCATTER,SCAT_CMD_PERIOD+SCAT_CHNL1,AIRPUMP_START_RATE,SINTEN_LOW+WORK_SPEE
0005F0 21E4 401E          M                 DB      CMD_LOAD_MODIFY+(MTYPE_SCATTER&0x0F),SCAT_CMD_PERIOD+SCAT_CHNL1,AIRPUMP_START_RA
                      01899         ;TRIG_SCAT4     DRYER
                      01900         LOAD_MODIFIER   MTYPE_SCATTER,SCAT_CMD_SAWTOOTH+SCAT_CHNL4,0x02,SINTEN_OFF      ;diesel Scatter 
0005F4 34E4 0002          M                 DB      CMD_LOAD_MODIFY+(MTYPE_SCATTER&0x0F),SCAT_CMD_SAWTOOTH+SCAT_CHNL4,0x02,SINTEN_OF
                      01901 
                      01902         ;  load other timers here:
                      01903         ;TRIG_SCAT5     TRIM NOTCH AND IDLE
                      01904         LOAD_MODIFIER   MTYPE_SCATTER,SCAT_CMD_PERIOD+SCAT_CHNL5,0x72,SINTEN_MID+WORK_SPEED     ;BY CV19
0005F8 25E4 6072          M                 DB      CMD_LOAD_MODIFY+(MTYPE_SCATTER&0x0F),SCAT_CMD_PERIOD+SCAT_CHNL5,0x72,SINTEN_MID+
                      01905         
                      01906         END_SOUND       
0005FC 0000               M                 DB      CMD_END_SND,0
                      01907         
                      01908         ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                      01909         ;       THIS ROUTINE IS CH2_ high priority/whistle/horn PERSISTENT (NOT INTERRUPTABLE)
                      01910         ; SF2  horn/ PLAYABLE HORN selection
                      01911         ;----------------------------------------------------
                      01912 ;UC2.1================
0005FE                01913 CH2SC0_F2_HORN_STARTER
                      01914         INITIATE_SOUND  TRIG_HORNS_ON,NORMAL    ;+NO_PREEMPT_TRIG               ;BE sure not INTERRUPTED
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 66
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005FE 0990               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), TRIG_HORNS_ON +((NORMAL) & 0x80)
  0000000E                M ICNT += 1
                          M 
                      01915         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+AIR_PRESS,-0x16,0   ;decrease
000600 BDE6 00EA          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+AIR_PRESS,-0x16,0
                      01916 ;-----NEW 8/15/07
                      01917 ;we delay here by SCV156=20 to allow a SHORT blow with SF2 actuation,
                      01918 ; without sustain BURST COMMON to ALL horn types
                      01919 ;if KEY press graeter than CV156 delay then will be
                      01920 ; normal user controllable LONG blow
                      01921 ;if KEY press graeter than CV156 delay then will be normal user controllable LONG blow
                      01922 
000604                01923 CH2SC0_F2_HORN_DELAY    
                      01924         DELAY_SOUND             DELAY_CV,SCV_HORNWHISTLE_DELAY,DELAY_GLOBAL
000604 9BB5               M                 DB      CMD_DELAY_SND + (DELAY_GLOBAL & 0x01), (SCV_HORNWHISTLE_DELAY & 0x7F)+DELAY_CV 
                      01925            
                      01926 ;       ===========DO NOT SET GAIN PRIOR TO DELAY ==== LOSS OF GAIN ISSUE 3/30/17
                      01927 ;============================
                      01928 ;-----COMMON horn select and play section
                      01929         ;HORN SELECTED CV150:
                      01930                         ;                       Decimal HEX                     Bit
                      01931                         ;                                                               7654 3210
                      01932                         ;       1               0               0x00            0000 0000
                      01933                         ;       2               1               0x01            0000 0001
                      01934                         ;       3               2               0x02            0000 0010
                      01935                         ;       4               3               0x03            0000 0011
                      01936                         ;       5               4               0x04            0000 0100
                      01937                         ;       6               5               0x05            0000 0101
                      01938                         ;       7               6               0x06            0000 0110
                      01939                         ;       8               7               0x07            0000 0111
                      01940                         ;       9               8               0x08            0000 1000
                      01941                         ;       10              9               0x09            0000 1001
                      01942                         ;       11              10              0x10            0000 1010
                      01943                         ;       12              11              0x11            0000 1011
                      01944                         ;       PLAYABLE:
                      01945                         ;       1               128             0x80            1000 0000
                      01946                         ;       2               129             0x81            1000 0001
                      01947                         ;       3               130             0x82            1000 0010
                      01948                         ;       4               131             0x83            1000 0011
                      01949                         ;       5               132             0x84            1000 0100
                      01950                         ;       6               133             0x85            1000 0101
                      01951                         ;       7               134             0x86            1000 0110
                      01952                         ;       8               135             0x87            1000 0111
                      01953                         ;       9               136             0x88            1000 1000
                      01954                         ;       10              137             0x89            1000 1001
                      01955                         ;                       Decimal HEX             Bit 7654 3210
                      01956 ;============================
                      01957 ;-----COMMON horn select and play section
                      01958 ;----------------------------------------------------
000606                01959 CH2SC0_F2_HORN_SELECT   
                      01960 ;HORN choices 0-1
                      01961 ;-----
                      01962 ;CV150= xxxx-x00X
000606                01963 CH2SC0_F2_HORN_00X
                      01964         MASK_COMPARE    SCV_HORNWHISTLE_SELECT,IMMED_DATA,0x00,COMP_bit0,SKIP_SAME              ;SKIP_LE
000606 95FC FE00          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_HORNWHISTLE_SELECT,0x00,COMP_bit0
                      01965                 BRANCH_TO               CH2SC0_F2_HORN_001
                          M         
                          M         if      (CH2SC0_F2_HORN_001-SKEME_BASE) > 0xFFF             ;check branch size in SCHEME
                          M                 error   CH2SC0_F2_HORN_001 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00060A 42C6               M                 DB      CMD_GOTO_SND + ((high (CH2SC0_F2_HORN_001-SKEME_BASE)) & 0x0F) , low (CH2SC0_F2_
                          M         endif
                          M                 
                      01966 ;----
                      01967 ;CV150=00 DEFAULT HORN0 -- 0x00
00060C                01968 CH2SC0_F2_HORN_000
                      01969         ;==========================SEE if PLAYABLE horn scv  (scv150) BIT7=1
                      01970         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_HORNWHISTLE_VOLUME,SCALE_F
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 67
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00060C 80E1 0F8D          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_HORNWHISTLE_VOLUME,SCALE
                      01971         ;option non-playable when SF11 on:
                      01972         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_FANS_ON         ;SUSTAIN HORN ON
000610 1A04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_FANS_ON 
                      01973                 BRANCH_TO       CH2SC0_F2_HORN_000_START
                          M         
                          M         if      (CH2SC0_F2_HORN_000_START-SKEME_BASE) > 0xFFF       ;check branch size in SCHEME
                          M                 error   CH2SC0_F2_HORN_000_START range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000612 1CC6               M                 DB      CMD_GOTO_SND + ((high (CH2SC0_F2_HORN_000_START-SKEME_BASE)) & 0x0F) , low (CH2S
                          M         endif
                          M                 
                      01974         
                      01975         MASK_COMPARE    SCV_HORNWHISTLE_SELECT,IMMED_DATA,0x00,COMP_bit7,SKIP_SAME      
000614 95FC 7F00          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_HORNWHISTLE_SELECT,0x00,COMP_bit7
                      01976         ; If CV150 BIT7=1, enable volume modulation for playable horn 1
                      01977                 LOAD_MODIFIER   MTYPE_GAIN,ANALOG_GAIN_MODIFY+WORK_ACHNL_7F,SCV_HORNWHISTLE_VOLUME,SUMG+
000618 B4E1 4F8D          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),ANALOG_GAIN_MODIFY+WORK_ACHNL_7F,SCV_HORNWHIST
                      01978 
00061C                01979 CH2SC0_F2_HORN_000_START
                      01980         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_COUPLE_ON       ;see if SHORT HORN ON 
00061C 0A04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_COUPLE_ON 
                      01981                 BRANCH_TO       CH2SC0_F2_HORN_000_SHORT
                          M         
                          M         if      (CH2SC0_F2_HORN_000_SHORT-SKEME_BASE) > 0xFFF       ;check branch size in SCHEME
                          M                 error   CH2SC0_F2_HORN_000_SHORT range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00061E 2CC6               M                 DB      CMD_GOTO_SND + ((high (CH2SC0_F2_HORN_000_SHORT-SKEME_BASE)) & 0x0F) , low (CH2S
                          M         endif
                          M                 
                      01982         PLAY            HNDL_SC0_HORN0_START,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
000620 2640               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_HORN0_START & 0x3F)+((no_loop<<6)&
                          M         list
                      01983         
000622                01984 CH2SC0_F2_HORN_000_LONG
                      01985         ;longer when moving:
                      01986         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_MOVING
000622 0E04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_MOVING 
                      01987                 PLAY    HNDL_SC0_HORN0_LOOP,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
000624 2740               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_HORN0_LOOP & 0x3F)+((no_loop<<6)&0
                          M         list
                      01988 
000626                01989 CH2SC0_F2_HORN_000_LONGER
                      01990         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_HORNS_ON                ;see if HORN OFF, just ATTACK/SUSTAIN (S
000626 0904               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_HORNS_ON 
                      01991                 BRANCH_TO       CH2SC0_F2_HORN_000_HOLD
                          M         
                          M         if      (CH2SC0_F2_HORN_000_HOLD-SKEME_BASE) > 0xFFF        ;check branch size in SCHEME
                          M                 error   CH2SC0_F2_HORN_000_HOLD range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000628 30C6               M                 DB      CMD_GOTO_SND + ((high (CH2SC0_F2_HORN_000_HOLD-SKEME_BASE)) & 0x0F) , low (CH2SC
                          M         endif
                          M                 
                      01992         BRANCH_TO       CH2SC0_F2_HORN_000_DECAY
                          M         
                          M         if      (CH2SC0_F2_HORN_000_DECAY-SKEME_BASE) > 0xFFF       ;check branch size in SCHEME
                          M                 error   CH2SC0_F2_HORN_000_DECAY range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00062A 34C6               M                 DB      CMD_GOTO_SND + ((high (CH2SC0_F2_HORN_000_DECAY-SKEME_BASE)) & 0x0F) , low (CH2S
                          M         endif
                          M                 
                      01993                 
00062C                01994 CH2SC0_F2_HORN_000_SHORT
                      01995         PLAY    HNDL_SC0_HORN0_SHORT,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
00062C 2A40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_HORN0_SHORT & 0x3F)+((no_loop<<6)&
                          M         list
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 68
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01996         BRANCH_TO       CH2SC0_F2_HORN_000_EXIT
                          M         
                          M         if      (CH2SC0_F2_HORN_000_EXIT-SKEME_BASE) > 0xFFF        ;check branch size in SCHEME
                          M                 error   CH2SC0_F2_HORN_000_EXIT range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00062E 40C6               M                 DB      CMD_GOTO_SND + ((high (CH2SC0_F2_HORN_000_EXIT-SKEME_BASE)) & 0x0F) , low (CH2SC
                          M         endif
                          M                 
                      01997         
000630                01998 CH2SC0_F2_HORN_000_HOLD
                      01999         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_HORNS_ON                ;see if HORN OFF, just ATTACK/SUSTAIN (S
000630 0904               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_HORNS_ON 
                      02000                 PLAY    HNDL_SC0_HORN0_LOOP,loop_till_HORNS_OFF,loop_INVERT                     
                          M         list ;2 byte PLAY  [HANDLE]
000632 674A               M         DB      CMD_PLAY_SND+((loop_till_HORNS_OFF>>2)&0x07)+loop_INVERT, (HNDL_SC0_HORN0_LOOP & 0x3F)+(
                          M         list
                      02001                 
000634                02002 CH2SC0_F2_HORN_000_DECAY
                      02003         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_FANS_ON ;see if SUSTAIN HORN ON 
000634 1A04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_FANS_ON 
                      02004                 PLAY    HNDL_SC0_HORN0_SUSTAIN,no_loop,loop_STD 
                          M         list ;2 byte PLAY  [HANDLE]
000636 2840               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_HORN0_SUSTAIN & 0x3F)+((no_loop<<6
                          M         list
                      02005                 
                      02006         PLAY            HNDL_SC0_HORN0_END,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
000638 2940               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_HORN0_END & 0x3F)+((no_loop<<6)&0x
                          M         list
                      02007                 
                      02008         MASK_COMPARE    SCV_FEATURE4_DISABLE,IMMED_DATA,0x00,COMP_bit1,SKIP_SAME                ;SKIP_LE
00063A BBFC FD00          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_FEATURE4_DISABLE,0x00,COMP_bit1
                      02009                 BRANCH_TO       CH2SC0_F2_HORN_001
                          M         
                          M         if      (CH2SC0_F2_HORN_001-SKEME_BASE) > 0xFFF             ;check branch size in SCHEME
                          M                 error   CH2SC0_F2_HORN_001 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00063E 42C6               M                 DB      CMD_GOTO_SND + ((high (CH2SC0_F2_HORN_001-SKEME_BASE)) & 0x0F) , low (CH2SC0_F2_
                          M         endif
                          M                 
                      02010                 
000640                02011 CH2SC0_F2_HORN_000_EXIT
                      02012         END_SOUND       ;Play HILO Horn when bit1 is on; bypass disabled HiLo sounds
000640 0000               M                 DB      CMD_END_SND,0
                      02013 
                      02014 ;CV150=01 SECOND HORN2 -- 0x01
000642                02015 CH2SC0_F2_HORN_001
                      02016         ;==========================SEE if PLAYABLE horn scv  (scv150) BIT7=1
                      02017         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_HORNWHISTLE_VOLUME,SCALE_F
000642 80E1 0F8D          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_HORNWHISTLE_VOLUME,SCALE
                      02018         ;option non-playable when SF11 on:
                      02019         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_FANS_ON         ;SUSTAIN HORN ON
000646 1A04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_FANS_ON 
                      02020                 BRANCH_TO       CH2SC0_F2_HORN_001_START
                          M         
                          M         if      (CH2SC0_F2_HORN_001_START-SKEME_BASE) > 0xFFF       ;check branch size in SCHEME
                          M                 error   CH2SC0_F2_HORN_001_START range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000648 52C6               M                 DB      CMD_GOTO_SND + ((high (CH2SC0_F2_HORN_001_START-SKEME_BASE)) & 0x0F) , low (CH2S
                          M         endif
                          M                 
                      02021 
                      02022         MASK_COMPARE    SCV_HORNWHISTLE_SELECT,IMMED_DATA,0x00,COMP_bit7,SKIP_SAME      
00064A 95FC 7F00          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_HORNWHISTLE_SELECT,0x00,COMP_bit7
                      02023         ; If CV150 BIT7=1, enable volume modulation for playable horn 1
                      02024                 LOAD_MODIFIER   MTYPE_GAIN,ANALOG_GAIN_MODIFY+WORK_ACHNL_7F,SCV_HORNWHISTLE_VOLUME,SUMG+
00064E B4E1 4F8D          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),ANALOG_GAIN_MODIFY+WORK_ACHNL_7F,SCV_HORNWHIST
                      02025         
000652                02026 CH2SC0_F2_HORN_001_START
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 69
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02027         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_COUPLE_ON       ;see if SHORT HORN ON 
000652 0A04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_COUPLE_ON 
                      02028                 BRANCH_TO       CH2SC0_F2_HORN_001_SHORT
                          M         
                          M         if      (CH2SC0_F2_HORN_001_SHORT-SKEME_BASE) > 0xFFF       ;check branch size in SCHEME
                          M                 error   CH2SC0_F2_HORN_001_SHORT range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000654 62C6               M                 DB      CMD_GOTO_SND + ((high (CH2SC0_F2_HORN_001_SHORT-SKEME_BASE)) & 0x0F) , low (CH2S
                          M         endif
                          M                 
                      02029         PLAY            HNDL_SC0_HORN1_START,no_loop,loop_STD   
                          M         list ;2 byte PLAY  [HANDLE]
000656 2B40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_HORN1_START & 0x3F)+((no_loop<<6)&
                          M         list
                      02030         
000658                02031 CH2SC0_F2_HORN_001_LONG 
                      02032         ;longer when moving:
                      02033         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_MOVING
000658 0E04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_MOVING 
                      02034                 PLAY    HNDL_SC0_HORN1_LOOP,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
00065A 2C40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_HORN1_LOOP & 0x3F)+((no_loop<<6)&0
                          M         list
                      02035 
00065C                02036 CH2SC0_F2_HORN_001_LONGER       
                      02037         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_HORNS_ON                ;see if HORN OFF, just ATTACK/SUSTAIN (S
00065C 0904               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_HORNS_ON 
                      02038                 BRANCH_TO       CH2SC0_F2_HORN_001_HOLD
                          M         
                          M         if      (CH2SC0_F2_HORN_001_HOLD-SKEME_BASE) > 0xFFF        ;check branch size in SCHEME
                          M                 error   CH2SC0_F2_HORN_001_HOLD range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00065E 66C6               M                 DB      CMD_GOTO_SND + ((high (CH2SC0_F2_HORN_001_HOLD-SKEME_BASE)) & 0x0F) , low (CH2SC
                          M         endif
                          M                 
                      02039         BRANCH_TO       CH2SC0_F2_HORN_001_DECAY
                          M         
                          M         if      (CH2SC0_F2_HORN_001_DECAY-SKEME_BASE) > 0xFFF       ;check branch size in SCHEME
                          M                 error   CH2SC0_F2_HORN_001_DECAY range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000660 6AC6               M                 DB      CMD_GOTO_SND + ((high (CH2SC0_F2_HORN_001_DECAY-SKEME_BASE)) & 0x0F) , low (CH2S
                          M         endif
                          M                 
                      02040         
000662                02041 CH2SC0_F2_HORN_001_SHORT
                      02042         PLAY    HNDL_SC0_HORN1_SHORT,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
000662 2F40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_HORN1_SHORT & 0x3F)+((no_loop<<6)&
                          M         list
                      02043         BRANCH_TO       CH2SC0_F2_HORN_001_EXIT
                          M         
                          M         if      (CH2SC0_F2_HORN_001_EXIT-SKEME_BASE) > 0xFFF        ;check branch size in SCHEME
                          M                 error   CH2SC0_F2_HORN_001_EXIT range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000664 70C6               M                 DB      CMD_GOTO_SND + ((high (CH2SC0_F2_HORN_001_EXIT-SKEME_BASE)) & 0x0F) , low (CH2SC
                          M         endif
                          M                 
                      02044         
000666                02045 CH2SC0_F2_HORN_001_HOLD
                      02046         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_HORNS_ON                ;see if HORN OFF, just ATTACK/SUSTAIN (S
000666 0904               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_HORNS_ON 
                      02047                 PLAY    HNDL_SC0_HORN1_LOOP,loop_till_HORNS_OFF,loop_INVERT                     
                          M         list ;2 byte PLAY  [HANDLE]
000668 6C4A               M         DB      CMD_PLAY_SND+((loop_till_HORNS_OFF>>2)&0x07)+loop_INVERT, (HNDL_SC0_HORN1_LOOP & 0x3F)+(
                          M         list
                      02048         
00066A                02049 CH2SC0_F2_HORN_001_DECAY
                      02050         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_FANS_ON ;see if SUSTAIN HORN ON 
00066A 1A04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_FANS_ON 
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 70
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02051                 PLAY    HNDL_SC0_HORN1_SUSTAIN,no_loop,loop_STD 
                          M         list ;2 byte PLAY  [HANDLE]
00066C 2D40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_HORN1_SUSTAIN & 0x3F)+((no_loop<<6
                          M         list
                      02052 
                      02053         ;SKIP_ON_TRIGGER        TRIG_TRUE,TRIG_HORNS_ON         ;see if HORN OFF, just ATTACK/SUSTAIN (S
                      02054         PLAY            HNDL_SC0_HORN1_END,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
00066E 2E40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_HORN1_END & 0x3F)+((no_loop<<6)&0x
                          M         list
                      02055 
000670                02056 CH2SC0_F2_HORN_001_EXIT
                      02057         END_SOUND 
000670 0000               M                 DB      CMD_END_SND,0
                      02058 
                      02059 
                      02060         
                      02061          ;;;;;;;;;;;;;;end SF2 horns ;;;;;;;;;;;;;;;;;;;;
                      02062 
                      02063          
                      02064 ;UC2.3================
                      02065         
                      02066         ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                      02067         ;       THIS ROUTINE IS CH2_ high priority (PERSISTENT (NOT INTERRUPTABLE)
                      02068         ;---------DISTANCE indicator -change to MILEPOST message...?
                      02069         ;       ROUTINE WAS CHANNEL2 IN ver4. 
                      02070         ;----------------------------------------------------
                      02071         INITIATE_SOUND  TRIG_DISTANCE,NORMAL
000672 0390               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), TRIG_DISTANCE +((NORMAL) & 0x80)
  0000000F                M ICNT += 1
                          M 
                      02072         SKIP_ON_TRIGGER TRIG_TRUE,TRIG_MOVING
000674 0E05               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_TRUE & 0x03), TRIG_MOVING 
                      02073                 END_SOUND       
000676 0000               M                 DB      CMD_END_SND,0
                      02074                 
                      02075         MASK_COMPARE    WORK_SPEED,IMMED_DATA,+10,COMP_ALL,SKIP_LESS ;compare current speed 
000678 00FE 000A          M                 DB      CMD_MASK_COMPARE+SKIP_LESS+IMMED_DATA,WORK_SPEED,+10,COMP_ALL
                      02076                 BRANCH_TO       CH2SC0_AUTO_MOVING
                          M         
                          M         if      (CH2SC0_AUTO_MOVING-SKEME_BASE) > 0xFFF             ;check branch size in SCHEME
                          M                 error   CH2SC0_AUTO_MOVING range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00067C 88C6               M                 DB      CMD_GOTO_SND + ((high (CH2SC0_AUTO_MOVING-SKEME_BASE)) & 0x0F) , low (CH2SC0_AUT
                          M         endif
                          M                 
                      02077         END_SOUND
00067E 0000               M                 DB      CMD_END_SND,0
                      02078         
                      02079         MASK_COMPARE    WORK_SPEED,IMMED_DATA,0x01,COMP_ALL,SKIP_GRTR           ; Check if stopped
000680 00FF 0001          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,WORK_SPEED,0x01,COMP_ALL
                      02080                 BRANCH_TO       CH2SC0_AUTO_MOVING
                          M         
                          M         if      (CH2SC0_AUTO_MOVING-SKEME_BASE) > 0xFFF             ;check branch size in SCHEME
                          M                 error   CH2SC0_AUTO_MOVING range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000684 88C6               M                 DB      CMD_GOTO_SND + ((high (CH2SC0_AUTO_MOVING-SKEME_BASE)) & 0x0F) , low (CH2SC0_AUT
                          M         endif
                          M                 
                      02081         ;BRANCH_TO      CH2SC0_AUTO_MOVING1
                      02082         
000686                02083 CH2SC0_AUTO_MOVING1
                      02084         END_SOUND
000686 0000               M                 DB      CMD_END_SND,0
                      02085         
000688                02086 CH2SC0_AUTO_MOVING
                      02087         SKIP_ON_TRIGGER TRIG_TRUE,TRIG_UNCOUPLE_ON                              ;qualify with SF3 on
000688 1805               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_TRUE & 0x03), TRIG_UNCOUPLE_ON 
                      02088                 PLAY    HNDL_SC0_COUPLER_SLACK,no_loop,loop_STD 
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 71
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         list ;4 byte XPLAY      [HANDLE]
00068A 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_COUPLER_SLACK & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHE
00068C 2A00               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_COUPLER_SLACK & 0x3F)+((no_loop<<6)&0xC
                          M         list
                      02089                                         
00068E                02090 CH13SC0_AUTO_GRADE_CROSSING     
                      02091         ;-------------------------------------------------
                      02092         ;  DISTANCE EVENT ! Play Horn Distraction
                      02093         ;-------------------------------------------------
                      02094         MASK_COMPARE    SCV_FEATURE_DISABLE,IMMED_DATA,0x00,COMP_bit5,SKIP_SAME         ;SKIP_LESSSKIP_G
00068E B8FC DF00          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_FEATURE_DISABLE,0x00,COMP_bit5
                      02095         ;Disable horn on distance event                 ;Skipped when ARG1 = ARG2
                      02096                 END_SOUND
000692 0000               M                 DB      CMD_END_SND,0
                      02097          
                      02098         SKIP_ON_TRIGGER TRIG_TRUE,TRIG_LIGHTS_ON        ;when headlamp dark do not play crossing sound:
000694 0C05               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_TRUE & 0x03), TRIG_LIGHTS_ON 
                      02099                 END_SOUND
000696 0000               M                 DB      CMD_END_SND,0
                      02100                 
                      02101         ;TEST SPEED HERE:
                      02102         MASK_COMPARE    WORK_SPEED,IMMED_DATA,SCV_CUTOFF_SPEED_LOW,COMP_ALL,SKIP_GRTR           ; Check 
000698 00FF 00A9          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,WORK_SPEED,SCV_CUTOFF_SPEED_LOW,COMP_ALL
                      02103                 END_SOUND
00069C 0000               M                 DB      CMD_END_SND,0
                      02104                 
00069E                02105 CH13SC0_AUTO_GRADE_CROSSING2
                      02106         SKIP_ON_TRIGGER TRIG_TRUE,TRIG_UNCOUPLE_ON              ;When coupler link is raised do not play
00069E 1805               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_TRUE & 0x03), TRIG_UNCOUPLE_ON 
                      02107                 BRANCH_TO       CH13SC0_GRADE_CROSS_HORN
                          M         
                          M         if      (CH13SC0_GRADE_CROSS_HORN-SKEME_BASE) > 0xFFF       ;check branch size in SCHEME
                          M                 error   CH13SC0_GRADE_CROSS_HORN range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0006A0 A4C6               M                 DB      CMD_GOTO_SND + ((high (CH13SC0_GRADE_CROSS_HORN-SKEME_BASE)) & 0x0F) , low (CH13
                          M         endif
                          M                 
                      02108         END_SOUND
0006A2 0000               M                 DB      CMD_END_SND,0
                      02109         
                      02110 ;---------------
                      02111 ;UC2.4================
                      02112 ; CROSSING HORN WHEN AUTOMATIC notching selected in SCV155=0
0006A4                02113 CH13SC0_GRADE_CROSS_HORN        
                      02114         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_IBRAKES_ON              ;braking on, check stopped:
0006A4 1904               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_IBRAKES_ON 
                      02115                 END_SOUND
0006A6 0000               M                 DB      CMD_END_SND,0
                      02116                 
0006A8                02117 CH13SC0_XING_HORN_SELECT        
                      02118 
                      02119 ;HORN choices 0-1
0006A8                02120 CH13SC0_XING_HORN_0XX
                      02121         MASK_COMPARE    SCV_HORNWHISTLE_SELECT,IMMED_DATA,0x00,COMP_bit1,SKIP_SAME              ;SKIP_LE
0006A8 95FC FD00          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_HORNWHISTLE_SELECT,0x00,COMP_bit1
                      02122                 BRANCH_TO               CH13SC0_XING_HORN_01X
                          M         
                          M         if      (CH13SC0_XING_HORN_01X-SKEME_BASE) > 0xFFF          ;check branch size in SCHEME
                          M                 error   CH13SC0_XING_HORN_01X range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0006AC 1CC7               M                 DB      CMD_GOTO_SND + ((high (CH13SC0_XING_HORN_01X-SKEME_BASE)) & 0x0F) , low (CH13SC0
                          M         endif
                          M                 
                      02123 
                      02124 ;DEMO           bit1 disable DEMO ALL HornS/whistles Enabled=on=0 =2=disabled
                      02125         MASK_COMPARE    SCV_FEATURE3_DISABLE,IMMED_DATA,0x00,COMP_bit1,SKIP_SAME                ;SKIP_LE
0006AE BAFC FD00          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_FEATURE3_DISABLE,0x00,COMP_bit1
                      02126                 BRANCH_TO       CH13SC0_XING_HORN_000                   ;Disabled       
                          M         
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 72
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         if      (CH13SC0_XING_HORN_000-SKEME_BASE) > 0xFFF          ;check branch size in SCHEME
                          M                 error   CH13SC0_XING_HORN_000 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0006B2 BAC6               M                 DB      CMD_GOTO_SND + ((high (CH13SC0_XING_HORN_000-SKEME_BASE)) & 0x0F) , low (CH13SC0
                          M         endif
                          M                 
                      02127 ;-----
                      02128 ;CV150= xxxx-x00X
0006B4                02129 CH13SC0_XING_HORN_00X
                      02130         MASK_COMPARE    SCV_HORNWHISTLE_SELECT,IMMED_DATA,0x00,COMP_bit0,SKIP_SAME              ;SKIP_LE
0006B4 95FC FE00          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_HORNWHISTLE_SELECT,0x00,COMP_bit0
                      02131                 BRANCH_TO               CH13SC0_XING_HORN_001
                          M         
                          M         if      (CH13SC0_XING_HORN_001-SKEME_BASE) > 0xFFF          ;check branch size in SCHEME
                          M                 error   CH13SC0_XING_HORN_001 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0006B8 EEC6               M                 DB      CMD_GOTO_SND + ((high (CH13SC0_XING_HORN_001-SKEME_BASE)) & 0x0F) , low (CH13SC0
                          M         endif
                          M                 
                      02132 
                      02133 ;----
                      02134 ;*************************** CV150= 00 DEFAULT HORN
0006BA                02135 CH13SC0_XING_HORN_000
                      02136         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_HORNWHISTLE_VOLUME,SCALE_F     ;default VOLUME 
0006BA 80E1 0F8D          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_HORNWHISTLE_VOLUME,SCALE
                      02137         PLAY            HNDL_SC0_HORN0_START,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
0006BE 2640               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_HORN0_START & 0x3F)+((no_loop<<6)&
                          M         list
                      02138         PLAY            HNDL_SC0_HORN0_LOOP,no_loop,loop_INVERT
                          M         list ;2 byte PLAY  [HANDLE]
0006C0 2748               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_INVERT, (HNDL_SC0_HORN0_LOOP & 0x3F)+((no_loop<<6)
                          M         list
                      02139         PLAY            HNDL_SC0_HORN0_END,no_loop,loop_STD     
                          M         list ;2 byte PLAY  [HANDLE]
0006C2 2940               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_HORN0_END & 0x3F)+((no_loop<<6)&0x
                          M         list
                      02140         SKIP_ON_TRIGGER TRIG_TRUE,TRIG_MOVING
0006C4 0E05               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_TRUE & 0x03), TRIG_MOVING 
                      02141                 BRANCH_TO       CH13SC0_XING_HORN_000_EXIT
                          M         
                          M         if      (CH13SC0_XING_HORN_000_EXIT-SKEME_BASE) > 0xFFF     ;check branch size in SCHEME
                          M                 error   CH13SC0_XING_HORN_000_EXIT range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0006C6 E6C6               M                 DB      CMD_GOTO_SND + ((high (CH13SC0_XING_HORN_000_EXIT-SKEME_BASE)) & 0x0F) , low (CH
                          M         endif
                          M                 
                      02142         MASK_COMPARE    SCV_FEATURE4_DISABLE,IMMED_DATA,0x00,COMP_bit1,SKIP_SAME                ;SKIP_LE
0006C8 BBFC FD00          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_FEATURE4_DISABLE,0x00,COMP_bit1
                      02143                 BRANCH_TO       CH13SC0_XING_HORN_001           ;bypass disabled HiLo sounds:
                          M         
                          M         if      (CH13SC0_XING_HORN_001-SKEME_BASE) > 0xFFF          ;check branch size in SCHEME
                          M                 error   CH13SC0_XING_HORN_001 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0006CC EEC6               M                 DB      CMD_GOTO_SND + ((high (CH13SC0_XING_HORN_001-SKEME_BASE)) & 0x0F) , low (CH13SC0
                          M         endif
                          M                 
                      02144 
                      02145         DELAY_SOUND     DELAY_THIS,(150/24),DELAY_GLOBAL        
0006CE 06B5               M                 DB      CMD_DELAY_SND + (DELAY_GLOBAL & 0x01), ((150/24) & 0x7F)+DELAY_THIS 
                      02146         PLAY            HNDL_SC0_HORN0_START,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
0006D0 2640               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_HORN0_START & 0x3F)+((no_loop<<6)&
                          M         list
                      02147         PLAY            HNDL_SC0_HORN0_LOOP,no_loop,loop_INVERT
                          M         list ;2 byte PLAY  [HANDLE]
0006D2 2748               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_INVERT, (HNDL_SC0_HORN0_LOOP & 0x3F)+((no_loop<<6)
                          M         list
                      02148         PLAY            HNDL_SC0_HORN0_END,no_loop,loop_STD     
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 73
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         list ;2 byte PLAY  [HANDLE]
0006D4 2940               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_HORN0_END & 0x3F)+((no_loop<<6)&0x
                          M         list
                      02149         DELAY_SOUND     DELAY_THIS,(150/24),DELAY_GLOBAL        
0006D6 06B5               M                 DB      CMD_DELAY_SND + (DELAY_GLOBAL & 0x01), ((150/24) & 0x7F)+DELAY_THIS 
                      02150         PLAY            HNDL_SC0_HORN0_START,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
0006D8 2640               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_HORN0_START & 0x3F)+((no_loop<<6)&
                          M         list
                      02151         PLAY            HNDL_SC0_HORN0_END,no_loop,loop_STD     
                          M         list ;2 byte PLAY  [HANDLE]
0006DA 2940               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_HORN0_END & 0x3F)+((no_loop<<6)&0x
                          M         list
                      02152         DELAY_SOUND     DELAY_THIS,(150/24),DELAY_GLOBAL        
0006DC 06B5               M                 DB      CMD_DELAY_SND + (DELAY_GLOBAL & 0x01), ((150/24) & 0x7F)+DELAY_THIS 
                      02153         PLAY            HNDL_SC0_HORN0_START,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
0006DE 2640               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_HORN0_START & 0x3F)+((no_loop<<6)&
                          M         list
                      02154         PLAY            HNDL_SC0_HORN0_LOOP,no_loop,loop_INVERT
                          M         list ;2 byte PLAY  [HANDLE]
0006E0 2748               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_INVERT, (HNDL_SC0_HORN0_LOOP & 0x3F)+((no_loop<<6)
                          M         list
                      02155         PLAY            HNDL_SC0_HORN0_LOOP,no_loop,loop_INVERT
                          M         list ;2 byte PLAY  [HANDLE]
0006E2 2748               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_INVERT, (HNDL_SC0_HORN0_LOOP & 0x3F)+((no_loop<<6)
                          M         list
                      02156         PLAY            HNDL_SC0_HORN0_END,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
0006E4 2940               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_HORN0_END & 0x3F)+((no_loop<<6)&0x
                          M         list
                      02157         
0006E6                02158 CH13SC0_XING_HORN_000_EXIT
                      02159         MASK_COMPARE    SCV_FEATURE3_DISABLE,IMMED_DATA,0x00,COMP_bit1,SKIP_SAME                ;SKIP_LE
0006E6 BAFC FD00          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_FEATURE3_DISABLE,0x00,COMP_bit1
                      02160                 BRANCH_TO       CH13SC0_XING_HORN_001                   ;Disabled       
                          M         
                          M         if      (CH13SC0_XING_HORN_001-SKEME_BASE) > 0xFFF          ;check branch size in SCHEME
                          M                 error   CH13SC0_XING_HORN_001 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0006EA EEC6               M                 DB      CMD_GOTO_SND + ((high (CH13SC0_XING_HORN_001-SKEME_BASE)) & 0x0F) , low (CH13SC0
                          M         endif
                          M                 
                      02161         END_SOUND
0006EC 0000               M                 DB      CMD_END_SND,0
                      02162         
                      02163 ;*************************** CV150= 01 SECOND HORN
0006EE                02164 CH13SC0_XING_HORN_001
                      02165         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_HORNWHISTLE_VOLUME,SCALE_F     ;default VOLUME
0006EE 80E1 0F8D          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_HORNWHISTLE_VOLUME,SCALE
                      02166         PLAY            HNDL_SC0_HORN1_START,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
0006F2 2B40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_HORN1_START & 0x3F)+((no_loop<<6)&
                          M         list
                      02167         PLAY            HNDL_SC0_HORN1_LOOP,no_loop,loop_INVERT
                          M         list ;2 byte PLAY  [HANDLE]
0006F4 2C48               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_INVERT, (HNDL_SC0_HORN1_LOOP & 0x3F)+((no_loop<<6)
                          M         list
                      02168         PLAY            HNDL_SC0_HORN1_END,no_loop,loop_STD     
                          M         list ;2 byte PLAY  [HANDLE]
0006F6 2E40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_HORN1_END & 0x3F)+((no_loop<<6)&0x
                          M         list
                      02169         SKIP_ON_TRIGGER TRIG_TRUE,TRIG_MOVING
0006F8 0E05               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_TRUE & 0x03), TRIG_MOVING 
                      02170                 BRANCH_TO       CH13SC0_XING_HORN_001_EXIT
                          M         
                          M         if      (CH13SC0_XING_HORN_001_EXIT-SKEME_BASE) > 0xFFF     ;check branch size in SCHEME
                          M                 error   CH13SC0_XING_HORN_001_EXIT range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 74
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006FA 1AC7               M                 DB      CMD_GOTO_SND + ((high (CH13SC0_XING_HORN_001_EXIT-SKEME_BASE)) & 0x0F) , low (CH
                          M         endif
                          M                 
                      02171         MASK_COMPARE    SCV_FEATURE4_DISABLE,IMMED_DATA,0x00,COMP_bit1,SKIP_SAME                ;SKIP_LE
0006FC BBFC FD00          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_FEATURE4_DISABLE,0x00,COMP_bit1
                      02172                 END_SOUND
000700 0000               M                 DB      CMD_END_SND,0
                      02173 
                      02174         DELAY_SOUND     DELAY_THIS,(150/24),DELAY_GLOBAL        
000702 06B5               M                 DB      CMD_DELAY_SND + (DELAY_GLOBAL & 0x01), ((150/24) & 0x7F)+DELAY_THIS 
                      02175         PLAY            HNDL_SC0_HORN1_START,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
000704 2B40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_HORN1_START & 0x3F)+((no_loop<<6)&
                          M         list
                      02176         PLAY            HNDL_SC0_HORN1_LOOP,no_loop,loop_INVERT
                          M         list ;2 byte PLAY  [HANDLE]
000706 2C48               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_INVERT, (HNDL_SC0_HORN1_LOOP & 0x3F)+((no_loop<<6)
                          M         list
                      02177         PLAY            HNDL_SC0_HORN1_END,no_loop,loop_STD     
                          M         list ;2 byte PLAY  [HANDLE]
000708 2E40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_HORN1_END & 0x3F)+((no_loop<<6)&0x
                          M         list
                      02178         DELAY_SOUND     DELAY_THIS,(150/24),DELAY_GLOBAL        
00070A 06B5               M                 DB      CMD_DELAY_SND + (DELAY_GLOBAL & 0x01), ((150/24) & 0x7F)+DELAY_THIS 
                      02179         PLAY            HNDL_SC0_HORN1_START,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
00070C 2B40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_HORN1_START & 0x3F)+((no_loop<<6)&
                          M         list
                      02180         PLAY            HNDL_SC0_HORN1_END,no_loop,loop_STD     
                          M         list ;2 byte PLAY  [HANDLE]
00070E 2E40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_HORN1_END & 0x3F)+((no_loop<<6)&0x
                          M         list
                      02181         DELAY_SOUND     DELAY_THIS,(150/24),DELAY_GLOBAL        
000710 06B5               M                 DB      CMD_DELAY_SND + (DELAY_GLOBAL & 0x01), ((150/24) & 0x7F)+DELAY_THIS 
                      02182         PLAY            HNDL_SC0_HORN1_START,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
000712 2B40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_HORN1_START & 0x3F)+((no_loop<<6)&
                          M         list
                      02183         PLAY            HNDL_SC0_HORN1_LOOP,no_loop,loop_INVERT
                          M         list ;2 byte PLAY  [HANDLE]
000714 2C48               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_INVERT, (HNDL_SC0_HORN1_LOOP & 0x3F)+((no_loop<<6)
                          M         list
                      02184         PLAY            HNDL_SC0_HORN1_LOOP,no_loop,loop_INVERT
                          M         list ;2 byte PLAY  [HANDLE]
000716 2C48               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_INVERT, (HNDL_SC0_HORN1_LOOP & 0x3F)+((no_loop<<6)
                          M         list
                      02185         PLAY            HNDL_SC0_HORN1_END,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
000718 2E40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_HORN1_END & 0x3F)+((no_loop<<6)&0x
                          M         list
                      02186         
00071A                02187 CH13SC0_XING_HORN_001_EXIT
                      02188         END_SOUND
00071A 0000               M                 DB      CMD_END_SND,0
                      02189 
00071C                02190 CH13SC0_XING_HORN_01X
                      02191         
                      02192 ;----------------- 
                      02193 ;UC2.5================
                      02194   INITIATE_SOUND        TRIG_ALTGCS_ON,NORMAL   ;RUN_WHILE_TRIG         ;continuous NON repeat version
00071C 2290               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), TRIG_ALTGCS_ON +((NORMAL) & 0x80)
  00000010                M ICNT += 1
                          M 
                      02195          BRANCH_TO      CH13SC0_GRADE_CROSS_HORN
                          M         
                          M         if      (CH13SC0_GRADE_CROSS_HORN-SKEME_BASE) > 0xFFF       ;check branch size in SCHEME
                          M                 error   CH13SC0_GRADE_CROSS_HORN range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00071E A4C6               M                 DB      CMD_GOTO_SND + ((high (CH13SC0_GRADE_CROSS_HORN-SKEME_BASE)) & 0x0F) , low (CH13
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 75
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         endif
                          M                 
                      02196          
                      02197         END_SOUND               ;dummy inst to PAD file FOR NEW len     
000720 0000               M                 DB      CMD_END_SND,0
                      02198         
                      02199         
                      02200                 
                      02201         ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                      02202         ;       THIS ROUTINE IS CH2_ high priority/whistle/horn (INTERRUPTABLE)
                      02203         ;       Direction changed
                      02204         ;       DO coupler clank and BRAKE if SF3 is ON,  is dir chng and last PK spd below e.g. CV151
                      02205         ;----------------------------------------------------
                      02206         INITIATE_SOUND  TRIG_DIRNOW_CHNG,NORMAL
000722 0D90               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), TRIG_DIRNOW_CHNG +((NORMAL) & 0x80)
  00000011                M ICNT += 1
                          M 
                      02207         ;play isolation/reverser:
                      02208         LOAD_MODIFIER MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_MISC_VOLUME,SCALE_B
000724 80E1 0B90          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_MISC_VOLUME,SCALE_B
                      02209         PLAY    HNDL_SC0_ISOLATION_REVERSE_FWD,no_loop,loop_STD         
                          M         list ;2 byte PLAY  [HANDLE]
000728 3640               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_ISOLATION_REVERSE_FWD & 0x3F)+((no
                          M         list
                      02210         
                      02211         ;Load Control works with continuous sounds in voice 1   
                      02212         ;triggers on reversal   
                      02213         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+VARY_LOAD,SCALE_INCR_1,SCALE_MAX ;revised 5/29/17
00072A BCE6 0F01          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+VARY_LOAD,SCALE_INCR_1,S
                      02214 ;---REDUCE DELTA HERE
                      02215         MASK_COMPARE    WORK_SPEED_DELTA,IMMED_DATA,NOTCH4,COMP_ALL,SKIP_LESS           ;prevent underfl
00072E 0BFE 0030          M                 DB      CMD_MASK_COMPARE+SKIP_LESS+IMMED_DATA,WORK_SPEED_DELTA,NOTCH4,COMP_ALL
                      02216                 LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_LODE+WORK_SPEED_DELTA,NOTCH3,0     ; set Manual Not
000732 0BE6 0020          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_LODE+WORK_SPEED_DELTA,NOTCH3,0
                      02217         MASK_COMPARE    WORK_SPEED_DELTA,IMMED_DATA,MIN_NOTCH_VAL,COMP_ALL,SKIP_SAME            ;prevent
000736 0BFC 0000          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,WORK_SPEED_DELTA,MIN_NOTCH_VAL,COMP_ALL
                      02218                 LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_INTEGRATE+WORK_SPEED_DELTA,-0x10,MAX_NOTCH_VAL   
00073A ABE6 70F0          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+WORK_SPEED_DELTA,-0x10,M
                      02219 ;---
                      02220         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_OR+USER_INTLK_BITS,COUPLER_MASK5,MERGE_ALL_MASK  ;OR=SETt
00073E 5EE6 0020          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_OR+USER_INTLK_BITS,COUPLER_MASK5,M
                      02221         ;---------------------------------------------
                      02222         ;  Direction change and SF3 on DO coupler clank and BRAKE if SF3 is ON,  is dir chng and last PK
                      02223         ;---------------------------------------------
000742                02224 CH2SC0_DIRECTION_CHANGED
                      02225         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_AND+USER_INTLK_BITS,~AUTO_BRAKE_MASK2,MERGE_ALL_MASK     
000742 3EE6 00FB          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_AND+USER_INTLK_BITS,~AUTO_BRAKE_MA
                      02226         MASK_COMPARE    WORK_PEAK_SPD,IMMED_DATA,0,COMP_ALL,SKIP_SAME   ;if PK_SPD=0, no MOVEMENT,no BRA
000746 19FC 0000          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,WORK_PEAK_SPD,0,COMP_ALL
                      02227                 SKIP_ON_TRIGGER TRIG_TRUE,TRIG_IBRAKES_ON       ;qualify with BRAKE ON          ;Skipped
00074A 1905               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_TRUE & 0x03), TRIG_IBRAKES_ON 
                      02228 ;-                      THEN:
00074C                02229 CH2SC0_COUPLER_INACTIVE ;NOTE DOUBLE NESTING IFFS
                      02230                         BRANCH_TO       CH2SC0_DIR_CLR_PEAK_SPD         ;SF3=COUPLER OFF or PK_SPD=0, ju
                          M         
                          M         if      (CH2SC0_DIR_CLR_PEAK_SPD-SKEME_BASE) > 0xFFF        ;check branch size in SCHEME
                          M                 error   CH2SC0_DIR_CLR_PEAK_SPD range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00074C 6AC7               M                 DB      CMD_GOTO_SND + ((high (CH2SC0_DIR_CLR_PEAK_SPD-SKEME_BASE)) & 0x0F) , low (CH2SC
                          M         endif
                          M                 
                      02231                                 ; just reset PKD_SPD at DIR change
                      02232 
                      02233 ;----------------------------------------------------
                      02234 ;at this direction change: SF3 is ON and WORK_PEAK_SPD is not ZERO
                      02235 ;----------------------------------------------------
00074E                02236 CH2SC0_COUPLER_TEST
                      02237         MASK_COMPARE    WORK_PEAK_SPD,TARGET_DATA,SCV_COUPLER_THRESHOLD,COMP_ALL,SKIP_LESS ;SKIP_SAME ;S
00074E 19FA 0096          M                 DB      CMD_MASK_COMPARE+SKIP_LESS+TARGET_DATA,WORK_PEAK_SPD,SCV_COUPLER_THRESHOLD,COMP_
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 76
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02238                 BRANCH_TO       CH2SC0_DIR_CLR_PEAK_SPD                 ;Skipped when ARG1 < ARG2       
                          M         
                          M         if      (CH2SC0_DIR_CLR_PEAK_SPD-SKEME_BASE) > 0xFFF        ;check branch size in SCHEME
                          M                 error   CH2SC0_DIR_CLR_PEAK_SPD range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000752 6AC7               M                 DB      CMD_GOTO_SND + ((high (CH2SC0_DIR_CLR_PEAK_SPD-SKEME_BASE)) & 0x0F) , low (CH2SC
                          M         endif
                          M                 
                      02239 ;----------------------------------------------------
                      02240 ;here WORK_PEAK_SPD is less than the SCV chosen, so BRAKE an COUPLE can fire
                      02241 ;----------------------------------------------------
000754                02242 CH2SC0_AUTO_COUPLER
                      02243         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_MOVING
000754 0E04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_MOVING 
                      02244                 LOAD_MODIFIER MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_BRAKE_VOLUME,SCALE_B
000756 80E1 0B8F          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_BRAKE_VOLUME,SCALE_B
                      02245         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_MOVING
00075A 0E04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_MOVING 
                      02246                 PLAY    HNDL_SC0_BRAKE_SET,no_loop,loop_STD                             ;do PLAY_ENGINE_
                          M         list ;2 byte PLAY  [HANDLE]
00075C 3940               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_BRAKE_SET & 0x3F)+((no_loop<<6)&0x
                          M         list
                      02247         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+AIR_PRESS,-0x18,0   ;decrease
00075E BDE6 00E8          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+AIR_PRESS,-0x18,0
                      02248         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_COUPLER_VOLUME,SCALE_B ;CV166 A6       Coupler 
000762 80E1 0BB0          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_COUPLER_VOLUME,SCALE_B
                      02249         PLAY    HNDL_SC0_COUPLER_CLASH,no_loop,loop_STD                 ;followed by COUPLER crash at DI
                          M         list ;4 byte XPLAY      [HANDLE]
000766 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_COUPLER_CLASH & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHE
000768 2900               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_COUPLER_CLASH & 0x3F)+((no_loop<<6)&0xC
                          M         list
                      02250         
00076A                02251 CH2SC0_DIR_CLR_PEAK_SPD
                      02252         ;;play reverser:
                      02253         ;LOAD_MODIFIER MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_POWER_REVERSER_VOLUME,SCALE_B
                      02254         ;PLAY   HNDL_SC0_ISOLATION_REVERSE_REV,no_loop,loop_STD         
                      02255         PLAY    HNDL_SC0_ISOLATION_CENTER,no_loop,loop_STD              
                          M         list ;2 byte PLAY  [HANDLE]
00076A 3840               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_ISOLATION_CENTER & 0x3F)+((no_loop
                          M         list
                      02256 
                      02257         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_LODE+WORK_PEAK_SPD,00,0  ;clear WORK_PEAK_SPD
00076C 19E6 0000          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_LODE+WORK_PEAK_SPD,00,0
                      02258         END_SOUND
000770 0000               M                 DB      CMD_END_SND,0
                      02259 
                      02260         
                      02261 ;------------------------------
                      02262 ;       TIMED CYCLE OF DRYER (TIMER SCAT0)
                      02263 ;SCATTER chnL 0 is automatic air DRYER
                      02264 ;----------------------------------------------------
                      02265 
                      02266 ;UC2.6================
                      02267         INITIATE_SOUND  TRIG_SCAT0,NORMAL
000772 6090               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), TRIG_SCAT0 +((NORMAL) & 0x80)
  00000012                M ICNT += 1
                          M 
000774                02268 CH15SC0_PLAY_DRYER      
                      02269         MASK_COMPARE    USER_INTLK_BITS,IMMED_DATA,COMP_MASK0,~COMP_MASK0,SKIP_SAME     ;bit0   COMPRESS
000774 1EFC FE01          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,USER_INTLK_BITS,COMP_MASK0,~COMP_MASK0
                      02270                 END_SOUND
000778 0000               M                 DB      CMD_END_SND,0
                      02271         ;interlock scatter events here in handler to prevent play after disable:
                      02272         MASK_COMPARE    WORK_STATUS_BITS,IMMED_DATA,WKSB_INTERLOCK_MASK,~WKSB_INTERLOCK_MASK,SKIP_SAME ;
00077A 07FC DF20          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,WORK_STATUS_BITS,WKSB_INTERLOCK_MASK,~WKSB
                      02273                 END_SOUND                       
00077E 0000               M                 DB      CMD_END_SND,0
                      02274 
                      02275         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_FANS_ON ;qualify with SF11 OFF
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 77
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000780 1A04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_FANS_ON 
                      02276                 END_SOUND
000782 0000               M                 DB      CMD_END_SND,0
                      02277 
                      02278 
                      02279         ;SKIP_ON_TRIGGER TRIG_FALSE,TRIG_FAND_ON        ;disable
                      02280         ;       END_SOUND
                      02281         
                      02282                         
                      02283         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_DRYER_VOLUME,SCALE_F
000784 80E1 0FAD          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_DRYER_VOLUME,SCALE_F
                      02284         SKIP_ON_TRIGGER TRIG_TRUE,TRIG_MOVING
000788 0E05               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_TRUE & 0x03), TRIG_MOVING 
                      02285                 LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_DRYER_VOLUME,SCALE_E
00078A 80E1 0EAD          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_DRYER_VOLUME,SCALE_E
                      02286         MASK_COMPARE COUNT_LOOP,IMMED_DATA,0,COMP_ALL,SKIP_GRTR    ;PLAY if Equal
00078E 1AFF 0000          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,COUNT_LOOP,0,COMP_ALL
                      02287                 BRANCH_TO       CH15SC0_PLAY_DRYER1
                          M         
                          M         if      (CH15SC0_PLAY_DRYER1-SKEME_BASE) > 0xFFF            ;check branch size in SCHEME
                          M                 error   CH15SC0_PLAY_DRYER1 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000792 B2C7               M                 DB      CMD_GOTO_SND + ((high (CH15SC0_PLAY_DRYER1-SKEME_BASE)) & 0x0F) , low (CH15SC0_P
                          M         endif
                          M                 
                      02288         MASK_COMPARE COUNT_LOOP,IMMED_DATA,1,COMP_ALL,SKIP_GRTR    ;PLAY if Equal
000794 1AFF 0001          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,COUNT_LOOP,1,COMP_ALL
                      02289                 BRANCH_TO       CH15SC0_PLAY_DRYER5
                          M         
                          M         if      (CH15SC0_PLAY_DRYER5-SKEME_BASE) > 0xFFF            ;check branch size in SCHEME
                          M                 error   CH15SC0_PLAY_DRYER5 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000798 B8C7               M                 DB      CMD_GOTO_SND + ((high (CH15SC0_PLAY_DRYER5-SKEME_BASE)) & 0x0F) , low (CH15SC0_P
                          M         endif
                          M                 
                      02290         MASK_COMPARE COUNT_LOOP,IMMED_DATA,2,COMP_ALL,SKIP_GRTR    ;PLAY if Equal
00079A 1AFF 0002          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,COUNT_LOOP,2,COMP_ALL
                      02291                 BRANCH_TO       CH15SC0_PLAY_DRYER6
                          M         
                          M         if      (CH15SC0_PLAY_DRYER6-SKEME_BASE) > 0xFFF            ;check branch size in SCHEME
                          M                 error   CH15SC0_PLAY_DRYER6 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00079E BEC7               M                 DB      CMD_GOTO_SND + ((high (CH15SC0_PLAY_DRYER6-SKEME_BASE)) & 0x0F) , low (CH15SC0_P
                          M         endif
                          M                 
                      02292         MASK_COMPARE COUNT_LOOP,IMMED_DATA,3,COMP_ALL,SKIP_GRTR    ;PLAY if Equal
0007A0 1AFF 0003          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,COUNT_LOOP,3,COMP_ALL
                      02293                 BRANCH_TO       CH15SC0_PLAY_DRYER7
                          M         
                          M         if      (CH15SC0_PLAY_DRYER7-SKEME_BASE) > 0xFFF            ;check branch size in SCHEME
                          M                 error   CH15SC0_PLAY_DRYER7 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0007A4 C4C7               M                 DB      CMD_GOTO_SND + ((high (CH15SC0_PLAY_DRYER7-SKEME_BASE)) & 0x0F) , low (CH15SC0_P
                          M         endif
                          M                 
                      02294         MASK_COMPARE COUNT_LOOP,IMMED_DATA,4,COMP_ALL,SKIP_GRTR    ;PLAY if Equal
0007A6 1AFF 0004          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,COUNT_LOOP,4,COMP_ALL
                      02295                 BRANCH_TO       CH15SC0_PLAY_DRYER8
                          M         
                          M         if      (CH15SC0_PLAY_DRYER8-SKEME_BASE) > 0xFFF            ;check branch size in SCHEME
                          M                 error   CH15SC0_PLAY_DRYER8 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0007AA CAC7               M                 DB      CMD_GOTO_SND + ((high (CH15SC0_PLAY_DRYER8-SKEME_BASE)) & 0x0F) , low (CH15SC0_P
                          M         endif
                          M                 
                      02296         ;MASK_COMPARE COUNT_LOOP,IMMED_DATA,5,COMP_ALL,SKIP_GRTR    ;PLAY if Equal
                      02297         ;       BRANCH_TO       CH15SC0_PLAY_DRYER9
                      02298                 
0007AC                02299 CH15SC0_PLAY_DRYER10
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 78
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02300         PLAY    HNDL_SC0_AIR_DRYER10,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
0007AC 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AIR_DRYER10 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER 
0007AE 2400               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_AIR_DRYER10 & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      02301         BRANCH_TO       CH15SC0_DRYER_LOOPER
                          M         
                          M         if      (CH15SC0_DRYER_LOOPER-SKEME_BASE) > 0xFFF           ;check branch size in SCHEME
                          M                 error   CH15SC0_DRYER_LOOPER range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0007B0 D4C7               M                 DB      CMD_GOTO_SND + ((high (CH15SC0_DRYER_LOOPER-SKEME_BASE)) & 0x0F) , low (CH15SC0_
                          M         endif
                          M                 
0007B2                02302 CH15SC0_PLAY_DRYER1
                      02303         PLAY    HNDL_SC0_AIR_DRYER1,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
0007B2 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AIR_DRYER1 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER B
0007B4 1B00               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_AIR_DRYER1 & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      02304         BRANCH_TO       CH15SC0_DRYER_LOOPER
                          M         
                          M         if      (CH15SC0_DRYER_LOOPER-SKEME_BASE) > 0xFFF           ;check branch size in SCHEME
                          M                 error   CH15SC0_DRYER_LOOPER range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0007B6 D4C7               M                 DB      CMD_GOTO_SND + ((high (CH15SC0_DRYER_LOOPER-SKEME_BASE)) & 0x0F) , low (CH15SC0_
                          M         endif
                          M                 
0007B8                02305 CH15SC0_PLAY_DRYER5
                      02306         PLAY    HNDL_SC0_AIR_DRYER5,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
0007B8 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AIR_DRYER5 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER B
0007BA 1F00               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_AIR_DRYER5 & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      02307         BRANCH_TO       CH15SC0_DRYER_LOOPER
                          M         
                          M         if      (CH15SC0_DRYER_LOOPER-SKEME_BASE) > 0xFFF           ;check branch size in SCHEME
                          M                 error   CH15SC0_DRYER_LOOPER range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0007BC D4C7               M                 DB      CMD_GOTO_SND + ((high (CH15SC0_DRYER_LOOPER-SKEME_BASE)) & 0x0F) , low (CH15SC0_
                          M         endif
                          M                 
0007BE                02308 CH15SC0_PLAY_DRYER6
                      02309         PLAY    HNDL_SC0_AIR_DRYER6,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
0007BE 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AIR_DRYER6 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER B
0007C0 2000               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_AIR_DRYER6 & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      02310         BRANCH_TO       CH15SC0_DRYER_LOOPER
                          M         
                          M         if      (CH15SC0_DRYER_LOOPER-SKEME_BASE) > 0xFFF           ;check branch size in SCHEME
                          M                 error   CH15SC0_DRYER_LOOPER range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0007C2 D4C7               M                 DB      CMD_GOTO_SND + ((high (CH15SC0_DRYER_LOOPER-SKEME_BASE)) & 0x0F) , low (CH15SC0_
                          M         endif
                          M                 
0007C4                02311 CH15SC0_PLAY_DRYER7
                      02312         PLAY    HNDL_SC0_AIR_DRYER7,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
0007C4 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AIR_DRYER7 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER B
0007C6 2100               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_AIR_DRYER7 & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      02313         BRANCH_TO       CH15SC0_DRYER_LOOPER
                          M         
                          M         if      (CH15SC0_DRYER_LOOPER-SKEME_BASE) > 0xFFF           ;check branch size in SCHEME
                          M                 error   CH15SC0_DRYER_LOOPER range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0007C8 D4C7               M                 DB      CMD_GOTO_SND + ((high (CH15SC0_DRYER_LOOPER-SKEME_BASE)) & 0x0F) , low (CH15SC0_
                          M         endif
                          M                 
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 79
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0007CA                02314 CH15SC0_PLAY_DRYER8
                      02315         PLAY    HNDL_SC0_AIR_DRYER8,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
0007CA 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AIR_DRYER8 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER B
0007CC 2200               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_AIR_DRYER8 & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      02316         BRANCH_TO       CH15SC0_DRYER_LOOPER
                          M         
                          M         if      (CH15SC0_DRYER_LOOPER-SKEME_BASE) > 0xFFF           ;check branch size in SCHEME
                          M                 error   CH15SC0_DRYER_LOOPER range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0007CE D4C7               M                 DB      CMD_GOTO_SND + ((high (CH15SC0_DRYER_LOOPER-SKEME_BASE)) & 0x0F) , low (CH15SC0_
                          M         endif
                          M                 
0007D0                02317 CH15SC0_PLAY_DRYER9
                      02318         PLAY    HNDL_SC0_AIR_DRYER9,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
0007D0 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AIR_DRYER9 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER B
0007D2 2300               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_AIR_DRYER9 & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      02319         
0007D4                02320 CH15SC0_DRYER_LOOPER
                      02321         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_DRYER_VOLUME,SCALE_E
0007D4 80E1 0EAD          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_DRYER_VOLUME,SCALE_E
                      02322 
                      02323         ;LOOP 8 TIMES:
                      02324         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+COUNT_LOOP,+0x01,9   ;increment
0007D8 BAE6 0901          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+COUNT_LOOP,+0x01,9
                      02325         ;max loop reset
                      02326         MASK_COMPARE COUNT_LOOP,IMMED_DATA,0x10,COMP_ALL,SKIP_LESS
0007DC 1AFE 0010          M                 DB      CMD_MASK_COMPARE+SKIP_LESS+IMMED_DATA,COUNT_LOOP,0x10,COMP_ALL
                      02327                 LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_LODE+COUNT_LOOP,0,0              ;CLEAR 
0007E0 1AE6 0000          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_LODE+COUNT_LOOP,0,0
                      02328         ;BRANCH_TO      CH15SC0_DRYER_LOOPER2
                      02329         PLAY    HNDL_SC0_AIR_DRYER3,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
0007E4 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AIR_DRYER3 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER B
0007E6 1D00               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_AIR_DRYER3 & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      02330 
0007E8                02331 CH15SC0_DRYER_LOOPER2
                      02332         MASK_COMPARE    VARY_LOAD,IMMED_DATA,SCALE_MID,COMP_ALL,SKIP_GRTR               ;SKIP_LESSSKIP_G
0007E8 1CFF 000C          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,VARY_LOAD,SCALE_MID,COMP_ALL
                      02333                 BRANCH_TO       CH15SC0_PLAY_DRYER2                     ;Skipped when ARG1 >= ARG2
                          M         
                          M         if      (CH15SC0_PLAY_DRYER2-SKEME_BASE) > 0xFFF            ;check branch size in SCHEME
                          M                 error   CH15SC0_PLAY_DRYER2 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0007EC F4C7               M                 DB      CMD_GOTO_SND + ((high (CH15SC0_PLAY_DRYER2-SKEME_BASE)) & 0x0F) , low (CH15SC0_P
                          M         endif
                          M                 
                      02334         ;LOAD_MODIFIER  MTYPE_WORK_IMMED,FMATH_LODE+COUNT_LOOP,0,0              ;CLEAR 
                      02335         PLAY    HNDL_SC0_AIR_DRYER4,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
0007EE 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AIR_DRYER4 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER B
0007F0 1E00               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_AIR_DRYER4 & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      02336         END_SOUND
0007F2 0000               M                 DB      CMD_END_SND,0
                      02337 
0007F4                02338 CH15SC0_PLAY_DRYER2
                      02339         PLAY    HNDL_SC0_AIR_DRYER2,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
0007F4 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AIR_DRYER2 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER B
0007F6 1C00               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_AIR_DRYER2 & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      02340         ;LOAD_MODIFIER  MTYPE_WORK_IMMED,FMATH_LODE+COUNT_LOOP,0,0              ;CLEAR 
                      02341 
                      02342         END_SOUND
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 80
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0007F8 0000               M                 DB      CMD_END_SND,0
                      02343 
                      02344         
                      02345 ;----------------------------------------------------
                      02346 ;       TIMED CYCLE AIR SOUNDS (TIMER SCAT4) 
                      02347 ;----SCATTER chnL 1 is automatic AIR  DRYER at END of COMPRESSOR cycle on CHNL3
                      02348 ;----------------------------------------------------
                      02349         INITIATE_SOUND  TRIG_SCAT4,NOT_TRIG     ;B phase of SCATTER4    ;NORMAL         ;RUN_WHILE_TRIG 
0007FA E490               M                 DB      CMD_INITIATE_SND + ((NOT_TRIG) & 0x07), TRIG_SCAT4 +((NOT_TRIG) & 0x80)
  00000013                M ICNT += 1
                          M 
                      02350         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+AIR_PRESS,-0x12,0   ;decrease
0007FC BDE6 00EE          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+AIR_PRESS,-0x12,0
                      02351         MASK_COMPARE    VARY_LOAD,IMMED_DATA,8,COMP_ALL,SKIP_GRTR               ;SKIP
000800 1CFF 0008          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,VARY_LOAD,8,COMP_ALL
                      02352                 BRANCH_TO       CH15SC0_PLAY_DRYER                      
                          M         
                          M         if      (CH15SC0_PLAY_DRYER-SKEME_BASE) > 0xFFF             ;check branch size in SCHEME
                          M                 error   CH15SC0_PLAY_DRYER range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000804 74C7               M                 DB      CMD_GOTO_SND + ((high (CH15SC0_PLAY_DRYER-SKEME_BASE)) & 0x0F) , low (CH15SC0_PL
                          M         endif
                          M                 
                      02353         END_SOUND
000806 0000               M                 DB      CMD_END_SND,0
                      02354 
                      02355 ;;;;;;;;;;;;;;;;;;BRAKING HERE ;;;;;;;;;;;;;;;;;;;;;;;;;
                      02356 ;-------------------------------------------------
                      02357 ;  FUNCTION KEY SF10 - BRAKE SOUNDS !(INTERRUPTABLE)
                      02358 ;       continuous when moving repeat version
                      02359 ;       moved back to CH3 7/26/17 to make brake to stop work consistently
                      02360 ;-------------------------------------------------
                      02361         INITIATE_SOUND TRIG_IBRAKES_ON,NORMAL   ;;BRAKE +NO_PREEMPT_TRIG        ; Play brake sound when 
000808 1990               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), TRIG_IBRAKES_ON +((NORMAL) & 0x80)
  00000014                M ICNT += 1
                          M 
                      02362         ;Set AUTOMATIC BRAKING INTERLOCK On =1
                      02363         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_AND+USER_INTLK_BITS,~AUTO_BRAKE_MASK2,MERGE_ALL_MASK     
00080A 3EE6 00FB          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_AND+USER_INTLK_BITS,~AUTO_BRAKE_MA
                      02364 
                      02365         MASK_COMPARE    WORK_STATUS_BITS,IMMED_DATA,WKSB_INTERLOCK_MASK,~WKSB_INTERLOCK_MASK,SKIP_SAME ;
00080E 07FC DF20          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,WORK_STATUS_BITS,WKSB_INTERLOCK_MASK,~WKSB
                      02366                 END_SOUND        ;interlock is 00, freeze               ;Skipped when ARG1 = ARG2
000812 0000               M                 DB      CMD_END_SND,0
                      02367 
                      02368         LOAD_MODIFIER MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_LETOFF_VOLUME,SCALE_B
000814 80E1 0BB5          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_LETOFF_VOLUME,SCALE_B
                      02369         PLAY    HNDL_SC0_BRAKE_BAIL_OFFON,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
000818 3C40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_BRAKE_BAIL_OFFON & 0x3F)+((no_loop
                          M         list
                      02370 
                      02371         SKIP_ON_TRIGGER TRIG_TRUE,TRIG_MOVING           ;skip when moving...
00081A 0E05               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_TRUE & 0x03), TRIG_MOVING 
                      02372                 BRANCH_TO       CH3SC0_NO_MOVING_BRAKE
                          M         
                          M         if      (CH3SC0_NO_MOVING_BRAKE-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH3SC0_NO_MOVING_BRAKE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00081C 7CC8               M                 DB      CMD_GOTO_SND + ((high (CH3SC0_NO_MOVING_BRAKE-SKEME_BASE)) & 0x0F) , low (CH3SC0
                          M         endif
                          M                 
                      02373         ;BRANCH_TO      CH3SC0_MOVING_BRAKE
                      02374         
                      02375         ;=====================  Sometimes WORK_SPEED does NOT reset to zero when the servo is not
                      02376         ;                                               moving. Neither will TRIG_MOVING be any differen
                      02377         ;                                               So, care must be taken to not have brake sounds 
                      02378         ;                                               standstill...
                      02379         ;=====================
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 81
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00081E                02380 CH3SC0_MOVING_BRAKE
                      02381                 
                      02382         LOAD_MODIFIER MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_BRAKE_VOLUME,SCALE_B
00081E 80E1 0B8F          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_BRAKE_VOLUME,SCALE_B
                      02383         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_MOVING
000822 0E04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_MOVING 
                      02384                 PLAY    HNDL_SC0_BRAKE_SET,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
000824 3940               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_BRAKE_SET & 0x3F)+((no_loop<<6)&0x
                          M         list
                      02385                                                                           
                      02386         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+AIR_PRESS,-0x011,0   ;decrease
000826 BDE6 00EF          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+AIR_PRESS,-0x011,0
                      02387         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_BRAKE_VOLUME,SCALE_F
00082A 80E1 0F8F          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_BRAKE_VOLUME,SCALE_F
                      02388         PLAY    HNDL_SC0_ENGINE_BRAKE_BEGIN,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
00082E 3240               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_ENGINE_BRAKE_BEGIN & 0x3F)+((no_lo
                          M         list
                      02389         PLAY    HNDL_SC0_ENGINE_BRAKE_LOOP1,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
000830 3340               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_ENGINE_BRAKE_LOOP1 & 0x3F)+((no_lo
                          M         list
                      02390         
000832                02391 CH3SC0_SERVO_LOCK       
                      02392         ;bit3 disable DO NOT USE ENGINE BRAKE FEATURE -- Operator must slow engine...
                      02393         MASK_COMPARE    SCV_FEATURE3_DISABLE,IMMED_DATA,0x01,COMP_bit3,SKIP_SAME                ;SKIP_LE
000832 BAFC F701          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_FEATURE3_DISABLE,0x01,COMP_bit3
                      02394                 BRANCH_TO       CH3SC0_BRAKE_TO_STOP                    ;Disabled       
                          M         
                          M         if      (CH3SC0_BRAKE_TO_STOP-SKEME_BASE) > 0xFFF           ;check branch size in SCHEME
                          M                 error   CH3SC0_BRAKE_TO_STOP range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000836 5CC8               M                 DB      CMD_GOTO_SND + ((high (CH3SC0_BRAKE_TO_STOP-SKEME_BASE)) & 0x0F) , low (CH3SC0_B
                          M         endif
                          M                 
                      02395 
                      02396         SKIP_ON_TRIGGER TRIG_TRUE,TRIG_MOVING           ;skip when moving...
000838 0E05               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_TRUE & 0x03), TRIG_MOVING 
                      02397                 BRANCH_TO       CH3SC0_BRAKE_LOCK
                          M         
                          M         if      (CH3SC0_BRAKE_LOCK-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH3SC0_BRAKE_LOCK range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00083A 3CC8               M                 DB      CMD_GOTO_SND + ((high (CH3SC0_BRAKE_LOCK-SKEME_BASE)) & 0x0F) , low (CH3SC0_BRAK
                          M         endif
                          M                 
                      02398         
00083C                02399 CH3SC0_BRAKE_LOCK
                      02400         ;APPLY ENGINE BRAKE HERE:
                      02401         PLAY    HNDL_SC0_ENGINE_BRAKE_LOOP1,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
00083C 3340               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_ENGINE_BRAKE_LOOP1 & 0x3F)+((no_lo
                          M         list
                      02402         PLAY    HNDL_SC0_ENGINE_BRAKE_LOOP2,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
00083E 3440               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_ENGINE_BRAKE_LOOP2 & 0x3F)+((no_lo
                          M         list
                      02403 
                      02404         ;SERVO_DISABLE
                      02405         ;********************* THE MOTOR WILL NOT RUN UNTIL AFTER BRAKE IS RELEASED ********************
                      02406         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_AND+WORK_STATUS_BITS,~WKSB_RUN_MASK,MERGE_ALL_MASK       
000840 27E6 00FB          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_AND+WORK_STATUS_BITS,~WKSB_RUN_MAS
                      02407         ;;;;;;;;;;;;;;;WKSB_RUN_BIT     EQU     2               ;0= stop motor PWM, non-primemover sound
                      02408 ;---
000844                02409 CH3SC0_BRAKE_STOPPING   
                      02410         PLAY    HNDL_SC0_ENGINE_BRAKE_LOOP1,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
000844 3340               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_ENGINE_BRAKE_LOOP1 & 0x3F)+((no_lo
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 82
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         list
                      02411         SKIP_ON_TRIGGER TRIG_TRUE,TRIG_MOVING           ;skip when moving...
000846 0E05               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_TRUE & 0x03), TRIG_MOVING 
                      02412                 BRANCH_TO       CH3SC0_BRAKE_STOPPED 
                          M         
                          M         if      (CH3SC0_BRAKE_STOPPED-SKEME_BASE) > 0xFFF           ;check branch size in SCHEME
                          M                 error   CH3SC0_BRAKE_STOPPED range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000848 74C8               M                 DB      CMD_GOTO_SND + ((high (CH3SC0_BRAKE_STOPPED-SKEME_BASE)) & 0x0F) , low (CH3SC0_B
                          M         endif
                          M                 
                      02413         ;improve by motor lock and real brake slow down to stop (todo 3/8/17)   johnm
                      02414         MASK_COMPARE    WORK_SPEED,TARGET_DATA,0x15,COMP_ALL,SKIP_LESS          ; Check if slowed >9
00084A 00FA 0015          M                 DB      CMD_MASK_COMPARE+SKIP_LESS+TARGET_DATA,WORK_SPEED,0x15,COMP_ALL
                      02415                 BRANCH_TO       CH3SC0_BRAKE_STOPPING2
                          M         
                          M         if      (CH3SC0_BRAKE_STOPPING2-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH3SC0_BRAKE_STOPPING2 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00084E 52C8               M                 DB      CMD_GOTO_SND + ((high (CH3SC0_BRAKE_STOPPING2-SKEME_BASE)) & 0x0F) , low (CH3SC0
                          M         endif
                          M                 
                      02416         BRANCH_TO       CH3SC0_BRAKE_STOPPED 
                          M         
                          M         if      (CH3SC0_BRAKE_STOPPED-SKEME_BASE) > 0xFFF           ;check branch size in SCHEME
                          M                 error   CH3SC0_BRAKE_STOPPED range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000850 74C8               M                 DB      CMD_GOTO_SND + ((high (CH3SC0_BRAKE_STOPPED-SKEME_BASE)) & 0x0F) , low (CH3SC0_B
                          M         endif
                          M                 
                      02417         
000852                02418 CH3SC0_BRAKE_STOPPING2
                      02419         MASK_COMPARE    WORK_SPEED,TARGET_DATA,0x14,COMP_ALL,SKIP_GRTR          ; Check if slowed >9
000852 00FB 0014          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+TARGET_DATA,WORK_SPEED,0x14,COMP_ALL
                      02420                 BRANCH_TO       CH3SC0_BRAKE_STOPPED
                          M         
                          M         if      (CH3SC0_BRAKE_STOPPED-SKEME_BASE) > 0xFFF           ;check branch size in SCHEME
                          M                 error   CH3SC0_BRAKE_STOPPED range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000856 74C8               M                 DB      CMD_GOTO_SND + ((high (CH3SC0_BRAKE_STOPPED-SKEME_BASE)) & 0x0F) , low (CH3SC0_B
                          M         endif
                          M                 
                      02421         SKIP_ON_TRIGGER TRIG_TRUE,TRIG_MOVING           ;skip when moving...
000858 0E05               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_TRUE & 0x03), TRIG_MOVING 
                      02422                 BRANCH_TO       CH3SC0_BRAKE_STOPPED 
                          M         
                          M         if      (CH3SC0_BRAKE_STOPPED-SKEME_BASE) > 0xFFF           ;check branch size in SCHEME
                          M                 error   CH3SC0_BRAKE_STOPPED range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00085A 74C8               M                 DB      CMD_GOTO_SND + ((high (CH3SC0_BRAKE_STOPPED-SKEME_BASE)) & 0x0F) , low (CH3SC0_B
                          M         endif
                          M                 
                      02423                 
00085C                02424 CH3SC0_BRAKE_TO_STOP
                      02425         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+AIR_PRESS,-0x12,0   ;decrease
00085C BDE6 00EE          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+AIR_PRESS,-0x12,0
                      02426 
                      02427         LOAD_MODIFIER   MTYPE_PITCH,ANALOG_PITCH_MODIFY+WORK_SPEED,MAXP_DIESEL,DITHERP_DIESEL           
000860 A0E2 003E          M                 DB      CMD_LOAD_MODIFY+(MTYPE_PITCH&0x0F),ANALOG_PITCH_MODIFY+WORK_SPEED,MAXP_DIESEL,DI
                      02428         SKIP_ON_TRIGGER TRIG_TRUE,TRIG_MOVING   
000864 0E05               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_TRUE & 0x03), TRIG_MOVING 
                      02429                 BRANCH_TO       CH3SC0_BRAKE_STOPPED 
                          M         
                          M         if      (CH3SC0_BRAKE_STOPPED-SKEME_BASE) > 0xFFF           ;check branch size in SCHEME
                          M                 error   CH3SC0_BRAKE_STOPPED range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000866 74C8               M                 DB      CMD_GOTO_SND + ((high (CH3SC0_BRAKE_STOPPED-SKEME_BASE)) & 0x0F) , low (CH3SC0_B
                          M         endif
                          M                 
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 83
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02430                 
                      02431         PLAY    HNDL_SC0_ENGINE_BRAKE_LOOP2,no_loop,loop_INVERT
                          M         list ;2 byte PLAY  [HANDLE]
000868 3448               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_INVERT, (HNDL_SC0_ENGINE_BRAKE_LOOP2 & 0x3F)+((no_
                          M         list
                      02432         PLAY    HNDL_SC0_ENGINE_BRAKE_LOOP1,no_loop,loop_INVERT
                          M         list ;2 byte PLAY  [HANDLE]
00086A 3348               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_INVERT, (HNDL_SC0_ENGINE_BRAKE_LOOP1 & 0x3F)+((no_
                          M         list
                      02433                 
                      02434         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_IBRAKES_ON
00086C 1904               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_IBRAKES_ON 
                      02435                 BRANCH_TO       CH3SC0_NO_MOVING_BRAKE 
                          M         
                          M         if      (CH3SC0_NO_MOVING_BRAKE-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH3SC0_NO_MOVING_BRAKE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00086E 7CC8               M                 DB      CMD_GOTO_SND + ((high (CH3SC0_NO_MOVING_BRAKE-SKEME_BASE)) & 0x0F) , low (CH3SC0
                          M         endif
                          M                 
                      02436  
                      02437         ;loop here for long stops
                      02438         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_MOVING  
000870 0E04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_MOVING 
                      02439                 BRANCH_TO       CH3SC0_BRAKE_TO_STOP    ;LOOP UNTIL SLOWED TO NEAR STOP..........
                          M         
                          M         if      (CH3SC0_BRAKE_TO_STOP-SKEME_BASE) > 0xFFF           ;check branch size in SCHEME
                          M                 error   CH3SC0_BRAKE_TO_STOP range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000872 5CC8               M                 DB      CMD_GOTO_SND + ((high (CH3SC0_BRAKE_TO_STOP-SKEME_BASE)) & 0x0F) , low (CH3SC0_B
                          M         endif
                          M                 
                      02440                 
000874                02441 CH3SC0_BRAKE_STOPPED
                      02442         PLAY    HNDL_SC0_ENGINE_BRAKE_END,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
000874 3540               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_ENGINE_BRAKE_END & 0x3F)+((no_loop
                          M         list
                      02443         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+AIR_PRESS,-0x15,0   ;decrease
000876 BDE6 00EB          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+AIR_PRESS,-0x15,0
                      02444 
                      02445         PLAY    HNDL_SC0_BRAKE_SET,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
00087A 3940               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_BRAKE_SET & 0x3F)+((no_loop<<6)&0x
                          M         list
                      02446 
00087C                02447 CH3SC0_NO_MOVING_BRAKE                            
00087C                02448 CH3SC0_NO_SERVO_LOCK
                      02449         ;Set AUTOMATIC BRAKING INTERLOCK On =1
                      02450         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_AND+USER_INTLK_BITS,~AUTO_BRAKE_MASK2,MERGE_ALL_MASK     
00087C 3EE6 00FB          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_AND+USER_INTLK_BITS,~AUTO_BRAKE_MA
                      02451 
                      02452         ;let underflow:
                      02453         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+VARY_LOAD,-SCALE_INCR_4,SCALE_MAX        ;revised
000880 BCE6 0FFC          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+VARY_LOAD,-SCALE_INCR_4,
                      02454         MASK_COMPARE    VARY_LOAD,IMMED_DATA,SCV_LOAD_MIN,COMP_ALL,SKIP_GRTR            ;SKIP
000884 1CFF 009E          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,VARY_LOAD,SCV_LOAD_MIN,COMP_ALL
                      02455                 BRANCH_TO       CH3SC0_NO_UNDERFLOW_LOCK
                          M         
                          M         if      (CH3SC0_NO_UNDERFLOW_LOCK-SKEME_BASE) > 0xFFF       ;check branch size in SCHEME
                          M                 error   CH3SC0_NO_UNDERFLOW_LOCK range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000888 8EC8               M                 DB      CMD_GOTO_SND + ((high (CH3SC0_NO_UNDERFLOW_LOCK-SKEME_BASE)) & 0x0F) , low (CH3S
                          M         endif
                          M                 
00088A                02456 CH3SC0_FIX_UNDERFLOW_LOCK
                      02457         LOAD_MODIFIER   MTYPE_WORK_IMMED,VARY_LOAD,SCV_LOAD_MIN,MERGE_ALL_MASK  ;reset to min load
00088A 1CE6 009E          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),VARY_LOAD,SCV_LOAD_MIN,MERGE_ALL_MASK
                      02458         
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 84
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00088E                02459 CH3SC0_NO_UNDERFLOW_LOCK
                      02460         END_SOUND
00088E 0000               M                 DB      CMD_END_SND,0
                      02461          
                      02462          
                      02463           ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                      02464         ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                      02465         ;       THIS ROUTINE IS CH3_ braking (NOT INTERRUPTABLE)
                      02466         ;  FUNCTION KEY SF10 - BRAKE SOUNDS !
                      02467         ;continuous when moving repeat version
                      02468         ;-------------------------------------------------
                      02469         INITIATE_SOUND TRIG_IBRAKES_ON,NOT_TRIG+NO_PREEMPT_TRIG         ; Play brake RELEASE when BRAKE 
000890 9994               M                 DB      CMD_INITIATE_SND + ((NOT_TRIG+NO_PREEMPT_TRIG) & 0x07), TRIG_IBRAKES_ON +((NOT_T
  00000015                M ICNT += 1
                          M 
                      02470         ;---------------------------------------------
                      02471         ; toots sound triggered by BRAKE OFF
                      02472         LOAD_MODIFIER MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_LETOFF_VOLUME,SCALE_B
000892 80E1 0BB5          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_LETOFF_VOLUME,SCALE_B
                      02473         PLAY    HNDL_SC0_BRAKE_BAIL_OFFOFF,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
000896 3B40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_BRAKE_BAIL_OFFOFF & 0x3F)+((no_loo
                          M         list
                      02474         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+AIR_PRESS,-0x17,0   ;decrease
000898 BDE6 00E9          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+AIR_PRESS,-0x17,0
                      02475 
                      02476         MASK_COMPARE    SCV_FEATURE_DISABLE,IMMED_DATA,0x00,COMP_bit4,SKIP_SAME         ;SKIP_LESSSKIP_G
00089C B8FC EF00          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_FEATURE_DISABLE,0x00,COMP_bit4
                      02477                 BRANCH_TO       CH3SC0_EXIT_TOOT        
                          M         
                          M         if      (CH3SC0_EXIT_TOOT-SKEME_BASE) > 0xFFF               ;check branch size in SCHEME
                          M                 error   CH3SC0_EXIT_TOOT range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0008A0 FAC8               M                 DB      CMD_GOTO_SND + ((high (CH3SC0_EXIT_TOOT-SKEME_BASE)) & 0x0F) , low (CH3SC0_EXIT_
                          M         endif
                          M                 
                      02478         
                      02479         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_UNCOUPLE_ON             ; Skip if SF3 is not currently ON -- TOO
0008A2 1804               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_UNCOUPLE_ON 
                      02480                 BRANCH_TO       CH3SC0_EXIT_TOOT        
                          M         
                          M         if      (CH3SC0_EXIT_TOOT-SKEME_BASE) > 0xFFF               ;check branch size in SCHEME
                          M                 error   CH3SC0_EXIT_TOOT range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0008A4 FAC8               M                 DB      CMD_GOTO_SND + ((high (CH3SC0_EXIT_TOOT-SKEME_BASE)) & 0x0F) , low (CH3SC0_EXIT_
                          M         endif
                          M                 
                      02481                 
                      02482         MASK_COMPARE WORK_STATUS_BITS,IMMED_DATA,0x02,~WKSB_DIRNOW_MASK,SKIP_SAME               ; Skip t
0008A6 07FC FD02          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,WORK_STATUS_BITS,0x02,~WKSB_DIRNOW_MASK
                      02483                 BRANCH_TO       CH3SC0_BACKUP
                          M         
                          M         if      (CH3SC0_BACKUP-SKEME_BASE) > 0xFFF                  ;check branch size in SCHEME
                          M                 error   CH3SC0_BACKUP range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0008AA D4C8               M                 DB      CMD_GOTO_SND + ((high (CH3SC0_BACKUP-SKEME_BASE)) & 0x0F) , low (CH3SC0_BACKUP-S
                          M         endif
                          M                 
                      02484                 
                      02485         ;play isolation/reverser:
                      02486         LOAD_MODIFIER MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_POWER_REVERSER_VOLUME,SCALE_B
0008AC 80E1 0BB4          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_POWER_REVERSER_VOLUME,SC
                      02487         PLAY    HNDL_SC0_ISOLATION_REVERSE_REV,no_loop,loop_STD         
                          M         list ;2 byte PLAY  [HANDLE]
0008B0 3740               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_ISOLATION_REVERSE_REV & 0x3F)+((no
                          M         list
                      02488         ;               TWO_TOOTS
                      02489         ;---------------------------------------------
                      02490         ;  Forward is two toots                
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 85
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02491         ;---------------------------------------------
                      02492         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_HORNWHISTLE_VOLUME,SCALE_F             ;Set con
0008B2 80E1 0F8D          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_HORNWHISTLE_VOLUME,SCALE
                      02493                 ;HORN SELECTED CV150:
                      02494         ;                       Decimal HEX                     Bit
                      02495         ;                                                               7654 3210
                      02496         ;       1               0               0x00            0000 0000
                      02497         ;       2               1               0x01            0000 0001
                      02498         ;       3               2               0x02            0000 0010
                      02499         ;       4               3               0x03            0000 0011
                      02500         ;       5               4               0x04            0000 0100
                      02501         ;               TOOT_SELECT
                      02502                                                 
0008B6                02503 CH13SC0_TOOT_SELECT     
                      02504 ;HORN choices 5-8
                      02505         ;MASK_COMPARE   SCV_HORNWHISTLE_SELECT,IMMED_DATA,0x00,COMP_bit3,SKIP_SAME              ;SKIP_LE
                      02506         ;       BRANCH_TO               CH13SC0_TOOT_1XXX
                      02507         ;MASK_COMPARE   SCV_HORNWHISTLE_SELECT,IMMED_DATA,0x00,COMP_bit2,SKIP_SAME              ;SKIP_LE
                      02508         ;       BRANCH_TO               CH13SC0_TOOT_1XX
                      02509                 
                      02510 ;HORN choices 0-4
0008B6                02511 CH13SC0_TOOT_0XX
                      02512         MASK_COMPARE    SCV_HORNWHISTLE_SELECT,IMMED_DATA,0x00,COMP_bit1,SKIP_SAME              ;SKIP_LE
0008B6 95FC FD00          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_HORNWHISTLE_SELECT,0x00,COMP_bit1
                      02513                 BRANCH_TO               CH13SC0_TOOT_01X
                          M         
                          M         if      (CH13SC0_TOOT_01X-SKEME_BASE) > 0xFFF               ;check branch size in SCHEME
                          M                 error   CH13SC0_TOOT_01X range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0008BA D4C8               M                 DB      CMD_GOTO_SND + ((high (CH13SC0_TOOT_01X-SKEME_BASE)) & 0x0F) , low (CH13SC0_TOOT
                          M         endif
                          M                 
                      02514 
                      02515 ;DEMO           bit1 disable DEMO ALL HornS/whistles Enabled=on=0 =2=disabled
                      02516         MASK_COMPARE    SCV_FEATURE3_DISABLE,IMMED_DATA,0x00,COMP_bit1,SKIP_SAME                ;SKIP_LE
0008BC BAFC FD00          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_FEATURE3_DISABLE,0x00,COMP_bit1
                      02517                 BRANCH_TO       CH13SC0_TOOT_000                        ;Disabled       
                          M         
                          M         if      (CH13SC0_TOOT_000-SKEME_BASE) > 0xFFF               ;check branch size in SCHEME
                          M                 error   CH13SC0_TOOT_000 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0008C0 C8C8               M                 DB      CMD_GOTO_SND + ((high (CH13SC0_TOOT_000-SKEME_BASE)) & 0x0F) , low (CH13SC0_TOOT
                          M         endif
                          M                 
                      02518 
0008C2                02519 CH13SC0_TOOT_00X
                      02520         MASK_COMPARE    SCV_HORNWHISTLE_SELECT,IMMED_DATA,0x00,COMP_bit0,SKIP_SAME              ;SKIP_LE
0008C2 95FC FE00          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_HORNWHISTLE_SELECT,0x00,COMP_bit0
                      02521                 BRANCH_TO               CH13SC0_TOOT_001
                          M         
                          M         if      (CH13SC0_TOOT_001-SKEME_BASE) > 0xFFF               ;check branch size in SCHEME
                          M                 error   CH13SC0_TOOT_001 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0008C6 CEC8               M                 DB      CMD_GOTO_SND + ((high (CH13SC0_TOOT_001-SKEME_BASE)) & 0x0F) , low (CH13SC0_TOOT
                          M         endif
                          M                 
                      02522                 
                      02523 ;DEFAULT HORN:  
0008C8                02524 CH13SC0_TOOT_000
                      02525         PLAY    HNDL_SC0_HORN0_SHORT,no_loop,loop_STD                           
                          M         list ;2 byte PLAY  [HANDLE]
0008C8 2A40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_HORN0_SHORT & 0x3F)+((no_loop<<6)&
                          M         list
                      02526         PLAY    HNDL_SC0_HORN0_SHORT,no_loop,loop_STD                           
                          M         list ;2 byte PLAY  [HANDLE]
0008CA 2A40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_HORN0_SHORT & 0x3F)+((no_loop<<6)&
                          M         list
                      02527         BRANCH_TO       CH3SC0_EXIT_TOOT
                          M         
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 86
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         if      (CH3SC0_EXIT_TOOT-SKEME_BASE) > 0xFFF               ;check branch size in SCHEME
                          M                 error   CH3SC0_EXIT_TOOT range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0008CC FAC8               M                 DB      CMD_GOTO_SND + ((high (CH3SC0_EXIT_TOOT-SKEME_BASE)) & 0x0F) , low (CH3SC0_EXIT_
                          M         endif
                          M                 
                      02528         
0008CE                02529 CH13SC0_TOOT_001
                      02530         PLAY    HNDL_SC0_HORN1_SHORT,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
0008CE 2F40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_HORN1_SHORT & 0x3F)+((no_loop<<6)&
                          M         list
                      02531         PLAY    HNDL_SC0_HORN1_SHORT,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
0008D0 2F40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_HORN1_SHORT & 0x3F)+((no_loop<<6)&
                          M         list
                      02532         BRANCH_TO       CH3SC0_EXIT_TOOT
                          M         
                          M         if      (CH3SC0_EXIT_TOOT-SKEME_BASE) > 0xFFF               ;check branch size in SCHEME
                          M                 error   CH3SC0_EXIT_TOOT range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0008D2 FAC8               M                 DB      CMD_GOTO_SND + ((high (CH3SC0_EXIT_TOOT-SKEME_BASE)) & 0x0F) , low (CH3SC0_EXIT_
                          M         endif
                          M                 
                      02533  
0008D4                02534 CH13SC0_TOOT_01X
                      02535 
0008D4                02536 CH3SC0_BACKUP
                      02537         ;play isolation/reverser:
                      02538         LOAD_MODIFIER MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_POWER_REVERSER_VOLUME,SCALE_B
0008D4 80E1 0BB4          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_POWER_REVERSER_VOLUME,SC
                      02539         PLAY    HNDL_SC0_ISOLATION_REVERSE_REV,no_loop,loop_STD         
                          M         list ;2 byte PLAY  [HANDLE]
0008D8 3740               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_ISOLATION_REVERSE_REV & 0x3F)+((no
                          M         list
                      02540 
                      02541         ;---------------------------------------------
                      02542         ;  Reverse is three toots     SO, PLAY ONE AND BRANCH TO TWO           
                      02543         ;---------------------------------------------
                      02544         GENERATE_TRIGGER  TRIG_SAND_ON          ;sander under wheels for startup        
0008DA 1DB1               M                 DB      CMD_BLIP_TRIGGER, TRIG_SAND_ON 
                      02545         ;               ONE_TOOT
                      02546         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_HORNWHISTLE_VOLUME,SCALE_F             ;Set con
0008DC 80E1 0F8D          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_HORNWHISTLE_VOLUME,SCALE
                      02547         
                      02548         ;HORN choices 5-8
                      02549         ;MASK_COMPARE   SCV_HORNWHISTLE_SELECT,IMMED_DATA,0x00,COMP_bit3,SKIP_SAME              ;SKIP_LE
                      02550         ;       BRANCH_TO               CH13SC0_RTOOT_1XXX
                      02551         ;MASK_COMPARE   SCV_HORNWHISTLE_SELECT,IMMED_DATA,0x00,COMP_bit2,SKIP_SAME              ;SKIP_LE
                      02552         ;       BRANCH_TO               CH13SC0_RTOOT_1XX
                      02553                 
                      02554 ;HORN choices 0-4
0008E0                02555 CH13SC0_RTOOT_0XX
                      02556         MASK_COMPARE    SCV_HORNWHISTLE_SELECT,IMMED_DATA,0x00,COMP_bit1,SKIP_SAME              ;SKIP_LE
0008E0 95FC FD00          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_HORNWHISTLE_SELECT,0x00,COMP_bit1
                      02557                 BRANCH_TO               CH13SC0_RTOOT_01X
                          M         
                          M         if      (CH13SC0_RTOOT_01X-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH13SC0_RTOOT_01X range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0008E4 FAC8               M                 DB      CMD_GOTO_SND + ((high (CH13SC0_RTOOT_01X-SKEME_BASE)) & 0x0F) , low (CH13SC0_RTO
                          M         endif
                          M                 
                      02558 
                      02559 ;DEMO           bit1 disable DEMO ALL HornS/whistles Enabled=on=0 =2=disabled
                      02560         MASK_COMPARE    SCV_FEATURE3_DISABLE,IMMED_DATA,0x00,COMP_bit1,SKIP_SAME                ;SKIP_LE
0008E6 BAFC FD00          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_FEATURE3_DISABLE,0x00,COMP_bit1
                      02561                 BRANCH_TO       CH13SC0_RTOOT_000                       ;Disabled       
                          M         
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 87
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         if      (CH13SC0_RTOOT_000-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH13SC0_RTOOT_000 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0008EA F2C8               M                 DB      CMD_GOTO_SND + ((high (CH13SC0_RTOOT_000-SKEME_BASE)) & 0x0F) , low (CH13SC0_RTO
                          M         endif
                          M                 
                      02562 
0008EC                02563 CH13SC0_RTOOT_00X
                      02564         MASK_COMPARE    SCV_HORNWHISTLE_SELECT,IMMED_DATA,0x00,COMP_bit0,SKIP_SAME              ;SKIP_LE
0008EC 95FC FE00          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_HORNWHISTLE_SELECT,0x00,COMP_bit0
                      02565                 BRANCH_TO               CH13SC0_RTOOT_001
                          M         
                          M         if      (CH13SC0_RTOOT_001-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH13SC0_RTOOT_001 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0008F0 F6C8               M                 DB      CMD_GOTO_SND + ((high (CH13SC0_RTOOT_001-SKEME_BASE)) & 0x0F) , low (CH13SC0_RTO
                          M         endif
                          M                 
                      02566                 
                      02567 ;DEFAULT HORN:  
0008F2                02568 CH13SC0_RTOOT_000
                      02569         PLAY    HNDL_SC0_HORN0_SHORT,no_loop,loop_STD                           
                          M         list ;2 byte PLAY  [HANDLE]
0008F2 2A40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_HORN0_SHORT & 0x3F)+((no_loop<<6)&
                          M         list
                      02570         BRANCH_TO       CH13SC0_TOOT_000
                          M         
                          M         if      (CH13SC0_TOOT_000-SKEME_BASE) > 0xFFF               ;check branch size in SCHEME
                          M                 error   CH13SC0_TOOT_000 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0008F4 C8C8               M                 DB      CMD_GOTO_SND + ((high (CH13SC0_TOOT_000-SKEME_BASE)) & 0x0F) , low (CH13SC0_TOOT
                          M         endif
                          M                 
                      02571         
0008F6                02572 CH13SC0_RTOOT_001
                      02573         PLAY    HNDL_SC0_HORN1_SHORT,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
0008F6 2F40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_HORN1_SHORT & 0x3F)+((no_loop<<6)&
                          M         list
                      02574         BRANCH_TO       CH13SC0_TOOT_001
                          M         
                          M         if      (CH13SC0_TOOT_001-SKEME_BASE) > 0xFFF               ;check branch size in SCHEME
                          M                 error   CH13SC0_TOOT_001 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0008F8 CEC8               M                 DB      CMD_GOTO_SND + ((high (CH13SC0_TOOT_001-SKEME_BASE)) & 0x0F) , low (CH13SC0_TOOT
                          M         endif
                          M                 
                      02575  
0008FA                02576 CH13SC0_RTOOT_01X
                      02577 
0008FA                02578 CH3SC0_EXIT_TOOT
                      02579         LOAD_MODIFIER MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_LETOFF_VOLUME,SCALE_A
0008FA 80E1 0AB5          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_LETOFF_VOLUME,SCALE_A
                      02580         PLAY    HNDL_SC0_BRAKE_BAIL_OFFOFF,no_loop,loop_STD     
                          M         list ;2 byte PLAY  [HANDLE]
0008FE 3B40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_BRAKE_BAIL_OFFOFF & 0x3F)+((no_loo
                          M         list
                      02581         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+AIR_PRESS,-0x18,0   ;decrease
000900 BDE6 00E8          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+AIR_PRESS,-0x18,0
                      02582         LOAD_MODIFIER MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_LETOFF_VOLUME,SCALE_A
000904 80E1 0AB5          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_LETOFF_VOLUME,SCALE_A
                      02583         MASK_COMPARE    WORK_STATUS_BITS,IMMED_DATA,WKSB_INTERLOCK_MASK,~WKSB_INTERLOCK_MASK,SKIP_SAME ;
000908 07FC DF20          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,WORK_STATUS_BITS,WKSB_INTERLOCK_MASK,~WKSB
                      02584                 END_SOUND        ;interlock is 00, freeze               ;Skipped when ARG1 = ARG2
00090C 0000               M                 DB      CMD_END_SND,0
                      02585 
                      02586         MASK_COMPARE    USER_INTLK_BITS,IMMED_DATA,AUTO_BRAKE_MASK2,~AUTO_BRAKE_MASK2,SKIP_SAME         
00090E 1EFC FB04          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,USER_INTLK_BITS,AUTO_BRAKE_MASK2,~AUTO_BRA
                      02587                 PLAY    HNDL_SC0_BRAKE_RELEASE,no_loop,loop_STD         
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 88
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         list ;2 byte PLAY  [HANDLE]
000912 3A40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_BRAKE_RELEASE & 0x3F)+((no_loop<<6
                          M         list
                      02588         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+AIR_PRESS,-0x16,0   ;decrease
000914 BDE6 00EA          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+AIR_PRESS,-0x16,0
                      02589 
                      02590         ;Set AUTOMATIC BRAKING INTERLOCK On =1
                      02591         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_OR+USER_INTLK_BITS,~AUTO_BRAKE_MASK2,MERGE_ALL_MASK      
000918 5EE6 00FB          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_OR+USER_INTLK_BITS,~AUTO_BRAKE_MAS
                      02592         
                      02593         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_DYNBRK_ON               ; lOOP if SF15 is not currently ON
00091C 0B04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_DYNBRK_ON 
                      02594                 BRANCH_TO       CH3SC0_RELEASE_HBRAKE
                          M         
                          M         if      (CH3SC0_RELEASE_HBRAKE-SKEME_BASE) > 0xFFF          ;check branch size in SCHEME
                          M                 error   CH3SC0_RELEASE_HBRAKE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00091E 22C9               M                 DB      CMD_GOTO_SND + ((high (CH3SC0_RELEASE_HBRAKE-SKEME_BASE)) & 0x0F) , low (CH3SC0_
                          M         endif
                          M                 
                      02595         BRANCH_TO       CH3SC0_BRAKES_RELEASED
                          M         
                          M         if      (CH3SC0_BRAKES_RELEASED-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH3SC0_BRAKES_RELEASED range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000920 24C9               M                 DB      CMD_GOTO_SND + ((high (CH3SC0_BRAKES_RELEASED-SKEME_BASE)) & 0x0F) , low (CH3SC0
                          M         endif
                          M                 
                      02596         
000922                02597 CH3SC0_RELEASE_HBRAKE
                      02598                 PLAY    HNDL_SC0_HBRAKE_LOOP,loop_till_DYNBRK_OFF,loop_INVERT   
                          M         list ;2 byte PLAY  [HANDLE]
000922 FE4A               M         DB      CMD_PLAY_SND+((loop_till_DYNBRK_OFF>>2)&0x07)+loop_INVERT, (HNDL_SC0_HBRAKE_LOOP & 0x3F)
                          M         list
                      02599                 
000924                02600 CH3SC0_BRAKES_RELEASED
                      02601         ;WKSB_RUN_BIT   EQU     2               ;0= stop motor PWM, non-primemover sounds RUN
                      02602 
                      02603         ;SERVO RELEASE
                      02604         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_OR+WORK_STATUS_BITS,WKSB_RUN_MASK,MERGE_ALL_MASK ;set the
000924 47E6 0004          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_OR+WORK_STATUS_BITS,WKSB_RUN_MASK,
                      02605         END_SOUND                                                 
000928 0000               M                 DB      CMD_END_SND,0
                      02606         
                      02607         
                      02608 ;----------------------------------------------------
                      02609 ;---- SF20 is ON =disable AIR sound/FEATURES, trig BLOWOFF/DRYER then compressor ONE time
                      02610 ;----------------------------------------------------
                      02611         INITIATE_SOUND  TRIG_FANS_ON,NOT_TRIG           ;drive AIR cycle when SF11 goes OFF!
00092A 9A90               M                 DB      CMD_INITIATE_SND + ((NOT_TRIG) & 0x07), TRIG_FANS_ON +((NOT_TRIG) & 0x80)
  00000016                M ICNT += 1
                          M 
                      02612                 LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+AIR_PRESS,-0x11,0   ;decrease
00092C BDE6 00EF          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+AIR_PRESS,-0x11,0
                      02613                 BRANCH_TO       CH8SC0_AIR_PLAY
                          M         
                          M         if      (CH8SC0_AIR_PLAY-SKEME_BASE) > 0xFFF                ;check branch size in SCHEME
                          M                 error   CH8SC0_AIR_PLAY range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000930 92CB               M                 DB      CMD_GOTO_SND + ((high (CH8SC0_AIR_PLAY-SKEME_BASE)) & 0x0F) , low (CH8SC0_AIR_PL
                          M         endif
                          M                 
                      02614         END_SOUND
000932 0000               M                 DB      CMD_END_SND,0
                      02615         
                      02616 ;----------------------------------------------------
                      02617 ;---- SF16 is ON = DRYER
                      02618 ;----------------------------------------------------
                      02619         INITIATE_SOUND  TRIG_DRYER_ON,NORMAL            ;Set Brakes
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 89
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000934 1790               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), TRIG_DRYER_ON +((NORMAL) & 0x80)
  00000017                M ICNT += 1
                          M 
                      02620 
                      02621         BRANCH_TO CH15SC0_PLAY_DRYER
                          M         
                          M         if      (CH15SC0_PLAY_DRYER-SKEME_BASE) > 0xFFF             ;check branch size in SCHEME
                          M                 error   CH15SC0_PLAY_DRYER range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000936 74C7               M                 DB      CMD_GOTO_SND + ((high (CH15SC0_PLAY_DRYER-SKEME_BASE)) & 0x0F) , low (CH15SC0_PL
                          M         endif
                          M                 
                      02622         END_SOUND
000938 0000               M                 DB      CMD_END_SND,0
                      02623 
                      02624 ;----------------------------------------------------
                      02625 ;---- SF17 is ON = Set Brakes
                      02626 ;----------------------------------------------------
                      02627         INITIATE_SOUND  TRIG_BRAKEA_ON,NORMAL           ;Set Brakes
00093A 1C90               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), TRIG_BRAKEA_ON +((NORMAL) & 0x80)
  00000018                M ICNT += 1
                          M 
                      02628 
00093C                02629 CH9SC0_BRAKE_SET
                      02630         BRANCH_TO CH7SC0_BRAKE
                          M         
                          M         if      (CH7SC0_BRAKE-SKEME_BASE) > 0xFFF                   ;check branch size in SCHEME
                          M                 error   CH7SC0_BRAKE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
00093C 9ACA               M                 DB      CMD_GOTO_SND + ((high (CH7SC0_BRAKE-SKEME_BASE)) & 0x0F) , low (CH7SC0_BRAKE-SKE
                          M         endif
                          M                 
                      02631         END_SOUND
00093E 0000               M                 DB      CMD_END_SND,0
                      02632         
                      02633         
                      02634 ;-------------------------------
                      02635 ;SF18 is SANDER
                      02636 ;-------------------------------
                      02637         INITIATE_SOUND  TRIG_SAND_ON,NORMAL     ;RUN_WHILE_TRIG         ;continuous NON repeat version
000940 1D90               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), TRIG_SAND_ON +((NORMAL) & 0x80)
  00000019                M ICNT += 1
                          M 
                      02638                 LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_MISC_VOLUME,SCALE_A
000942 80E1 0A90          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_MISC_VOLUME,SCALE_A
                      02639                 PLAY    HNDL_SC0_SANDER_START,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
000946 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_SANDER_START & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER
000948 2500               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_SANDER_START & 0x3F)+((no_loop<<6)&0xC0
                          M         list
                      02640                 ;PLAY   HNDL_SC0_SANDER_RUN,no_loop,loop_STD
                      02641                 PLAY    HNDL_SC0_SANDER_RUN,loop_till_init_TRIG,loop_INVERT
                          M         list ;4 byte XPLAY      [HANDLE]
00094A 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_SANDER_RUN & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER B
00094C E609               M                 DB      ((loop_till_init_TRIG>>2)&0x07)+loop_INVERT, (HNDL_SC0_SANDER_RUN & 0x3F)+((loop
                          M         list
                      02642                 ;PLAY   HNDL_SC0_SANDER_RUN,no_loop,loop_STD
                      02643                 PLAY    HNDL_SC0_SANDER_END,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
00094E 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_SANDER_END & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER B
000950 2700               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_SANDER_END & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      02644                 MASK_COMPARE    WORK_NOTCH,IMMED_DATA,NOTCH7,COMP_ALL,SKIP_GRTR    ;Skip if Equal
000952 01FF 0060          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,WORK_NOTCH,NOTCH7,COMP_ALL
                      02645                         BRANCH_TO       CH13SC0_SANDER2
                          M         
                          M         if      (CH13SC0_SANDER2-SKEME_BASE) > 0xFFF                ;check branch size in SCHEME
                          M                 error   CH13SC0_SANDER2 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 90
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000956 5CC9               M                 DB      CMD_GOTO_SND + ((high (CH13SC0_SANDER2-SKEME_BASE)) & 0x0F) , low (CH13SC0_SANDE
                          M         endif
                          M                 
                      02646                 LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_LODE+WORK_SPEED_DELTA,NOTCH1,0     ; set Manual Not
000958 0BE6 0000          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_LODE+WORK_SPEED_DELTA,NOTCH1,0
00095C                02647 CH13SC0_SANDER2
                      02648         END_SOUND 
00095C 0000               M                 DB      CMD_END_SND,0
                      02649         
                      02650 
                      02651 ;-------------------------------
                      02652 ;SF11 High Fan
                      02653 ;-------------------------------
                      02654         INITIATE_SOUND  TRIG_FANS_ON,NORMAL             
00095E 1A90               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), TRIG_FANS_ON +((NORMAL) & 0x80)
  0000001A                M ICNT += 1
                          M 
                      02655                 LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_FAN_VOLUME,SCALE_D                     
000960 80E1 0DAB          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_FAN_VOLUME,SCALE_D
                      02656                 PLAY    HNDL_SC0_FAN1_START,no_loop,loop_STD            
                          M         list ;4 byte XPLAY      [HANDLE]
000964 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_FAN1_START & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER B
000966 1500               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_FAN1_START & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      02657                 PLAY    HNDL_SC0_FAN1_LOOP,loop_till_init_TRIG,loop_INVERT      
                          M         list ;4 byte XPLAY      [HANDLE]
000968 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_FAN1_LOOP & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER BI
00096A D609               M                 DB      ((loop_till_init_TRIG>>2)&0x07)+loop_INVERT, (HNDL_SC0_FAN1_LOOP & 0x3F)+((loop_
                          M         list
                      02658                 PLAY    HNDL_SC0_FAN1_LOOP,no_loop,loop_INVERT  
                          M         list ;4 byte XPLAY      [HANDLE]
00096C 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_FAN1_LOOP & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER BI
00096E 1608               M                 DB      ((no_loop>>2)&0x07)+loop_INVERT, (HNDL_SC0_FAN1_LOOP & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      02659                 PLAY    HNDL_SC0_FAN1_END,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
000970 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_FAN1_END & 0xC0)+1  ;ADD REV PLAY FLAG PLUS OTHER BI
000972 1700               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_FAN1_END & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      02660         END_SOUND 
000974 0000               M                 DB      CMD_END_SND,0
                      02661         
                      02662 ;-------------------------------
                      02663 ;SF24 Reverser
                      02664 ;-------------------------------
                      02665         INITIATE_SOUND  TRIG_REVS_ON,NORMAL             
000976 2390               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), TRIG_REVS_ON +((NORMAL) & 0x80)
  0000001B                M ICNT += 1
                          M 
                      02666         
                      02667                 ;play isolation/reverser:
                      02668                 LOAD_MODIFIER MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_POWER_REVERSER_VOLUME,SCALE_B
000978 80E1 0BB4          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_POWER_REVERSER_VOLUME,SC
                      02669                 PLAY    HNDL_SC0_ISOLATION_REVERSE_FWD,no_loop,loop_STD         
                          M         list ;2 byte PLAY  [HANDLE]
00097C 3640               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_ISOLATION_REVERSE_FWD & 0x3F)+((no
                          M         list
                      02670         END_SOUND 
00097E 0000               M                 DB      CMD_END_SND,0
                      02671 
                      02672 ;-------------------------------
                      02673 ;SF19 
                      02674 ;-------------------------------
                      02675         INITIATE_SOUND  TRIG_LETOFF_ON,NORMAL           
000980 1E90               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), TRIG_LETOFF_ON +((NORMAL) & 0x80)
  0000001C                M ICNT += 1
                          M 
                      02676                 LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_LETOFF_VOLUME,SCALE_F
000982 80E1 0FB5          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_LETOFF_VOLUME,SCALE_F
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 91
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02677                 PLAY    HNDL_SC0_AIR_LETOFF,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
000986 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AIR_LETOFF & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER B
000988 1300               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_AIR_LETOFF & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      02678                 GENERATE_TRIGGER TRIG_STARTUP_ON        ;FORCE COLD START
00098A 29B1               M                 DB      CMD_BLIP_TRIGGER, TRIG_STARTUP_ON 
                      02679         END_SOUND 
00098C 0000               M                 DB      CMD_END_SND,0
                      02680 
                      02681 ; -------------------------------------------------------------
                      02682 ;   FUNCTION KEY SF22 - CAB CHATTER !
                      02683 ; -------------------------------------------------------------
                      02684         INITIATE_SOUND TRIG_USERSND_ON,NORMAL                   ; Play sound when SF22 is pressed
00098E 2190               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), TRIG_USERSND_ON +((NORMAL) & 0x80)
  0000001D                M ICNT += 1
                          M 
                      02685         LOAD_MODIFIER MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_MISC_VOLUME,SCALE_C      ; Volume set by Misc Vol
000990 80E1 0C90          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_MISC_VOLUME,SCALE_C
                      02686         PLAY HNDL_SC0_USER_SOUND1,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
000994 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_USER_SOUND1 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER 
000996 3400               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_USER_SOUND1 & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      02687         ;MASK_COMPARE   WORK_SPEED,IMMED_DATA,0x04,COMP_ALL,SKIP_GRTR           ; Check if stopped
                      02688         ;       BRANCH_TO       CH13SC0_NO_CAB_SOUND
                      02689         ;BRANCH_TO      CH13SC0_CAB_SOUND
                      02690 
000998                02691 CH13SC0_CAB_SOUND
                      02692         LOAD_MODIFIER MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_MISC_VOLUME,SCALE_A      ; Volume set by Misc Vol
000998 80E1 0A90          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_MISC_VOLUME,SCALE_A
                      02693         PLAY HNDL_SC0_SHUTTERS,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
00099C 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_SHUTTERS & 0xC0)+1  ;ADD REV PLAY FLAG PLUS OTHER BI
00099E 3100               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_SHUTTERS & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      02694         LOAD_MODIFIER MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_MISC_VOLUME,SCALE_B      ; Volume set by Misc Vol
0009A0 80E1 0B90          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_MISC_VOLUME,SCALE_B
                      02695         PLAY HNDL_SC0_SHUTTERS,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
0009A4 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_SHUTTERS & 0xC0)+1  ;ADD REV PLAY FLAG PLUS OTHER BI
0009A6 3100               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_SHUTTERS & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      02696         PLAY HNDL_SC0_USER_SOUND2,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
0009A8 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_USER_SOUND2 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER 
0009AA 3500               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_USER_SOUND2 & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      02697 
0009AC                02698 CH13SC0_NO_CAB_SOUND
                      02699         BRANCH_TO       CH15SC0_PLAY_DRYER
                          M         
                          M         if      (CH15SC0_PLAY_DRYER-SKEME_BASE) > 0xFFF             ;check branch size in SCHEME
                          M                 error   CH15SC0_PLAY_DRYER range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0009AC 74C7               M                 DB      CMD_GOTO_SND + ((high (CH15SC0_PLAY_DRYER-SKEME_BASE)) & 0x0F) , low (CH15SC0_PL
                          M         endif
                          M                 
                      02700         END_SOUND
0009AE 0000               M                 DB      CMD_END_SND,0
                      02701  
                      02702 
                      02703 ; -------------------------------------------------------------
                      02704 ;   FUNCTION KEY TRIG_USERSND2_ON - USER SOUNDS !
                      02705 ; -------------------------------------------------------------
                      02706         INITIATE_SOUND TRIG_USERSND2_ON,NORMAL                  ; Play sound when TRIG_USERSND2_ON is pr
0009B0 2D90               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), TRIG_USERSND2_ON +((NORMAL) & 0x80)
  0000001E                M ICNT += 1
                          M 
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 92
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02707         LOAD_MODIFIER MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_MISC_VOLUME,SCALE_C      ; Volume set by Misc Vol
0009B2 80E1 0C90          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_MISC_VOLUME,SCALE_C
                      02708         MASK_COMPARE    WORK_SPEED,IMMED_DATA,0x01,COMP_ALL,SKIP_GRTR           ; Check if stopped
0009B6 00FF 0001          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,WORK_SPEED,0x01,COMP_ALL
                      02709                 BRANCH_TO       CH13SC0_NO_USER_SOUND
                          M         
                          M         if      (CH13SC0_NO_USER_SOUND-SKEME_BASE) > 0xFFF          ;check branch size in SCHEME
                          M                 error   CH13SC0_NO_USER_SOUND range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0009BA D2C9               M                 DB      CMD_GOTO_SND + ((high (CH13SC0_NO_USER_SOUND-SKEME_BASE)) & 0x0F) , low (CH13SC0
                          M         endif
                          M                 
                      02710         BRANCH_TO       CH13SC0_USER_SOUND
                          M         
                          M         if      (CH13SC0_USER_SOUND-SKEME_BASE) > 0xFFF             ;check branch size in SCHEME
                          M                 error   CH13SC0_USER_SOUND range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0009BC BEC9               M                 DB      CMD_GOTO_SND + ((high (CH13SC0_USER_SOUND-SKEME_BASE)) & 0x0F) , low (CH13SC0_US
                          M         endif
                          M                 
0009BE                02711 CH13SC0_USER_SOUND
                      02712         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_USERSND_ON              ; Skip if SF22 is not currently oFF
0009BE 2104               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_USERSND_ON 
                      02713                 END_SOUND
0009C0 0000               M                 DB      CMD_END_SND,0
                      02714         LOAD_MODIFIER MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_MISC_VOLUME,SCALE_A      ; Volume set by Misc Vol
0009C2 80E1 0A90          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_MISC_VOLUME,SCALE_A
                      02715         PLAY HNDL_SC0_ENGINE_DOOR_CLOSE,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
0009C6 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_ENGINE_DOOR_CLOSE & 0xC0)+1 ;ADD REV PLAY FLAG PLUS 
0009C8 3000               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_ENGINE_DOOR_CLOSE & 0x3F)+((no_loop<<6)
                          M         list
                      02716         LOAD_MODIFIER MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_MISC_VOLUME,SCALE_B      ; Volume set by Misc Vol
0009CA 80E1 0B90          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_MISC_VOLUME,SCALE_B
                      02717         PLAY HNDL_SC0_ENGINE_DOOR_OPEN,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
0009CE 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_ENGINE_DOOR_OPEN & 0xC0)+1 ;ADD REV PLAY FLAG PLUS O
0009D0 2F00               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_ENGINE_DOOR_OPEN & 0x3F)+((no_loop<<6)&
                          M         list
0009D2                02718 CH13SC0_NO_USER_SOUND
                      02719         BRANCH_TO       CH15SC0_PLAY_DRYER
                          M         
                          M         if      (CH15SC0_PLAY_DRYER-SKEME_BASE) > 0xFFF             ;check branch size in SCHEME
                          M                 error   CH15SC0_PLAY_DRYER range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0009D2 74C7               M                 DB      CMD_GOTO_SND + ((high (CH15SC0_PLAY_DRYER-SKEME_BASE)) & 0x0F) , low (CH15SC0_PL
                          M         endif
                          M                 
                      02720         END_SOUND
0009D4 0000               M                 DB      CMD_END_SND,0
                      02721         
                      02722         
                      02723         ; ---------------------------------------------------------
                      02724         ;     REMOVE COUPLER SLACK
                      02725         ; ---------------------------------------------------------
                      02726         INITIATE_SOUND T_SPD_IDLEXIT,NORMAL
0009D6 7690               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), T_SPD_IDLEXIT +((NORMAL) & 0x80)
  0000001F                M ICNT += 1
                          M 
                      02727         LOAD_MODIFIER MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_POWER_REVERSER_VOLUME,SCALE_B
0009D8 80E1 0BB4          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_POWER_REVERSER_VOLUME,SC
                      02728         ;;play isolation/reverser:
                      02729         ;PLAY   HNDL_SC0_ISOLATION_REVERSE_FWD,no_loop,loop_STD         
                      02730         PLAY    HNDL_SC0_BRAKE_BAIL_OFFOFF,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
0009DC 3B40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_BRAKE_BAIL_OFFOFF & 0x3F)+((no_loo
                          M         list
                      02731         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+AIR_PRESS,-0x05,0   ;decrease
0009DE BDE6 00FB          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+AIR_PRESS,-0x05,0
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 93
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02732         
                      02733         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_MISC_VOLUME,SCALE_D    ;CV166 A6       Coupler 
0009E2 80E1 0D90          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_MISC_VOLUME,SCALE_D
                      02734           
                      02735         MASK_COMPARE    WORK_NOTCH,TARGET_DATA,SCV_CUTOFF_SPEED_LOW,COMP_7LSB,SKIP_GRTR   ;Skip if <    
0009E6 01FB 80A9          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+TARGET_DATA,WORK_NOTCH,SCV_CUTOFF_SPEED_LOW,COMP_7LSB
                      02736                 BRANCH_TO       CH9SC0_REMOVE_COUPLER_SLACK2
                          M         
                          M         if      (CH9SC0_REMOVE_COUPLER_SLACK2-SKEME_BASE) > 0xFFF   ;check branch size in SCHEME
                          M                 error   CH9SC0_REMOVE_COUPLER_SLACK2 range over 4096 bytes -- MUST USE BRANCH_EXT for >4
                          M         else
0009EA EEC9               M                 DB      CMD_GOTO_SND + ((high (CH9SC0_REMOVE_COUPLER_SLACK2-SKEME_BASE)) & 0x0F) , low (
                          M         endif
                          M                 
                      02737         BRANCH_TO       CH9SC0_REMOVED_COUPLER_SLACK            ;SKIP UNLESS HAS ACTUALLY MOVED/MOVING; 
                          M         
                          M         if      (CH9SC0_REMOVED_COUPLER_SLACK-SKEME_BASE) > 0xFFF   ;check branch size in SCHEME
                          M                 error   CH9SC0_REMOVED_COUPLER_SLACK range over 4096 bytes -- MUST USE BRANCH_EXT for >4
                          M         else
0009EC 38CA               M                 DB      CMD_GOTO_SND + ((high (CH9SC0_REMOVED_COUPLER_SLACK-SKEME_BASE)) & 0x0F) , low (
                          M         endif
                          M                 
0009EE                02738 CH9SC0_REMOVE_COUPLER_SLACK2
                      02739         SKIP_ON_TRIGGER TRIG_TRUE,TRIG_MOVING   ;No sound unless moving.
0009EE 0E05               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_TRUE & 0x03), TRIG_MOVING 
                      02740                 BRANCH_TO       CH9SC0_REMOVED_COUPLER_SLACK    
                          M         
                          M         if      (CH9SC0_REMOVED_COUPLER_SLACK-SKEME_BASE) > 0xFFF   ;check branch size in SCHEME
                          M                 error   CH9SC0_REMOVED_COUPLER_SLACK range over 4096 bytes -- MUST USE BRANCH_EXT for >4
                          M         else
0009F0 38CA               M                 DB      CMD_GOTO_SND + ((high (CH9SC0_REMOVED_COUPLER_SLACK-SKEME_BASE)) & 0x0F) , low (
                          M         endif
                          M                 
                      02741                 
                      02742         MASK_COMPARE    WORK_SPEED,IMMED_DATA,0x03,COMP_ALL,SKIP_GRTR           ; Check if stopped
0009F2 00FF 0003          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,WORK_SPEED,0x03,COMP_ALL
                      02743                 BRANCH_TO       CH9SC0_REMOVE_COUPLER_SLACK
                          M         
                          M         if      (CH9SC0_REMOVE_COUPLER_SLACK-SKEME_BASE) > 0xFFF    ;check branch size in SCHEME
                          M                 error   CH9SC0_REMOVE_COUPLER_SLACK range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
0009F6 FAC9               M                 DB      CMD_GOTO_SND + ((high (CH9SC0_REMOVE_COUPLER_SLACK-SKEME_BASE)) & 0x0F) , low (C
                          M         endif
                          M                 
                      02744         BRANCH_TO       CH9SC0_REMOVED_COUPLER_SLACK
                          M         
                          M         if      (CH9SC0_REMOVED_COUPLER_SLACK-SKEME_BASE) > 0xFFF   ;check branch size in SCHEME
                          M                 error   CH9SC0_REMOVED_COUPLER_SLACK range over 4096 bytes -- MUST USE BRANCH_EXT for >4
                          M         else
0009F8 38CA               M                 DB      CMD_GOTO_SND + ((high (CH9SC0_REMOVED_COUPLER_SLACK-SKEME_BASE)) & 0x0F) , low (
                          M         endif
                          M                 
                      02745                         
0009FA                02746 CH9SC0_REMOVE_COUPLER_SLACK
                      02747         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_COUPLER_VOLUME,SCALE_B ;CV166 A6       Coupler 
0009FA 80E1 0BB0          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_COUPLER_VOLUME,SCALE_B
                      02748         LOAD_MODIFIER   MTYPE_PITCH,ANALOG_PITCH_MODIFY+0x0+WORK_SPEED,MAXP_DIESEL,DITHERP_DIESEL       
0009FE A0E2 003E          M                 DB      CMD_LOAD_MODIFY+(MTYPE_PITCH&0x0F),ANALOG_PITCH_MODIFY+0x0+WORK_SPEED,MAXP_DIESE
                      02749         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_MOVING
000A02 0E04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_MOVING 
                      02750                 PLAY    HNDL_SC0_COUPLER_SLACK,no_loop,loop_STD 
                          M         list ;4 byte XPLAY      [HANDLE]
000A04 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_COUPLER_SLACK & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHE
000A06 2A00               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_COUPLER_SLACK & 0x3F)+((no_loop<<6)&0xC
                          M         list
                      02751                 
                      02752         MASK_COMPARE    WORK_SPEED,IMMED_DATA,0x04,COMP_ALL,SKIP_GRTR           ; Check if stopped
000A08 00FF 0004          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,WORK_SPEED,0x04,COMP_ALL
                      02753                 BRANCH_TO       CH9SC0_REMOVED_COUPLER_SLACK2
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 94
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         
                          M         if      (CH9SC0_REMOVED_COUPLER_SLACK2-SKEME_BASE) > 0xFFF  ;check branch size in SCHEME
                          M                 error   CH9SC0_REMOVED_COUPLER_SLACK2 range over 4096 bytes -- MUST USE BRANCH_EXT for >
                          M         else
000A0C 10CA               M                 DB      CMD_GOTO_SND + ((high (CH9SC0_REMOVED_COUPLER_SLACK2-SKEME_BASE)) & 0x0F) , low 
                          M         endif
                          M                 
                      02754         BRANCH_TO       CH9SC0_REMOVED_COUPLER_SLACK
                          M         
                          M         if      (CH9SC0_REMOVED_COUPLER_SLACK-SKEME_BASE) > 0xFFF   ;check branch size in SCHEME
                          M                 error   CH9SC0_REMOVED_COUPLER_SLACK range over 4096 bytes -- MUST USE BRANCH_EXT for >4
                          M         else
000A0E 38CA               M                 DB      CMD_GOTO_SND + ((high (CH9SC0_REMOVED_COUPLER_SLACK-SKEME_BASE)) & 0x0F) , low (
                          M         endif
                          M                 
                      02755         
000A10                02756 CH9SC0_REMOVED_COUPLER_SLACK2
                      02757         SKIP_ON_TRIGGER TRIG_TRUE,TRIG_UNCOUPLE_ON              ; Skip if SF3 is not currently OFF -- li
000A10 1805               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_TRUE & 0x03), TRIG_UNCOUPLE_ON 
                      02758                 END_SOUND
000A12 0000               M                 DB      CMD_END_SND,0
                      02759                 
                      02760         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_COUPLER_VOLUME,SCALE_A ;CV166 A6       Coupler 
000A14 80E1 0AB0          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_COUPLER_VOLUME,SCALE_A
                      02761         LOAD_MODIFIER   MTYPE_PITCH,ANALOG_PITCH_MODIFY+0x0+WORK_SPEED,MAXP_DIESEL,DITHERP_DIESEL       
000A18 A0E2 003E          M                 DB      CMD_LOAD_MODIFY+(MTYPE_PITCH&0x0F),ANALOG_PITCH_MODIFY+0x0+WORK_SPEED,MAXP_DIESE
                      02762         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_MOVING
000A1C 0E04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_MOVING 
                      02763                 PLAY    HNDL_SC0_COUPLER_SLACK,no_loop,loop_STD 
                          M         list ;4 byte XPLAY      [HANDLE]
000A1E 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_COUPLER_SLACK & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHE
000A20 2A00               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_COUPLER_SLACK & 0x3F)+((no_loop<<6)&0xC
                          M         list
                      02764                 
                      02765         MASK_COMPARE    WORK_SPEED,IMMED_DATA,0x05,COMP_ALL,SKIP_GRTR           ; Check if stopped
000A22 00FF 0005          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,WORK_SPEED,0x05,COMP_ALL
                      02766                 BRANCH_TO       CH9SC0_REMOVED_COUPLER_SLACK3   
                          M         
                          M         if      (CH9SC0_REMOVED_COUPLER_SLACK3-SKEME_BASE) > 0xFFF  ;check branch size in SCHEME
                          M                 error   CH9SC0_REMOVED_COUPLER_SLACK3 range over 4096 bytes -- MUST USE BRANCH_EXT for >
                          M         else
000A26 2ACA               M                 DB      CMD_GOTO_SND + ((high (CH9SC0_REMOVED_COUPLER_SLACK3-SKEME_BASE)) & 0x0F) , low 
                          M         endif
                          M                 
                      02767         BRANCH_TO       CH9SC0_REMOVED_COUPLER_SLACK    
                          M         
                          M         if      (CH9SC0_REMOVED_COUPLER_SLACK-SKEME_BASE) > 0xFFF   ;check branch size in SCHEME
                          M                 error   CH9SC0_REMOVED_COUPLER_SLACK range over 4096 bytes -- MUST USE BRANCH_EXT for >4
                          M         else
000A28 38CA               M                 DB      CMD_GOTO_SND + ((high (CH9SC0_REMOVED_COUPLER_SLACK-SKEME_BASE)) & 0x0F) , low (
                          M         endif
                          M                 
                      02768         
000A2A                02769 CH9SC0_REMOVED_COUPLER_SLACK3
                      02770         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_COUPLER_VOLUME,SCALE_A ;CV166 A6       Coupler 
000A2A 80E1 0AB0          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_COUPLER_VOLUME,SCALE_A
                      02771         LOAD_MODIFIER   MTYPE_PITCH,ANALOG_PITCH_MODIFY+0x0+WORK_SPEED,MAXP_DIESEL,DITHERP_DIESEL       
000A2E A0E2 003E          M                 DB      CMD_LOAD_MODIFY+(MTYPE_PITCH&0x0F),ANALOG_PITCH_MODIFY+0x0+WORK_SPEED,MAXP_DIESE
                      02772         
                      02773         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_MOVING
000A32 0E04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_MOVING 
                      02774                 PLAY    HNDL_SC0_COUPLER_SLACK,no_loop,loop_STD 
                          M         list ;4 byte XPLAY      [HANDLE]
000A34 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_COUPLER_SLACK & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHE
000A36 2A00               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_COUPLER_SLACK & 0x3F)+((no_loop<<6)&0xC
                          M         list
                      02775                 
000A38                02776 CH9SC0_REMOVED_COUPLER_SLACK
                      02777         END_SOUND
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 95
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A38 0000               M                 DB      CMD_END_SND,0
                      02778         
                      02779         
                      02780         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      02781         ;Straight to 1 manual notch set:
                      02782         INITIATE_SOUND TRIG_RUN1_ON,NORMAL
000A3A 2090               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), TRIG_RUN1_ON +((NORMAL) & 0x80)
  00000020                M ICNT += 1
                          M 
                      02783 
                      02784 ;SF21- Notch 1
                      02785                 LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_LODE+WORK_SPEED_DELTA,NOTCH1,0     
000A3C 0BE6 0000          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_LODE+WORK_SPEED_DELTA,NOTCH1,0
                      02786         END_SOUND
000A40 0000               M                 DB      CMD_END_SND,0
                      02787         
                      02788         
                      02789         ;;INITIATE_SOUND TRIG_TBRAKE_ON,NORMAL
                      02790 ;SF26- Notch 6
                      02791                 ;;LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_LODE+WORK_SPEED_DELTA,NOTCH6,0   
                      02792         ;;END_SOUND     
                      02793 
                      02794         ;Straight to 7 manual notch set: SELECT SF27...
                      02795         ;;INITIATE_SOUND TRIG_NOTCHDN_ON,NORMAL
                      02796 ;SF27- Notch 7
                      02797                 ;;LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_LODE+WORK_SPEED_DELTA,NOTCH7,0   
                      02798         ;;END_SOUND     
                      02799         
                      02800         ;Straight to 8 manual notch set: SELECT SF28...
                      02801         INITIATE_SOUND TRIG_RUN8_ON,NORMAL
000A42 2790               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), TRIG_RUN8_ON +((NORMAL) & 0x80)
  00000021                M ICNT += 1
                          M 
                      02802 ;SF28- Notch 8
                      02803                 LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_LODE+WORK_SPEED_DELTA,NOTCH8,0     
000A44 0BE6 0070          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_LODE+WORK_SPEED_DELTA,NOTCH8,0
                      02804         END_SOUND       
000A48 0000               M                 DB      CMD_END_SND,0
                      02805         
                      02806 
                      02807         
                      02808         ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                      02809         ;       THIS ROUTINE IS CH2_ high priority/whistle/horn PERSISTENT (NOT INTERRUPTABLE)  
                      02810         ; SF26 NOTCH-UP
                      02811         ;----------------------------------------------------
                      02812         INITIATE_SOUND  TRIG_NOTCHUP_ON,NORMAL
000A4A 2590               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), TRIG_NOTCHUP_ON +((NORMAL) & 0x80)
  00000022                M ICNT += 1
                          M 
                      02813         ;-------------------------------------------------
                      02814         ;SF27 ON Is now notch down for EVENT, integrate -VE in SPEED_DELTA
                      02815         ;MANUAL mode is ALREADY evaluated at CV11/START and OPSCV_WR that sets WKSB_SPDDELTA_BIT
                      02816         ;----------------------------------------------------   
                      02817         MASK_COMPARE    WORK_SPEED_DELTA,IMMED_DATA,MAX_NOTCH_VAL,COMP_ALL,SKIP_SAME            ;prevent
000A4C 0BFC 0070          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,WORK_SPEED_DELTA,MAX_NOTCH_VAL,COMP_ALL
                      02818         ;FIX 1/25/18
                      02819                 LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_INTEGRATE+WORK_SPEED_DELTA,+0x10,MAX_NOTCH_VAL   
000A50 ABE6 7010          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+WORK_SPEED_DELTA,+0x10,M
                      02820         ;reset when long at idle...
                      02821         ;MASK_COMPARE   WORK_SPEED_DELTA,IMMED_DATA,MAX_NOTCH_VAL,COMP_ALL,SKIP_SAME            ;prevent
                      02822         ;       END_SOUND
                      02823                 
                      02824         END_SOUND
000A54 0000               M                 DB      CMD_END_SND,0
                      02825 
                      02826         ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                      02827         ;       THIS ROUTINE IS CH2_ high priority/whistle/horn PERSISTENT (NOT INTERRUPTABLE)  
                      02828         ; SF27 NOTCH-DOWN
                      02829         ;----------------------------------------------------
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 96
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02830         INITIATE_SOUND  TRIG_NOTCHDN_ON,NORMAL
000A56 2690               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), TRIG_NOTCHDN_ON +((NORMAL) & 0x80)
  00000023                M ICNT += 1
                          M 
                      02831         ;-------------------------------------------------
                      02832         ;SF27 ON Is now notch down for EVENT, integrate -VE in SPEED_DELTA
                      02833         ;MANUAL mode is ALREADY evaluated at CV11/START and OPSCV_WR that sets WKSB_SPDDELTA_BIT
                      02834         ;----------------------------------------------------   
                      02835         ;PLAY HNDL_SC0_DEBUG1,no_loop,loop_STD  
                      02836 
                      02837         MASK_COMPARE    WORK_SPEED_DELTA,IMMED_DATA,MIN_NOTCH_VAL,COMP_ALL,SKIP_SAME            ;prevent
000A58 0BFC 0000          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,WORK_SPEED_DELTA,MIN_NOTCH_VAL,COMP_ALL
                      02838         ;FIX 1/25/18
                      02839                 LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_INTEGRATE+WORK_SPEED_DELTA,-0x10,MAX_NOTCH_VAL   
000A5C ABE6 70F0          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+WORK_SPEED_DELTA,-0x10,M
                      02840         ;reset when long at idle...
                      02841         MASK_COMPARE    WORK_SPEED_DELTA,IMMED_DATA,MIN_NOTCH_VAL,COMP_ALL,SKIP_SAME            ;prevent
000A60 0BFC 0000          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,WORK_SPEED_DELTA,MIN_NOTCH_VAL,COMP_ALL
                      02842                 END_SOUND
000A64 0000               M                 DB      CMD_END_SND,0
                      02843         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_LODE+WORK_PEAK_SPD,00,0  ;clear WORK_PEAK_SPD    
000A66 19E6 0000          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_LODE+WORK_PEAK_SPD,00,0
                      02844                 
                      02845         END_SOUND
000A6A 0000               M                 DB      CMD_END_SND,0
                      02846 
                      02847         
                      02848 
                      02849 ;---------------------------------------------
                      02850 ;  Decelerate  brake sounds:                  
                      02851 ;---------------------------------------------
                      02852         INITIATE_SOUND T_SPD_DECEL1,NORMAL              
000A6C 7890               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), T_SPD_DECEL1 +((NORMAL) & 0x80)
  00000024                M ICNT += 1
                          M 
                      02853         MASK_COMPARE    WORK_SPEED_DELTA,IMMED_DATA,MIN_NOTCH_VAL,COMP_ALL,SKIP_GRTR            ;prevent
000A6E 0BFF 0000          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,WORK_SPEED_DELTA,MIN_NOTCH_VAL,COMP_ALL
                      02854                 LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+WORK_SPEED_DELTA,-0x10,MAX_NOTCH_VAL   ;D
000A72 ABE6 70F0          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+WORK_SPEED_DELTA,-0x10,M
                      02855 
                      02856         MASK_COMPARE    WORK_SPEED_DELTA,IMMED_DATA,MIN_NOTCH_VAL,COMP_ALL,SKIP_GRTR            ;prevent
000A76 0BFF 0000          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,WORK_SPEED_DELTA,MIN_NOTCH_VAL,COMP_ALL
                      02857                 LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+WORK_SPEED_DELTA,-0x10,MAX_NOTCH_VAL   ;D
000A7A ABE6 70F0          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+WORK_SPEED_DELTA,-0x10,M
                      02858 
                      02859         ;SKIP UNLESS HAS ACTUALLY MOVED/MOVING
                      02860         SKIP_ON_TRIGGER TRIG_TRUE,TRIG_MOVING   
000A7E 0E05               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_TRUE & 0x03), TRIG_MOVING 
                      02861                 BRANCH_TO       CH7SC0_NOT_BRAKE
                          M         
                          M         if      (CH7SC0_NOT_BRAKE-SKEME_BASE) > 0xFFF               ;check branch size in SCHEME
                          M                 error   CH7SC0_NOT_BRAKE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000A80 B4CA               M                 DB      CMD_GOTO_SND + ((high (CH7SC0_NOT_BRAKE-SKEME_BASE)) & 0x0F) , low (CH7SC0_NOT_B
                          M         endif
                          M                 
                      02862                 
                      02863         ;PLAY HNDL_SC0_DEBUG1,no_loop,loop_STD  
                      02864         ; Decelerate:
                      02865         ;SKIP_ON_TRIGGER        TRIG_FALSE,TRIG_IBRAKES_ON      ; But skip if BRAKE was previously on --
                      02866         ;       BRANCH_TO       CH7SC0_NOT_BRAKE        
                      02867                 
                      02868         ;when coupler lift ring is up do not play brake squeel:
                      02869         SKIP_ON_TRIGGER TRIG_TRUE,TRIG_UNCOUPLE_ON      ; But skip if SF3 was previously OFF -- SF3 ON e
000A82 1805               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_TRUE & 0x03), TRIG_UNCOUPLE_ON 
                      02870                 BRANCH_TO       CH7SC0_NOT_BRAKE        
                          M         
                          M         if      (CH7SC0_NOT_BRAKE-SKEME_BASE) > 0xFFF               ;check branch size in SCHEME
                          M                 error   CH7SC0_NOT_BRAKE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 97
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         else
000A84 B4CA               M                 DB      CMD_GOTO_SND + ((high (CH7SC0_NOT_BRAKE-SKEME_BASE)) & 0x0F) , low (CH7SC0_NOT_B
                          M         endif
                          M                 
                      02871                 
                      02872         ;MASK_COMPARE   WORK_SPEED,IMMED_DATA,0x01,COMP_ALL,SKIP_GRTR           ; Check if stopped
                      02873         ;       BRANCH_TO       CH7SC0_BRAKE2
                      02874         ;BRANCH_TO      CH7SC0_NOT_BRAKE
                      02875         
000A86                02876 CH7SC0_BRAKE2
                      02877         ; Check AUTOMATIC BRAKING INTERLOCK if Disabled
                      02878         ;PLAY HNDL_SC0_ABOUT,no_loop,loop_STD   ;debug2
                      02879 
                      02880         ;compare current brake cycle count when >0 continue to brake
                      02881         MASK_COMPARE    USER_INTLK_BITS,IMMED_DATA,AUTO_BRAKE_MASK2,~AUTO_BRAKE_MASK2,SKIP_SAME ;BIT2 ON
000A86 1EFC FB04          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,USER_INTLK_BITS,AUTO_BRAKE_MASK2,~AUTO_BRA
                      02882                 BRANCH_TO       CH7SC0_TEST_BRAKE               ;Skipped when ARG1 = ARG2
                          M         
                          M         if      (CH7SC0_TEST_BRAKE-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH7SC0_TEST_BRAKE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000A8A 8ECA               M                 DB      CMD_GOTO_SND + ((high (CH7SC0_TEST_BRAKE-SKEME_BASE)) & 0x0F) , low (CH7SC0_TEST
                          M         endif
                          M                 
                      02883         BRANCH_TO       CH7SC0_NOT_BRAKE
                          M         
                          M         if      (CH7SC0_NOT_BRAKE-SKEME_BASE) > 0xFFF               ;check branch size in SCHEME
                          M                 error   CH7SC0_NOT_BRAKE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000A8C B4CA               M                 DB      CMD_GOTO_SND + ((high (CH7SC0_NOT_BRAKE-SKEME_BASE)) & 0x0F) , low (CH7SC0_NOT_B
                          M         endif
                          M                 
                      02884         
                      02885 
000A8E                02886 CH7SC0_TEST_BRAKE
                      02887         MASK_COMPARE    WORK_SPEED,IMMED_DATA,SCV_COUPLER_THRESHOLD,COMP_ALL,SKIP_LESS  ;28
000A8E 00FE 0096          M                 DB      CMD_MASK_COMPARE+SKIP_LESS+IMMED_DATA,WORK_SPEED,SCV_COUPLER_THRESHOLD,COMP_ALL
                      02888                 BRANCH_TO       CH7SC0_NOT_BRAKE                        ;Skipped when ARG1 < ARG2       
                          M         
                          M         if      (CH7SC0_NOT_BRAKE-SKEME_BASE) > 0xFFF               ;check branch size in SCHEME
                          M                 error   CH7SC0_NOT_BRAKE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000A92 B4CA               M                 DB      CMD_GOTO_SND + ((high (CH7SC0_NOT_BRAKE-SKEME_BASE)) & 0x0F) , low (CH7SC0_NOT_B
                          M         endif
                          M                 
                      02889 
                      02890 ;                                                               SPEED THRESHOLD FOR HARD BRAKE 14-19    
                      02891         MASK_COMPARE    WORK_SPEED,IMMED_DATA,SCV_BRAKE_RATE,COMP_ALL,SKIP_LESS ;19
000A94 00FE 0099          M                 DB      CMD_MASK_COMPARE+SKIP_LESS+IMMED_DATA,WORK_SPEED,SCV_BRAKE_RATE,COMP_ALL
                      02892                 BRANCH_TO       CH7SC0_NOT_BRAKE                        ;Skipped when ARG1 < ARG2       
                          M         
                          M         if      (CH7SC0_NOT_BRAKE-SKEME_BASE) > 0xFFF               ;check branch size in SCHEME
                          M                 error   CH7SC0_NOT_BRAKE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000A98 B4CA               M                 DB      CMD_GOTO_SND + ((high (CH7SC0_NOT_BRAKE-SKEME_BASE)) & 0x0F) , low (CH7SC0_NOT_B
                          M         endif
                          M                 
                      02893 
000A9A                02894 CH7SC0_BRAKE
                      02895         MASK_COMPARE    WORK_SPEED_DELTA,IMMED_DATA,MIN_NOTCH_VAL,COMP_ALL,SKIP_GRTR            ;prevent
000A9A 0BFF 0000          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,WORK_SPEED_DELTA,MIN_NOTCH_VAL,COMP_ALL
                      02896                 LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+WORK_SPEED_DELTA,-0x10,MAX_NOTCH_VAL   ;D
000A9E ABE6 70F0          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+WORK_SPEED_DELTA,-0x10,M
                      02897         
                      02898         SKIP_ON_TRIGGER TRIG_TRUE,TRIG_MOVING   
000AA2 0E05               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_TRUE & 0x03), TRIG_MOVING 
                      02899                 BRANCH_TO       CH7SC0_NOT_BRAKE
                          M         
                          M         if      (CH7SC0_NOT_BRAKE-SKEME_BASE) > 0xFFF               ;check branch size in SCHEME
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 98
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                 error   CH7SC0_NOT_BRAKE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000AA4 B4CA               M                 DB      CMD_GOTO_SND + ((high (CH7SC0_NOT_BRAKE-SKEME_BASE)) & 0x0F) , low (CH7SC0_NOT_B
                          M         endif
                          M                 
                      02900 
                      02901         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_BRAKE_VOLUME,SCALE_E
000AA6 80E1 0E8F          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_BRAKE_VOLUME,SCALE_E
                      02902         PLAY    HNDL_SC0_ENGINE_BRAKE_BEGIN,no_loop,loop_STD            ; light brake sound     
                          M         list ;2 byte PLAY  [HANDLE]
000AAA 3240               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_ENGINE_BRAKE_BEGIN & 0x3F)+((no_lo
                          M         list
                      02903         PLAY    HNDL_SC0_ENGINE_BRAKE_LOOP1,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
000AAC 3340               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_ENGINE_BRAKE_LOOP1 & 0x3F)+((no_lo
                          M         list
000AAE                02904 CH7SC0_QUICK_BRAKE
                      02905         ;PLAY HNDL_SC0_DEBUG1,no_loop,loop_STD  
                      02906         PLAY    HNDL_SC0_ENGINE_BRAKE_END,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
000AAE 3540               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_ENGINE_BRAKE_END & 0x3F)+((no_loop
                          M         list
                      02907         
                      02908         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+AIR_PRESS,-0x05,0   ;decrease
000AB0 BDE6 00FB          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+AIR_PRESS,-0x05,0
                      02909         
000AB4                02910 CH7SC0_NOT_BRAKE
                      02911         ;Set AUTOMATIC BRAKING INTERLOCK Off =0
                      02912         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_OR+USER_INTLK_BITS,~AUTO_BRAKE_MASK2,MERGE_ALL_MASK      
000AB4 5EE6 00FB          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_OR+USER_INTLK_BITS,~AUTO_BRAKE_MAS
                      02913 
                      02914         SKIP_ON_TRIGGER TRIG_TRUE,TRIG_BRAKEA_ON        
000AB8 1C05               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_TRUE & 0x03), TRIG_BRAKEA_ON 
                      02915                 BRANCH_TO CH1SC0_RELEASE_BRAKE
                          M         
                          M         if      (CH1SC0_RELEASE_BRAKE-SKEME_BASE) > 0xFFF           ;check branch size in SCHEME
                          M                 error   CH1SC0_RELEASE_BRAKE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000ABA 48C2               M                 DB      CMD_GOTO_SND + ((high (CH1SC0_RELEASE_BRAKE-SKEME_BASE)) & 0x0F) , low (CH1SC0_R
                          M         endif
                          M                 
                      02916                 
                      02917         END_SOUND
000ABC 0000               M                 DB      CMD_END_SND,0
                      02918         
                      02919         ;END CH2_============================================================== 
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 99
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02920                 PAGE
                      02921                 
                      02922                 
                      02923 ;------------------------------------------------
                      02924 ;Start Channel 3                
                      02925 ;------------------------------------------------
                      02926         CHANNEL_START   3       ;typically for PERSISTENT sounds other than PRIME mover
000ABE 0381               M                 DB      CMD_START_CHNL,3
                          M ;CTEMP += 1
000AC0                02927 CH3SC0_BEGIN        
                      02928                 
                      02929 ;--------------------------------------------------------------------
                      02930 ;added 8/13/06 to holdoff until DIESEL START is complete
                      02931 ;--------------------------------------------------------------------
                      02932         INITIATE_SOUND  TRIG_SND_ACTV11,NORMAL                          ;run ONCE only
000AC0 0F90               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), TRIG_SND_ACTV11 +((NORMAL) & 0x80)
  00000025                M ICNT += 1
                          M 
000AC2                02933 CH3SC0_INTERLOCK_HOLD
                      02934         DELAY_SOUND DELAY_THIS,24,DELAY_GLOBAL
000AC2 18B5               M                 DB      CMD_DELAY_SND + (DELAY_GLOBAL & 0x01), (24 & 0x7F)+DELAY_THIS 
                      02935         
                      02936         MASK_COMPARE    WORK_STATUS_BITS,IMMED_DATA,WKSB_INTERLOCK_MASK,~WKSB_INTERLOCK_MASK,SKIP_SAME ;
000AC4 07FC DF20          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,WORK_STATUS_BITS,WKSB_INTERLOCK_MASK,~WKSB
                      02937                 BRANCH_TO       CH3SC0_INTERLOCK_HOLD    ;interlock is 00, freeze               ;Skipped
                          M         
                          M         if      (CH3SC0_INTERLOCK_HOLD-SKEME_BASE) > 0xFFF          ;check branch size in SCHEME
                          M                 error   CH3SC0_INTERLOCK_HOLD range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000AC8 C2CA               M                 DB      CMD_GOTO_SND + ((high (CH3SC0_INTERLOCK_HOLD-SKEME_BASE)) & 0x0F) , low (CH3SC0_
                          M         endif
                          M                 
                      02938         ;DO NOT reset blend, gain, pitch here:
                      02939         END_SOUND
000ACA 0000               M                 DB      CMD_END_SND,0
                      02940         
                      02941         
                      02942 ;BEGIN CH3_=============================
                      02943 
                      02944         ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                      02945         ;       THIS ROUTINE IS CH3_ (NOT INTERRUPTABLE)
                      02946         ;   FUNCTION KEY SF31 - BELL, GRADE CROSSING SEQUENCE !
                      02947         ;       ::::::::::::::::::::::::::::::: EVENT MUST PRECEED SF1 BELOW ===========================
                      02948         ;-------------------------------------------------------
                      02949         INITIATE_SOUND TRIG_ALTGCS_ON,RUN_WHILE_TRIG    ;PZAP 2/13/17 +NO_PREEMPT_TRIG          ; Do not
000ACC 2292               M                 DB      CMD_INITIATE_SND + ((RUN_WHILE_TRIG) & 0x07), TRIG_ALTGCS_ON +((RUN_WHILE_TRIG) 
  00000026                M ICNT += 1
                          M 
                      02950         ;                                               bit6 disable bell
                      02951         MASK_COMPARE    SCV_FEATURE_DISABLE,IMMED_DATA,0x01,COMP_bit6,SKIP_SAME         ;SKIP_LESSSKIP_G
000ACE B8FC BF01          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_FEATURE_DISABLE,0x01,COMP_bit6
                      02952                 END_SOUND                               ;Skipped when ARG1 = ARG2
000AD2 0000               M                 DB      CMD_END_SND,0
                      02953         ; only one bell routine can be supported. use SF1 below.
                      02954         BRANCH_TO       CH4SC0_BELL_ON  
                          M         
                          M         if      (CH4SC0_BELL_ON-SKEME_BASE) > 0xFFF                 ;check branch size in SCHEME
                          M                 error   CH4SC0_BELL_ON range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000AD4 DACA               M                 DB      CMD_GOTO_SND + ((high (CH4SC0_BELL_ON-SKEME_BASE)) & 0x0F) , low (CH4SC0_BELL_ON
                          M         endif
                          M                 
                      02955         
                      02956         END_SOUND
000AD6 0000               M                 DB      CMD_END_SND,0
                      02957 
                      02958         
                      02959         ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                      02960         ;       THIS ROUTINE IS CH3_ bell/air/fan/misc (NOT INTERRUPTABLE)
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 100
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02961         ;   FUNCTION KEY SF1 - BELL             
                      02962         ; -------------------------------------------------------------
                      02963         INITIATE_SOUND  TRIG_BELLS_ON,RUN_WHILE_TRIG    ;PZAP 2/13/17 +NO_PREEMPT_TRIG          ;continu
000AD8 0892               M                 DB      CMD_INITIATE_SND + ((RUN_WHILE_TRIG) & 0x07), TRIG_BELLS_ON +((RUN_WHILE_TRIG) &
  00000027                M ICNT += 1
                          M 
                      02964 ;-
000ADA                02965 CH4SC0_BELL_ON  
                      02966         ;                               bit6 disable bell
                      02967         MASK_COMPARE    SCV_FEATURE_DISABLE,IMMED_DATA,0x01,COMP_bit6,SKIP_SAME         ;SKIP_LESSSKIP_G
000ADA B8FC BF01          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_FEATURE_DISABLE,0x01,COMP_bit6
                      02968                 END_SOUND                               ;Skipped when ARG1 = ARG2
000ADE 0000               M                 DB      CMD_END_SND,0
                      02969         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_BELL_VOLUME,SCALE_D
000AE0 80E1 0D8C          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_BELL_VOLUME,SCALE_D
                      02970         
                      02971         ;BELL SELECTED CV157:
                      02972         ;                       Decimal HEX                     Bit
                      02973         ;                                                               7654 3210
                      02974         ;       1               0               0x00            0000 0000
                      02975         ;       2               1               0x01            0000 0001
                      02976         ;       3               2               0x02            0000 0010
                      02977         ;       4               3               0x03            0000 0011
                      02978         ;       5               4               0x04            0000 0100
                      02979         ;                       Decimal HEX                     Bit
                      02980 ;----
                      02981 
                      02982 
                      02983 ;-----
                      02984 ;CV150= xxxx-x00X
000AE4                02985 CH4SC0_F1_BELL_00X
                      02986         ;MASK_COMPARE   SCV_157_SEL_BELL,IMMED_DATA,0x03,COMP_bit0,SKIP_LESS            ;SKIP_LESSSKIP_G
                      02987         ;       BRANCH_TO       CH4SC0_F1_BELL_003
                      02988         ;MASK_COMPARE   SCV_157_SEL_BELL,IMMED_DATA,0x02,COMP_bit0,SKIP_LESS            ;SKIP_LESSSKIP_G
                      02989         ;       BRANCH_TO       CH4SC0_F1_BELL_002
                      02990         MASK_COMPARE    SCV_157_SEL_BELL,IMMED_DATA,0x01,COMP_bit0,SKIP_LESS            ;SKIP_LESSSKIP_G
000AE4 9CFE FE01          M                 DB      CMD_MASK_COMPARE+SKIP_LESS+IMMED_DATA,SCV_157_SEL_BELL,0x01,COMP_bit0
                      02991                 BRANCH_TO       CH4SC0_F1_BELL_001
                          M         
                          M         if      (CH4SC0_F1_BELL_001-SKEME_BASE) > 0xFFF             ;check branch size in SCHEME
                          M                 error   CH4SC0_F1_BELL_001 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000AE8 F4CA               M                 DB      CMD_GOTO_SND + ((high (CH4SC0_F1_BELL_001-SKEME_BASE)) & 0x0F) , low (CH4SC0_F1_
                          M         endif
                          M                 
                      02992 ;-
                      02993 ;CV150= 00 DEFAULT BELL
000AEA                02994 CH4SC0_F1_BELL_000
                      02995         PLAY    HNDL_SC0_BELL1,no_loop,loop_STD 
                          M         list ;2 byte PLAY  [HANDLE]
000AEA 3040               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_BELL1 & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      02996         MASK_COMPARE    SCV_FEATURE2_DISABLE,IMMED_DATA,0x01,COMP_bit1,SKIP_SAME                ;SKIP_LE
000AEC B9FC FD01          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_FEATURE2_DISABLE,0x01,COMP_bit1
                      02997                 BRANCH_TO       CH4SC0_F1_BELL_DELAY    
                          M         
                          M         if      (CH4SC0_F1_BELL_DELAY-SKEME_BASE) > 0xFFF           ;check branch size in SCHEME
                          M                 error   CH4SC0_F1_BELL_DELAY range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000AF0 FECA               M                 DB      CMD_GOTO_SND + ((high (CH4SC0_F1_BELL_DELAY-SKEME_BASE)) & 0x0F) , low (CH4SC0_F
                          M         endif
                          M                 
                      02998                 
                      02999         DELAY_SOUND     DELAY_CV,SCV_BELL_RING_RATE,DELAY_GLOBAL
000AF2 91B5               M                 DB      CMD_DELAY_SND + (DELAY_GLOBAL & 0x01), (SCV_BELL_RING_RATE & 0x7F)+DELAY_CV 
                      03000         ;chain bell
                      03001         ;END_SOUND
                      03002         ; uncomment to have only 1 bell sound fragments
                      03003         
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 101
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03004 ;CV150= 01 SECOND BELL
000AF4                03005 CH4SC0_F1_BELL_001   
                      03006 
                      03007         PLAY    HNDL_SC0_BELL2,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
000AF4 3140               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_BELL2 & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      03008         MASK_COMPARE    SCV_FEATURE2_DISABLE,IMMED_DATA,0x01,COMP_bit1,SKIP_SAME                ;SKIP_LE
000AF6 B9FC FD01          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_FEATURE2_DISABLE,0x01,COMP_bit1
                      03009                 BRANCH_TO       CH4SC0_F1_BELL_DELAY    
                          M         
                          M         if      (CH4SC0_F1_BELL_DELAY-SKEME_BASE) > 0xFFF           ;check branch size in SCHEME
                          M                 error   CH4SC0_F1_BELL_DELAY range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000AFA FECA               M                 DB      CMD_GOTO_SND + ((high (CH4SC0_F1_BELL_DELAY-SKEME_BASE)) & 0x0F) , low (CH4SC0_F
                          M         endif
                          M                 
                      03010 
                      03011         DELAY_SOUND     DELAY_CV,SCV_BELL_RING_RATE,DELAY_GLOBAL        
000AFC 91B5               M                 DB      CMD_DELAY_SND + (DELAY_GLOBAL & 0x01), (SCV_BELL_RING_RATE & 0x7F)+DELAY_CV 
                      03012         
                      03013         ;END_SOUND
                      03014         
                      03015 ;CV150= 02 THIRD BELL
                      03016 ;CH4SC0_F1_BELL_002  
                      03017 
                      03018 ;       PLAY    HNDL_SC0_BELL3,no_loop,loop_STD
                      03019 ;       MASK_COMPARE    SCV_FEATURE2_DISABLE,IMMED_DATA,0x01,COMP_bit1,SKIP_SAME                ;SKIP_LE
                      03020 ;               BRANCH_TO       CH4SC0_F1_BELL_DELAY    
                      03021 
                      03022 ;       DELAY_SOUND     DELAY_CV,SCV_BELL_RING_RATE,DELAY_GLOBAL        
                      03023         
                      03024 ;       ;END_SOUND
                      03025         
                      03026 ;CV150= 03 FORTH BELL
                      03027 ;CH4SC0_F1_BELL_003  
                      03028 
                      03029 ;       PLAY    HNDL_SC0_BELL4,no_loop,loop_STD
                      03030 ;       MASK_COMPARE    SCV_FEATURE2_DISABLE,IMMED_DATA,0x01,COMP_bit1,SKIP_SAME                ;SKIP_LE
                      03031 ;               BRANCH_TO       CH4SC0_F1_BELL_DELAY    
                      03032 
                      03033 ;       DELAY_SOUND     DELAY_CV,SCV_BELL_RING_RATE,DELAY_GLOBAL        
                      03034         
                      03035 ;       ;END_SOUND
                      03036         
                      03037         
000AFE                03038 CH4SC0_F1_BELL_DELAY
                      03039         DELAY_SOUND     DELAY_CV,SCV_BELL_RING_RATE,DELAY_GLOBAL        
000AFE 91B5               M                 DB      CMD_DELAY_SND + (DELAY_GLOBAL & 0x01), (SCV_BELL_RING_RATE & 0x7F)+DELAY_CV 
                      03040         
                      03041         END_SOUND
000B00 0000               M                 DB      CMD_END_SND,0
                      03042 
                      03043            
                      03044 
                      03045 
                      03046 ; -------------------------------------------------------------
                      03047 ;   FUNCTION KEY SF3 - UNCOUPLE  ! take up slack
                      03048 ; -------------------------------------------------------------
                      03049         INITIATE_SOUND TRIG_UNCOUPLE_ON,NOT_TRIG                        ; Play sound when SF3 is release
000B02 9890               M                 DB      CMD_INITIATE_SND + ((NOT_TRIG) & 0x07), TRIG_UNCOUPLE_ON +((NOT_TRIG) & 0x80)
  00000028                M ICNT += 1
                          M 
                      03050         MASK_COMPARE    WORK_SPEED,IMMED_DATA,0x01,COMP_ALL,SKIP_GRTR           ; Check if stopped
000B04 00FF 0001          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,WORK_SPEED,0x01,COMP_ALL
                      03051                 BRANCH_TO       CH9SC0_UNCOUPLE
                          M         
                          M         if      (CH9SC0_UNCOUPLE-SKEME_BASE) > 0xFFF                ;check branch size in SCHEME
                          M                 error   CH9SC0_UNCOUPLE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 102
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         else
000B08 0CCB               M                 DB      CMD_GOTO_SND + ((high (CH9SC0_UNCOUPLE-SKEME_BASE)) & 0x0F) , low (CH9SC0_UNCOUP
                          M         endif
                          M                 
                      03052         BRANCH_TO       CH9SC0_BRAKE_RELEASE
                          M         
                          M         if      (CH9SC0_BRAKE_RELEASE-SKEME_BASE) > 0xFFF           ;check branch size in SCHEME
                          M                 error   CH9SC0_BRAKE_RELEASE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000B0A 14CB               M                 DB      CMD_GOTO_SND + ((high (CH9SC0_BRAKE_RELEASE-SKEME_BASE)) & 0x0F) , low (CH9SC0_B
                          M         endif
                          M                 
                      03053                 
000B0C                03054 CH9SC0_UNCOUPLE 
                      03055         LOAD_MODIFIER MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_COUPLER_VOLUME,SCALE_E   ; Volume set    
000B0C 80E1 0EB0          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_COUPLER_VOLUME,SCALE_E
                      03056         PLAY    HNDL_SC0_UNCOUPLE_BEGIN,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
000B10 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_UNCOUPLE_BEGIN & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTH
000B12 2B00               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_UNCOUPLE_BEGIN & 0x3F)+((no_loop<<6)&0x
                          M         list
                      03057          
000B14                03058 CH9SC0_BRAKE_RELEASE
                      03059         LOAD_MODIFIER MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_LETOFF_VOLUME,SCALE_B
000B14 80E1 0BB5          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_LETOFF_VOLUME,SCALE_B
                      03060 
                      03061         PLAY    HNDL_SC0_BRAKE_BAIL_OFFOFF,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
000B18 3B40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_BRAKE_BAIL_OFFOFF & 0x3F)+((no_loo
                          M         list
                      03062         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+AIR_PRESS,-0x15,0   ;decrease
000B1A BDE6 00EB          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+AIR_PRESS,-0x15,0
                      03063         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_MOVING
000B1E 0E04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_MOVING 
                      03064                 PLAY    HNDL_SC0_UNCOUPLE_DISCONNECT,no_loop,loop_STD                                   
                          M         list ;4 byte XPLAY      [HANDLE]
000B20 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_UNCOUPLE_DISCONNECT & 0xC0)+1 ;ADD REV PLAY FLAG PLU
000B22 2C00               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_UNCOUPLE_DISCONNECT & 0x3F)+((no_loop<<
                          M         list
                      03065 
                      03066         END_SOUND
000B24 0000               M                 DB      CMD_END_SND,0
                      03067         
                      03068         
                      03069 ; -------------------------------------------------------------
                      03070 ;   FUNCTION KEY SF3 - UNCOUPLE  ! lift ring
                      03071 ; -------------------------------------------------------------
                      03072         INITIATE_SOUND TRIG_UNCOUPLE_ON,NORMAL                  ; Play lift ring sound when SF3 ON
000B26 1890               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), TRIG_UNCOUPLE_ON +((NORMAL) & 0x80)
  00000029                M ICNT += 1
                          M 
                      03073         ;set COUPLER_INTLK5 interlock:
                      03074         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_AND+USER_INTLK_BITS,~COUPLER_MASK5,MERGE_ALL_MASK        
000B28 3EE6 00DF          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_AND+USER_INTLK_BITS,~COUPLER_MASK5
                      03075         LOAD_MODIFIER MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_COUPLER_VOLUME,SCALE_D   ; Volume set 
000B2C 80E1 0DB0          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_COUPLER_VOLUME,SCALE_D
                      03076         PLAY    HNDL_SC0_UNCOUPLE_BEGIN,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
000B30 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_UNCOUPLE_BEGIN & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTH
000B32 2B00               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_UNCOUPLE_BEGIN & 0x3F)+((no_loop<<6)&0x
                          M         list
                      03077         ;SKIP_ON_TRIGGER TRIG_FALSE,TRIG_MOVING
                      03078                 PLAY    HNDL_SC0_UNCOUPLE_DISCONNECT,no_loop,loop_STD   
                          M         list ;4 byte XPLAY      [HANDLE]
000B34 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_UNCOUPLE_DISCONNECT & 0xC0)+1 ;ADD REV PLAY FLAG PLU
000B36 2C00               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_UNCOUPLE_DISCONNECT & 0x3F)+((no_loop<<
                          M         list
                      03079                 
                      03080         END_SOUND
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 103
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B38 0000               M                 DB      CMD_END_SND,0
                      03081           
                      03082           
                      03083 ; -------------------------------------------------------------
                      03084 ;   FUNCTION KEY SF3 - COUPLE  ! COUPLE
                      03085 ; -------------------------------------------------------------
                      03086         INITIATE_SOUND TRIG_COUPLE_ON,NORMAL                    ;  sound when SF3 ON
000B3A 0A90               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), TRIG_COUPLE_ON +((NORMAL) & 0x80)
  0000002A                M ICNT += 1
                          M 
                      03087         ;set COUPLER_INTLK5 interlock:
                      03088         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_AND+USER_INTLK_BITS,~COUPLER_MASK5,MERGE_ALL_MASK        
000B3C 3EE6 00DF          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_AND+USER_INTLK_BITS,~COUPLER_MASK5
                      03089         LOAD_MODIFIER MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_COUPLER_VOLUME,SCALE_D   ; Volume set 
000B40 80E1 0DB0          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_COUPLER_VOLUME,SCALE_D
                      03090         PLAY    HNDL_SC0_COUPLER_LIFT_RING,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
000B44 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_COUPLER_LIFT_RING & 0xC0)+1 ;ADD REV PLAY FLAG PLUS 
000B46 2800               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_COUPLER_LIFT_RING & 0x3F)+((no_loop<<6)
                          M         list
                      03091         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_MOVING
000B48 0E04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_MOVING 
                      03092                 PLAY    HNDL_SC0_COUPLER_CLASH,no_loop,loop_STD         
                          M         list ;4 byte XPLAY      [HANDLE]
000B4A 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_COUPLER_CLASH & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHE
000B4C 2900               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_COUPLER_CLASH & 0x3F)+((no_loop<<6)&0xC
                          M         list
                      03093                 
                      03094         END_SOUND
000B4E 0000               M                 DB      CMD_END_SND,0
                      03095           
                      03096 ; -------------------------------------------------------------
                      03097 ;   FUNCTION KEY SF7 - WHEEL FLANGE  !
                      03098 ; -------------------------------------------------------------
                      03099         INITIATE_SOUND TRIG_FLANGES_ON,NOT_TRIG         ; Interrupt play
000B50 9290               M                 DB      CMD_INITIATE_SND + ((NOT_TRIG) & 0x07), TRIG_FLANGES_ON +((NOT_TRIG) & 0x80)
  0000002B                M ICNT += 1
                          M 
                      03100         LOAD_MODIFIER MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_LETOFF_VOLUME,SCALE_A    
000B52 80E1 0AB5          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_LETOFF_VOLUME,SCALE_A
                      03101 
                      03102         ;PLAY HNDL_SC0_ABOUT,no_loop,loop_STD   ;DEBUG2
                      03103 
                      03104         ;Set AUTOMATIC BRAKING INTERLOCK On =1
                      03105         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_AND+USER_INTLK_BITS,~AUTO_BRAKE_MASK2,MERGE_ALL_MASK     
000B56 3EE6 00FB          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_AND+USER_INTLK_BITS,~AUTO_BRAKE_MA
                      03106         END_SOUND       
000B5A 0000               M                 DB      CMD_END_SND,0
                      03107                  
                      03108 ; -------------------------------------------------------------
                      03109         INITIATE_SOUND TRIG_FLANGES_ON,NORMAL+ZAP                       ; Play sound when SF7 is pressed
000B5C 1291               M                 DB      CMD_INITIATE_SND + ((NORMAL+ZAP) & 0x07), TRIG_FLANGES_ON +((NORMAL+ZAP) & 0x80)
  0000002C                M ICNT += 1
                          M 
                      03110         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_MISC_VOLUME,SCALE_A    ; Volume set by Misc Vol
000B5E 80E1 0A90          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_MISC_VOLUME,SCALE_A
000B62                03111 CH9SC0_WHEEL_SOUND2
                      03112 
                      03113         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_MOVING
000B62 0E04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_MOVING 
                      03114                 BRANCH_TO       CH9SC0_WHEEL_SOUND
                          M         
                          M         if      (CH9SC0_WHEEL_SOUND-SKEME_BASE) > 0xFFF             ;check branch size in SCHEME
                          M                 error   CH9SC0_WHEEL_SOUND range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000B64 68CB               M                 DB      CMD_GOTO_SND + ((high (CH9SC0_WHEEL_SOUND-SKEME_BASE)) & 0x0F) , low (CH9SC0_WHE
                          M         endif
                          M                 
                      03115         BRANCH_TO       CH9SC0_NO_WHEEL_SOUND
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 104
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         
                          M         if      (CH9SC0_NO_WHEEL_SOUND-SKEME_BASE) > 0xFFF          ;check branch size in SCHEME
                          M                 error   CH9SC0_NO_WHEEL_SOUND range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000B66 8ACB               M                 DB      CMD_GOTO_SND + ((high (CH9SC0_NO_WHEEL_SOUND-SKEME_BASE)) & 0x0F) , low (CH9SC0_
                          M         endif
                          M                 
                      03116 ;-
000B68                03117 CH9SC0_WHEEL_SOUND
                      03118 
                      03119         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_BRAKE_VOLUME,SCALE_C   ;12/19/17
000B68 80E1 0C8F          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_BRAKE_VOLUME,SCALE_C
                      03120         PLAY    HNDL_SC0_WHEEL_FLANGE1,loop_till_FLANGES_OFF,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
000B6C 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_WHEEL_FLANGE1 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHE
000B6E B604               M                 DB      ((loop_till_FLANGES_OFF>>2)&0x07)+loop_STD, (HNDL_SC0_WHEEL_FLANGE1 & 0x3F)+((lo
                          M         list
                      03121         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_BRAKE_VOLUME,SCALE_D   ;12/19/17
000B70 80E1 0D8F          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_BRAKE_VOLUME,SCALE_D
                      03122         PLAY    HNDL_SC0_WHEEL_FLANGE2,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
000B74 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_WHEEL_FLANGE2 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHE
000B76 3700               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_WHEEL_FLANGE2 & 0x3F)+((no_loop<<6)&0xC
                          M         list
                      03123         LOAD_MODIFIER   MTYPE_PITCH,ANALOG_PITCH_MODIFY+WORK_SPEED,MAXP_DIESEL,DITHERP_DIESEL           
000B78 A0E2 003E          M                 DB      CMD_LOAD_MODIFY+(MTYPE_PITCH&0x0F),ANALOG_PITCH_MODIFY+WORK_SPEED,MAXP_DIESEL,DI
                      03124         
                      03125         PLAY    HNDL_SC0_WHEEL_FLANGE2,loop_till_FLANGES_OFF,loop_INVERT
                          M         list ;4 byte XPLAY      [HANDLE]
000B7C 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_WHEEL_FLANGE2 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHE
000B7E B70C               M                 DB      ((loop_till_FLANGES_OFF>>2)&0x07)+loop_INVERT, (HNDL_SC0_WHEEL_FLANGE2 & 0x3F)+(
                          M         list
                      03126         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_BRAKE_VOLUME,SCALE_C   ;12/19/17
000B80 80E1 0C8F          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_BRAKE_VOLUME,SCALE_C
                      03127         PLAY    HNDL_SC0_WHEEL_FLANGE1,no_loop,loop_STD                   
                          M         list ;4 byte XPLAY      [HANDLE]
000B84 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_WHEEL_FLANGE1 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHE
000B86 3600               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_WHEEL_FLANGE1 & 0x3F)+((no_loop<<6)&0xC
                          M         list
                      03128 
                      03129         END_SOUND
000B88 0000               M                 DB      CMD_END_SND,0
                      03130          
                      03131 
000B8A                03132 CH9SC0_NO_WHEEL_SOUND           
                      03133         LOAD_MODIFIER MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_MISC_VOLUME,SCALE_B
000B8A 80E1 0B90          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_MISC_VOLUME,SCALE_B
                      03134         END_SOUND
000B8E 0000               M                 DB      CMD_END_SND,0
                      03135         
                      03136         
                      03137 ;------------------------------------------------
                      03138 ;-----------  PERSISTENT air compressor on TIMER/speed and SF20,*** 11/21 BRK/zap with BELL or DYNAMICS!
                      03139 ;------------------------------------------------
                      03140         INITIATE_SOUND  TRIG_SCAT1,NORMAL               ;NORMAL+ZAP             ;RUN_WHILE_TRIG 
000B90 6190               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), TRIG_SCAT1 +((NORMAL) & 0x80)
  0000002D                M ICNT += 1
                          M 
000B92                03141 CH8SC0_AIR_PLAY
                      03142         ;interlock scatter event handler here to prevent play after disable.
                      03143         MASK_COMPARE    USER_INTLK_BITS,IMMED_DATA,COMP_MASK0,~COMP_MASK0,SKIP_SAME     ;bit0   COMPRESS
000B92 1EFC FE01          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,USER_INTLK_BITS,COMP_MASK0,~COMP_MASK0
                      03144                 END_SOUND       
000B96 0000               M                 DB      CMD_END_SND,0
                      03145         MASK_COMPARE    WORK_STATUS_BITS,IMMED_DATA,WKSB_INTERLOCK_MASK,~WKSB_INTERLOCK_MASK,SKIP_SAME ;
000B98 07FC DF20          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,WORK_STATUS_BITS,WKSB_INTERLOCK_MASK,~WKSB
                      03146                 END_SOUND        ;interlock is 00, freeze               ;Skipped when ARG1 = ARG2
000B9C 0000               M                 DB      CMD_END_SND,0
                      03147 
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 105
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03148         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_COMPR_ON                ;disable
000B9E 1F04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_COMPR_ON 
                      03149                 END_SOUND
000BA0 0000               M                 DB      CMD_END_SND,0
                      03150                         
                      03151         MASK_COMPARE    WORK_STATUS_BITS,IMMED_DATA,WKSB_INTERLOCK_MASK,~WKSB_INTERLOCK_MASK,SKIP_SAME ;
000BA2 07FC DF20          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,WORK_STATUS_BITS,WKSB_INTERLOCK_MASK,~WKSB
                      03152                 BRANCH_TO       CH8SC0_NO_COMP ;until startup done
                          M         
                          M         if      (CH8SC0_NO_COMP-SKEME_BASE) > 0xFFF                 ;check branch size in SCHEME
                          M                 error   CH8SC0_NO_COMP range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000BA6 8ACC               M                 DB      CMD_GOTO_SND + ((high (CH8SC0_NO_COMP-SKEME_BASE)) & 0x0F) , low (CH8SC0_NO_COMP
                          M         endif
                          M                 
                      03153  
                      03154         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_COMPRESSOR_PUMP_VOLUME,SCALE_A
000BA8 80E1 0AAE          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_COMPRESSOR_PUMP_VOLUME,S
                      03155         
                      03156         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_MOVING
000BAC 0E04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_MOVING 
                      03157                 LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_COMPRESSOR_PUMP_VOLUME,SCALE_B
000BAE 80E1 0BAE          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_COMPRESSOR_PUMP_VOLUME,S
                      03158         PLAY    HNDL_SC0_AIR_DRYER1,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
000BB2 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AIR_DRYER1 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER B
000BB4 1B00               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_AIR_DRYER1 & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      03159 
000BB6                03160 CH8SC0_AIR_SEQ
                      03161         LOAD_MODIFIER   MTYPE_SCATTER,SCAT_CMD_PERIOD+SCAT_CHNL1,AIR_PRESSURE_LIMIT,SINTEN_LOW+WORK_SPEE
000BB6 21E4 4058          M                 DB      CMD_LOAD_MODIFY+(MTYPE_SCATTER&0x0F),SCAT_CMD_PERIOD+SCAT_CHNL1,AIR_PRESSURE_LIM
                      03162         PLAY    HNDL_SC0_AIRCOMP_START,no_loop,loop_STD 
                          M         list ;4 byte XPLAY      [HANDLE]
000BBA 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AIRCOMP_START & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHE
000BBC 0400               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_AIRCOMP_START & 0x3F)+((no_loop<<6)&0xC
                          M         list
                      03163         
000BBE                03164 CH8SC0_AIR_LOOPER
                      03165 
                      03166         ;SKIP_ON_TRIGGER TRIG_FALSE,TRIG_COMPR_ON               ;disable
                      03167         ;       END_SOUND
                      03168 
                      03169         ;Shaft driven compressor: 1/11/2015     
                      03170         ;Electronic (NOT SHAFT DRIVEN) Compressor:
                      03171         MASK_COMPARE    SCV_FEATURE2_DISABLE,IMMED_DATA,0x01,COMP_bit4,SKIP_SAME                ;SKIP_LE
000BBE B9FC EF01          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_FEATURE2_DISABLE,0x01,COMP_bit4
                      03172                 BRANCH_TO       CH8SC0_NOT_SHAFT_DRIVEN
                          M         
                          M         if      (CH8SC0_NOT_SHAFT_DRIVEN-SKEME_BASE) > 0xFFF        ;check branch size in SCHEME
                          M                 error   CH8SC0_NOT_SHAFT_DRIVEN range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000BC2 C6CB               M                 DB      CMD_GOTO_SND + ((high (CH8SC0_NOT_SHAFT_DRIVEN-SKEME_BASE)) & 0x0F) , low (CH8SC
                          M         endif
                          M                 
                      03173         BRANCH_TO       CH8SC0_SHAFT_DRIVEN
                          M         
                          M         if      (CH8SC0_SHAFT_DRIVEN-SKEME_BASE) > 0xFFF            ;check branch size in SCHEME
                          M                 error   CH8SC0_SHAFT_DRIVEN range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000BC4 D8CB               M                 DB      CMD_GOTO_SND + ((high (CH8SC0_SHAFT_DRIVEN-SKEME_BASE)) & 0x0F) , low (CH8SC0_SH
                          M         endif
                          M                 
                      03174         
000BC6                03175 CH8SC0_NOT_SHAFT_DRIVEN
                      03176         ;play only one sound fragment:
                      03177         LOAD_MODIFIER   MTYPE_PITCH,ANALOG_PITCH_MODIFY+0x0+WORK_SPEED,MAXP_DIESEL,DITHERP_DIESEL
000BC6 A0E2 003E          M                 DB      CMD_LOAD_MODIFY+(MTYPE_PITCH&0x0F),ANALOG_PITCH_MODIFY+0x0+WORK_SPEED,MAXP_DIESE
                      03178                 
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 106
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03179         ;estop is on:
                      03180         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_ESTOP_ON                ;disable
000BCA 1604               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_ESTOP_ON 
                      03181                 END_SOUND
000BCC 0000               M                 DB      CMD_END_SND,0
                      03182                 
                      03183         PLAY    HNDL_SC0_AIRCOMP_RUN1,no_loop,loop_INVERT       
                          M         list ;4 byte XPLAY      [HANDLE]
000BCE 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AIRCOMP_RUN1 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER
000BD0 0708               M                 DB      ((no_loop>>2)&0x07)+loop_INVERT, (HNDL_SC0_AIRCOMP_RUN1 & 0x3F)+((no_loop<<6)&0x
                          M         list
                      03184         PLAY    HNDL_SC0_AIRCOMP_RUN1,no_loop,loop_INVERT       
                          M         list ;4 byte XPLAY      [HANDLE]
000BD2 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AIRCOMP_RUN1 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER
000BD4 0708               M                 DB      ((no_loop>>2)&0x07)+loop_INVERT, (HNDL_SC0_AIRCOMP_RUN1 & 0x3F)+((no_loop<<6)&0x
                          M         list
                      03185         BRANCH_TO       CH8SC0_AIR_LOOP_END
                          M         
                          M         if      (CH8SC0_AIR_LOOP_END-SKEME_BASE) > 0xFFF            ;check branch size in SCHEME
                          M                 error   CH8SC0_AIR_LOOP_END range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000BD6 6ECC               M                 DB      CMD_GOTO_SND + ((high (CH8SC0_AIR_LOOP_END-SKEME_BASE)) & 0x0F) , low (CH8SC0_AI
                          M         endif
                          M                 
                      03186 
                      03187                         
000BD8                03188 CH8SC0_SHAFT_DRIVEN
                      03189         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_COMPRESSOR_PUMP_VOLUME,SCALE_A
000BD8 80E1 0AAE          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_COMPRESSOR_PUMP_VOLUME,S
                      03190         LOAD_MODIFIER   MTYPE_PITCH,ANALOG_PITCH_MODIFY+0x0+WORK_SPEED,MAXP_DIESEL,DITHERP_DIESEL       
000BDC A0E2 003E          M                 DB      CMD_LOAD_MODIFY+(MTYPE_PITCH&0x0F),ANALOG_PITCH_MODIFY+0x0+WORK_SPEED,MAXP_DIESE
                      03191 
                      03192         ;estop is on:
                      03193         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_ESTOP_ON                ;disable
000BE0 1604               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_ESTOP_ON 
                      03194                 END_SOUND
000BE2 0000               M                 DB      CMD_END_SND,0
                      03195                 
000BE4                03196 CH8SC0_AIR_CK8
                      03197         MASK_COMPARE    WORK_NOTCH,IMMED_DATA,NOTCH8,COMP_ALL,SKIP_SAME    ;PLAY if Equal
000BE4 01FC 0070          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,WORK_NOTCH,NOTCH8,COMP_ALL
                      03198                 BRANCH_TO       CH8SC0_AIR_CK7
                          M         
                          M         if      (CH8SC0_AIR_CK7-SKEME_BASE) > 0xFFF                 ;check branch size in SCHEME
                          M                 error   CH8SC0_AIR_CK7 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000BE8 F6CB               M                 DB      CMD_GOTO_SND + ((high (CH8SC0_AIR_CK7-SKEME_BASE)) & 0x0F) , low (CH8SC0_AIR_CK7
                          M         endif
                          M                 
                      03199         BRANCH_TO       CH8SC0_AIR_RUN8
                          M         
                          M         if      (CH8SC0_AIR_RUN8-SKEME_BASE) > 0xFFF                ;check branch size in SCHEME
                          M                 error   CH8SC0_AIR_RUN8 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000BEA ECCB               M                 DB      CMD_GOTO_SND + ((high (CH8SC0_AIR_RUN8-SKEME_BASE)) & 0x0F) , low (CH8SC0_AIR_RU
                          M         endif
                          M                 
                      03200         
000BEC                03201 CH8SC0_AIR_RUN8
                      03202         PLAY    HNDL_SC0_AIRCOMP_RUN8,no_loop,loop_INVERT
                          M         list ;4 byte XPLAY      [HANDLE]
000BEC 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AIRCOMP_RUN8 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER
000BEE 0E08               M                 DB      ((no_loop>>2)&0x07)+loop_INVERT, (HNDL_SC0_AIRCOMP_RUN8 & 0x3F)+((no_loop<<6)&0x
                          M         list
                      03203         PLAY    HNDL_SC0_AIRCOMP_RUN8,no_loop,loop_INVERT       
                          M         list ;4 byte XPLAY      [HANDLE]
000BF0 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AIRCOMP_RUN8 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER
000BF2 0E08               M                 DB      ((no_loop>>2)&0x07)+loop_INVERT, (HNDL_SC0_AIRCOMP_RUN8 & 0x3F)+((no_loop<<6)&0x
                          M         list
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 107
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03204         BRANCH_TO       CH8SC0_AIR_LOOP_END
                          M         
                          M         if      (CH8SC0_AIR_LOOP_END-SKEME_BASE) > 0xFFF            ;check branch size in SCHEME
                          M                 error   CH8SC0_AIR_LOOP_END range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000BF4 6ECC               M                 DB      CMD_GOTO_SND + ((high (CH8SC0_AIR_LOOP_END-SKEME_BASE)) & 0x0F) , low (CH8SC0_AI
                          M         endif
                          M                 
                      03205         
000BF6                03206 CH8SC0_AIR_CK7
                      03207         MASK_COMPARE    WORK_NOTCH,IMMED_DATA,NOTCH7,COMP_ALL,SKIP_SAME    ;PLAY if Equal
000BF6 01FC 0060          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,WORK_NOTCH,NOTCH7,COMP_ALL
                      03208                 BRANCH_TO       CH8SC0_AIR_CK6
                          M         
                          M         if      (CH8SC0_AIR_CK6-SKEME_BASE) > 0xFFF                 ;check branch size in SCHEME
                          M                 error   CH8SC0_AIR_CK6 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000BFA 06CC               M                 DB      CMD_GOTO_SND + ((high (CH8SC0_AIR_CK6-SKEME_BASE)) & 0x0F) , low (CH8SC0_AIR_CK6
                          M         endif
                          M                 
                      03209                 
000BFC                03210 CH8SC0_AIR_RUN7
                      03211         PLAY    HNDL_SC0_AIRCOMP_RUN7,no_loop,loop_INVERT
                          M         list ;4 byte XPLAY      [HANDLE]
000BFC 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AIRCOMP_RUN7 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER
000BFE 0D08               M                 DB      ((no_loop>>2)&0x07)+loop_INVERT, (HNDL_SC0_AIRCOMP_RUN7 & 0x3F)+((no_loop<<6)&0x
                          M         list
                      03212         PLAY    HNDL_SC0_AIRCOMP_RUN7,no_loop,loop_INVERT               
                          M         list ;4 byte XPLAY      [HANDLE]
000C00 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AIRCOMP_RUN7 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER
000C02 0D08               M                 DB      ((no_loop>>2)&0x07)+loop_INVERT, (HNDL_SC0_AIRCOMP_RUN7 & 0x3F)+((no_loop<<6)&0x
                          M         list
                      03213         BRANCH_TO       CH8SC0_AIR_LOOP_END
                          M         
                          M         if      (CH8SC0_AIR_LOOP_END-SKEME_BASE) > 0xFFF            ;check branch size in SCHEME
                          M                 error   CH8SC0_AIR_LOOP_END range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000C04 6ECC               M                 DB      CMD_GOTO_SND + ((high (CH8SC0_AIR_LOOP_END-SKEME_BASE)) & 0x0F) , low (CH8SC0_AI
                          M         endif
                          M                 
                      03214                 
000C06                03215 CH8SC0_AIR_CK6
                      03216         MASK_COMPARE    WORK_NOTCH,IMMED_DATA,NOTCH6,COMP_ALL,SKIP_SAME    ;PLAY if Equal
000C06 01FC 0050          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,WORK_NOTCH,NOTCH6,COMP_ALL
                      03217                 BRANCH_TO       CH8SC0_AIR_CK5
                          M         
                          M         if      (CH8SC0_AIR_CK5-SKEME_BASE) > 0xFFF                 ;check branch size in SCHEME
                          M                 error   CH8SC0_AIR_CK5 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000C0A 16CC               M                 DB      CMD_GOTO_SND + ((high (CH8SC0_AIR_CK5-SKEME_BASE)) & 0x0F) , low (CH8SC0_AIR_CK5
                          M         endif
                          M                 
                      03218                 
000C0C                03219 CH8SC0_AIR_RUN6
                      03220         PLAY    HNDL_SC0_AIRCOMP_RUN6,no_loop,loop_INVERT       
                          M         list ;4 byte XPLAY      [HANDLE]
000C0C 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AIRCOMP_RUN6 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER
000C0E 0C08               M                 DB      ((no_loop>>2)&0x07)+loop_INVERT, (HNDL_SC0_AIRCOMP_RUN6 & 0x3F)+((no_loop<<6)&0x
                          M         list
                      03221         PLAY    HNDL_SC0_AIRCOMP_RUN6,no_loop,loop_INVERT       
                          M         list ;4 byte XPLAY      [HANDLE]
000C10 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AIRCOMP_RUN6 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER
000C12 0C08               M                 DB      ((no_loop>>2)&0x07)+loop_INVERT, (HNDL_SC0_AIRCOMP_RUN6 & 0x3F)+((no_loop<<6)&0x
                          M         list
                      03222         BRANCH_TO       CH8SC0_AIR_LOOP_END
                          M         
                          M         if      (CH8SC0_AIR_LOOP_END-SKEME_BASE) > 0xFFF            ;check branch size in SCHEME
                          M                 error   CH8SC0_AIR_LOOP_END range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 108
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C14 6ECC               M                 DB      CMD_GOTO_SND + ((high (CH8SC0_AIR_LOOP_END-SKEME_BASE)) & 0x0F) , low (CH8SC0_AI
                          M         endif
                          M                 
                      03223                 
000C16                03224 CH8SC0_AIR_CK5
                      03225         MASK_COMPARE    WORK_NOTCH,IMMED_DATA,NOTCH5,COMP_ALL,SKIP_SAME    ;PLAY if Equal
000C16 01FC 0040          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,WORK_NOTCH,NOTCH5,COMP_ALL
                      03226                 BRANCH_TO       CH8SC0_AIR_CK4
                          M         
                          M         if      (CH8SC0_AIR_CK4-SKEME_BASE) > 0xFFF                 ;check branch size in SCHEME
                          M                 error   CH8SC0_AIR_CK4 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000C1A 26CC               M                 DB      CMD_GOTO_SND + ((high (CH8SC0_AIR_CK4-SKEME_BASE)) & 0x0F) , low (CH8SC0_AIR_CK4
                          M         endif
                          M                 
                      03227                 
000C1C                03228 CH8SC0_AIR_RUN5
                      03229         PLAY    HNDL_SC0_AIRCOMP_RUN5,no_loop,loop_INVERT               
                          M         list ;4 byte XPLAY      [HANDLE]
000C1C 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AIRCOMP_RUN5 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER
000C1E 0B08               M                 DB      ((no_loop>>2)&0x07)+loop_INVERT, (HNDL_SC0_AIRCOMP_RUN5 & 0x3F)+((no_loop<<6)&0x
                          M         list
                      03230         PLAY    HNDL_SC0_AIRCOMP_RUN5,no_loop,loop_INVERT               
                          M         list ;4 byte XPLAY      [HANDLE]
000C20 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AIRCOMP_RUN5 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER
000C22 0B08               M                 DB      ((no_loop>>2)&0x07)+loop_INVERT, (HNDL_SC0_AIRCOMP_RUN5 & 0x3F)+((no_loop<<6)&0x
                          M         list
                      03231         BRANCH_TO       CH8SC0_AIR_LOOP_END
                          M         
                          M         if      (CH8SC0_AIR_LOOP_END-SKEME_BASE) > 0xFFF            ;check branch size in SCHEME
                          M                 error   CH8SC0_AIR_LOOP_END range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000C24 6ECC               M                 DB      CMD_GOTO_SND + ((high (CH8SC0_AIR_LOOP_END-SKEME_BASE)) & 0x0F) , low (CH8SC0_AI
                          M         endif
                          M                 
                      03232         
000C26                03233 CH8SC0_AIR_CK4
                      03234         MASK_COMPARE    WORK_NOTCH,IMMED_DATA,NOTCH4,COMP_ALL,SKIP_SAME    ;PLAY if Equal
000C26 01FC 0030          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,WORK_NOTCH,NOTCH4,COMP_ALL
                      03235                 BRANCH_TO       CH8SC0_AIR_CK3
                          M         
                          M         if      (CH8SC0_AIR_CK3-SKEME_BASE) > 0xFFF                 ;check branch size in SCHEME
                          M                 error   CH8SC0_AIR_CK3 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000C2A 36CC               M                 DB      CMD_GOTO_SND + ((high (CH8SC0_AIR_CK3-SKEME_BASE)) & 0x0F) , low (CH8SC0_AIR_CK3
                          M         endif
                          M                 
                      03236                 
000C2C                03237 CH8SC0_AIR_RUN4
                      03238         PLAY    HNDL_SC0_AIRCOMP_RUN4,no_loop,loop_INVERT
                          M         list ;4 byte XPLAY      [HANDLE]
000C2C 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AIRCOMP_RUN4 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER
000C2E 0A08               M                 DB      ((no_loop>>2)&0x07)+loop_INVERT, (HNDL_SC0_AIRCOMP_RUN4 & 0x3F)+((no_loop<<6)&0x
                          M         list
                      03239         PLAY    HNDL_SC0_AIRCOMP_RUN4,no_loop,loop_INVERT       
                          M         list ;4 byte XPLAY      [HANDLE]
000C30 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AIRCOMP_RUN4 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER
000C32 0A08               M                 DB      ((no_loop>>2)&0x07)+loop_INVERT, (HNDL_SC0_AIRCOMP_RUN4 & 0x3F)+((no_loop<<6)&0x
                          M         list
                      03240         BRANCH_TO       CH8SC0_AIR_LOOP_END
                          M         
                          M         if      (CH8SC0_AIR_LOOP_END-SKEME_BASE) > 0xFFF            ;check branch size in SCHEME
                          M                 error   CH8SC0_AIR_LOOP_END range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000C34 6ECC               M                 DB      CMD_GOTO_SND + ((high (CH8SC0_AIR_LOOP_END-SKEME_BASE)) & 0x0F) , low (CH8SC0_AI
                          M         endif
                          M                 
                      03241         
000C36                03242 CH8SC0_AIR_CK3
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 109
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03243         MASK_COMPARE    WORK_NOTCH,IMMED_DATA,NOTCH3,COMP_ALL,SKIP_SAME    ;PLAY if Equal
000C36 01FC 0020          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,WORK_NOTCH,NOTCH3,COMP_ALL
                      03244                 BRANCH_TO       CH8SC0_AIR_CK2
                          M         
                          M         if      (CH8SC0_AIR_CK2-SKEME_BASE) > 0xFFF                 ;check branch size in SCHEME
                          M                 error   CH8SC0_AIR_CK2 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000C3A 46CC               M                 DB      CMD_GOTO_SND + ((high (CH8SC0_AIR_CK2-SKEME_BASE)) & 0x0F) , low (CH8SC0_AIR_CK2
                          M         endif
                          M                 
                      03245 
000C3C                03246 CH8SC0_AIR_RUN3
                      03247         PLAY    HNDL_SC0_AIRCOMP_RUN3,no_loop,loop_INVERT       
                          M         list ;4 byte XPLAY      [HANDLE]
000C3C 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AIRCOMP_RUN3 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER
000C3E 0908               M                 DB      ((no_loop>>2)&0x07)+loop_INVERT, (HNDL_SC0_AIRCOMP_RUN3 & 0x3F)+((no_loop<<6)&0x
                          M         list
                      03248         PLAY    HNDL_SC0_AIRCOMP_RUN3,no_loop,loop_INVERT       
                          M         list ;4 byte XPLAY      [HANDLE]
000C40 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AIRCOMP_RUN3 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER
000C42 0908               M                 DB      ((no_loop>>2)&0x07)+loop_INVERT, (HNDL_SC0_AIRCOMP_RUN3 & 0x3F)+((no_loop<<6)&0x
                          M         list
                      03249         BRANCH_TO       CH8SC0_AIR_LOOP_END
                          M         
                          M         if      (CH8SC0_AIR_LOOP_END-SKEME_BASE) > 0xFFF            ;check branch size in SCHEME
                          M                 error   CH8SC0_AIR_LOOP_END range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000C44 6ECC               M                 DB      CMD_GOTO_SND + ((high (CH8SC0_AIR_LOOP_END-SKEME_BASE)) & 0x0F) , low (CH8SC0_AI
                          M         endif
                          M                 
                      03250                 
000C46                03251 CH8SC0_AIR_CK2
                      03252         MASK_COMPARE    WORK_NOTCH,IMMED_DATA,NOTCH2,COMP_ALL,SKIP_SAME    ;PLAY if Equal
000C46 01FC 0010          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,WORK_NOTCH,NOTCH2,COMP_ALL
                      03253                 BRANCH_TO       CH8SC0_AIR_CK1
                          M         
                          M         if      (CH8SC0_AIR_CK1-SKEME_BASE) > 0xFFF                 ;check branch size in SCHEME
                          M                 error   CH8SC0_AIR_CK1 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000C4A 56CC               M                 DB      CMD_GOTO_SND + ((high (CH8SC0_AIR_CK1-SKEME_BASE)) & 0x0F) , low (CH8SC0_AIR_CK1
                          M         endif
                          M                 
                      03254         
000C4C                03255 CH8SC0_AIR_RUN2
                      03256         PLAY    HNDL_SC0_AIRCOMP_RUN2,no_loop,loop_INVERT       
                          M         list ;4 byte XPLAY      [HANDLE]
000C4C 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AIRCOMP_RUN2 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER
000C4E 0808               M                 DB      ((no_loop>>2)&0x07)+loop_INVERT, (HNDL_SC0_AIRCOMP_RUN2 & 0x3F)+((no_loop<<6)&0x
                          M         list
                      03257         PLAY    HNDL_SC0_AIRCOMP_RUN2,no_loop,loop_INVERT       
                          M         list ;4 byte XPLAY      [HANDLE]
000C50 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AIRCOMP_RUN2 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER
000C52 0808               M                 DB      ((no_loop>>2)&0x07)+loop_INVERT, (HNDL_SC0_AIRCOMP_RUN2 & 0x3F)+((no_loop<<6)&0x
                          M         list
                      03258         BRANCH_TO       CH8SC0_AIR_LOOP_END
                          M         
                          M         if      (CH8SC0_AIR_LOOP_END-SKEME_BASE) > 0xFFF            ;check branch size in SCHEME
                          M                 error   CH8SC0_AIR_LOOP_END range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000C54 6ECC               M                 DB      CMD_GOTO_SND + ((high (CH8SC0_AIR_LOOP_END-SKEME_BASE)) & 0x0F) , low (CH8SC0_AI
                          M         endif
                          M                 
                      03259         
000C56                03260 CH8SC0_AIR_CK1
                      03261         MASK_COMPARE    WORK_NOTCH,IMMED_DATA,NOTCH1,COMP_ALL,SKIP_SAME    ;PLAY if Equal
000C56 01FC 0000          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,WORK_NOTCH,NOTCH1,COMP_ALL
                      03262                 BRANCH_TO       CH8SC0_AIR_RUN0
                          M         
                          M         if      (CH8SC0_AIR_RUN0-SKEME_BASE) > 0xFFF                ;check branch size in SCHEME
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 110
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                 error   CH8SC0_AIR_RUN0 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000C5A 66CC               M                 DB      CMD_GOTO_SND + ((high (CH8SC0_AIR_RUN0-SKEME_BASE)) & 0x0F) , low (CH8SC0_AIR_RU
                          M         endif
                          M                 
                      03263         
000C5C                03264 CH8SC0_AIR_RUN1
                      03265         PLAY    HNDL_SC0_AIRCOMP_RUN1,no_loop,loop_INVERT
                          M         list ;4 byte XPLAY      [HANDLE]
000C5C 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AIRCOMP_RUN1 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER
000C5E 0708               M                 DB      ((no_loop>>2)&0x07)+loop_INVERT, (HNDL_SC0_AIRCOMP_RUN1 & 0x3F)+((no_loop<<6)&0x
                          M         list
                      03266         PLAY    HNDL_SC0_AIRCOMP_RUN1,no_loop,loop_INVERT
                          M         list ;4 byte XPLAY      [HANDLE]
000C60 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AIRCOMP_RUN1 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER
000C62 0708               M                 DB      ((no_loop>>2)&0x07)+loop_INVERT, (HNDL_SC0_AIRCOMP_RUN1 & 0x3F)+((no_loop<<6)&0x
                          M         list
                      03267         BRANCH_TO       CH8SC0_AIR_LOOP_END
                          M         
                          M         if      (CH8SC0_AIR_LOOP_END-SKEME_BASE) > 0xFFF            ;check branch size in SCHEME
                          M                 error   CH8SC0_AIR_LOOP_END range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000C64 6ECC               M                 DB      CMD_GOTO_SND + ((high (CH8SC0_AIR_LOOP_END-SKEME_BASE)) & 0x0F) , low (CH8SC0_AI
                          M         endif
                          M                 
                      03268                 
000C66                03269 CH8SC0_AIR_RUN0
                      03270         PLAY    HNDL_SC0_AIRCOMP_LOW_IDLE,no_loop,loop_INVERT
                          M         list ;4 byte XPLAY      [HANDLE]
000C66 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AIRCOMP_LOW_IDLE & 0xC0)+1 ;ADD REV PLAY FLAG PLUS O
000C68 0508               M                 DB      ((no_loop>>2)&0x07)+loop_INVERT, (HNDL_SC0_AIRCOMP_LOW_IDLE & 0x3F)+((no_loop<<6
                          M         list
                      03271         PLAY    HNDL_SC0_AIRCOMP_LOW_IDLE,no_loop,loop_INVERT
                          M         list ;4 byte XPLAY      [HANDLE]
000C6A 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AIRCOMP_LOW_IDLE & 0xC0)+1 ;ADD REV PLAY FLAG PLUS O
000C6C 0508               M                 DB      ((no_loop>>2)&0x07)+loop_INVERT, (HNDL_SC0_AIRCOMP_LOW_IDLE & 0x3F)+((no_loop<<6
                          M         list
                      03272 
000C6E                03273 CH8SC0_AIR_LOOP_END     
                      03274         ;loop unitl max pressure:
                      03275         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+AIR_PRESS,+0x01,80   ;increment
000C6E BDE6 5001          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+AIR_PRESS,+0x01,80
                      03276         ;max AIR PRESSURE reset
                      03277         ;MIN_AIR_PRESS  EQU     40
                      03278         ;AIR_PRESSURE_LIMIT  ;notCV149 Compressor/Airpump run time              [88]
                      03279         ;AIR_PRESS              EQU WORK_USER_3 ; used to save current air or brake pressure
                      03280 
                      03281         MASK_COMPARE AIR_PRESS,IMMED_DATA,AIR_PRESSURE_LIMIT,COMP_ALL,SKIP_GRTR
000C72 1DFF 0058          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,AIR_PRESS,AIR_PRESSURE_LIMIT,COMP_ALL
                      03282                 BRANCH_TO       CH8SC0_AIR_LOOPER
                          M         
                          M         if      (CH8SC0_AIR_LOOPER-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH8SC0_AIR_LOOPER range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000C76 BECB               M                 DB      CMD_GOTO_SND + ((high (CH8SC0_AIR_LOOPER-SKEME_BASE)) & 0x0F) , low (CH8SC0_AIR_
                          M         endif
                          M                 
                      03283         BRANCH_TO       CH8SC0_AIR_PRESS_LIMIT
                          M         
                          M         if      (CH8SC0_AIR_PRESS_LIMIT-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH8SC0_AIR_PRESS_LIMIT range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000C78 7ACC               M                 DB      CMD_GOTO_SND + ((high (CH8SC0_AIR_PRESS_LIMIT-SKEME_BASE)) & 0x0F) , low (CH8SC0
                          M         endif
                          M                 
                      03284 
000C7A                03285 CH8SC0_AIR_PRESS_LIMIT
                      03286         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_LODE+AIR_PRESS,AIR_PRESSURE_LIMIT,0              ;CLEAR 
000C7A 1DE6 0058          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_LODE+AIR_PRESS,AIR_PRESSURE_LIMIT,
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 111
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03287         
000C7E                03288 CH8SC0_AIR_PRESS_EXIT
                      03289         PLAY    HNDL_SC0_AIRCOMP_END,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
000C7E 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AIRCOMP_END & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER 
000C80 0F00               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_AIRCOMP_END & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      03290         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_DRYER_VOLUME,SCALE_E
000C82 80E1 0EAD          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_DRYER_VOLUME,SCALE_E
                      03291 
                      03292         ;PLAY   HNDL_SC0_AIR_DRYER3,no_loop,loop_STD
                      03293         ;PLAY   HNDL_SC0_AIR_DRYER4,no_loop,loop_STD    
                      03294 
                      03295         LOAD_MODIFIER   MTYPE_SCATTER,SCAT_CMD_PERIOD+SCAT_CHNL1,AIRPUMP_START_RATE,SINTEN_LOW+WORK_SPEE
000C86 21E4 401E          M                 DB      CMD_LOAD_MODIFY+(MTYPE_SCATTER&0x0F),SCAT_CMD_PERIOD+SCAT_CHNL1,AIRPUMP_START_RA
                      03296         
000C8A                03297 CH8SC0_NO_COMP ;until startup done
                      03298         BRANCH_TO       CH15SC0_PLAY_DRYER
                          M         
                          M         if      (CH15SC0_PLAY_DRYER-SKEME_BASE) > 0xFFF             ;check branch size in SCHEME
                          M                 error   CH15SC0_PLAY_DRYER range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000C8A 74C7               M                 DB      CMD_GOTO_SND + ((high (CH15SC0_PLAY_DRYER-SKEME_BASE)) & 0x0F) , low (CH15SC0_PL
                          M         endif
                          M                 
                      03299         END_SOUND       
000C8C 0000               M                 DB      CMD_END_SND,0
                      03300         
                      03301         
                      03302         
                      03303 ;------------------------------------------------
                      03304 ;-----------  PERSISTENT vary load on TIMER/speed 
                      03305 ;       TRIM NOTCH AND IDLE
                      03306 ;------------------------------------------------
                      03307         INITIATE_SOUND  TRIG_SCAT5,NORMAL+ZAP           ;RUN_WHILE_TRIG                 
000C8E 6591               M                 DB      CMD_INITIATE_SND + ((NORMAL+ZAP) & 0x07), TRIG_SCAT5 +((NORMAL+ZAP) & 0x80)
  0000002E                M ICNT += 1
                          M 
                      03308         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+AIR_PRESS,-0x14,0   ;decrease
000C90 BDE6 00EC          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+AIR_PRESS,-0x14,0
                      03309         MASK_COMPARE COUNT_LOOP,IMMED_DATA,9,COMP_ALL,SKIP_LESS    
000C94 1AFE 0009          M                 DB      CMD_MASK_COMPARE+SKIP_LESS+IMMED_DATA,COUNT_LOOP,9,COMP_ALL
                      03310                 BRANCH_TO       CH13SC0_MOVING_EXIT
                          M         
                          M         if      (CH13SC0_MOVING_EXIT-SKEME_BASE) > 0xFFF            ;check branch size in SCHEME
                          M                 error   CH13SC0_MOVING_EXIT range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000C98 D2CC               M                 DB      CMD_GOTO_SND + ((high (CH13SC0_MOVING_EXIT-SKEME_BASE)) & 0x0F) , low (CH13SC0_M
                          M         endif
                          M                 
                      03311 
                      03312         ;aux or hep is running:
                      03313         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_AXGEN_ON; But branch if SF30 was previously on
000C9A 2404               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_AXGEN_ON 
                      03314                 END_SOUND       
000C9C 0000               M                 DB      CMD_END_SND,0
                      03315                 
                      03316         ;estop is on:
                      03317         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_ESTOP_ON                ;disable
000C9E 1604               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_ESTOP_ON 
                      03318                 END_SOUND
000CA0 0000               M                 DB      CMD_END_SND,0
                      03319                 
                      03320         ;in advanced consist:
                      03321         MASK_COMPARE    SCV_CV19,IMMED_DATA,1,COMP_ALL,SKIP_LESS
000CA2 12FE 0001          M                 DB      CMD_MASK_COMPARE+SKIP_LESS+IMMED_DATA,SCV_CV19,1,COMP_ALL
                      03322                 END_SOUND       ;WHEN IN ADVANCED CONSIST DO NOT AUTO VARY NOTCH SOUNDS...4/3/2015
000CA6 0000               M                 DB      CMD_END_SND,0
                      03323 
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 112
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03324         MASK_COMPARE    SCV_FEATURE2_DISABLE,IMMED_DATA,0x01,COMP_bit3,SKIP_SAME                ;SKIP_LE
000CA8 B9FC F701          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_FEATURE2_DISABLE,0x01,COMP_bit3
                      03325                 END_SOUND       
000CAC 0000               M                 DB      CMD_END_SND,0
                      03326         ;moving at all?:
                      03327         MASK_COMPARE    WORK_SPEED,IMMED_DATA,0x01,COMP_ALL,SKIP_GRTR ;compare current speed 
000CAE 00FF 0001          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,WORK_SPEED,0x01,COMP_ALL
                      03328                 BRANCH_TO       CH13SC0_MOVING_STOPPED  
                          M         
                          M         if      (CH13SC0_MOVING_STOPPED-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH13SC0_MOVING_STOPPED range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000CB2 CECC               M                 DB      CMD_GOTO_SND + ((high (CH13SC0_MOVING_STOPPED-SKEME_BASE)) & 0x0F) , low (CH13SC
                          M         endif
                          M                 
000CB4                03329 CH13SC0_FLANGE_SOUND    
                      03330         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_MISC_VOLUME,SCALE_A    ; Volume set by Misc Vol
000CB4 80E1 0A90          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_MISC_VOLUME,SCALE_A
                      03331         PLAY    HNDL_SC0_WHEEL_FLANGE1,no_loop,loop_STD 
                          M         list ;4 byte XPLAY      [HANDLE]
000CB8 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_WHEEL_FLANGE1 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHE
000CBA 3600               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_WHEEL_FLANGE1 & 0x3F)+((no_loop<<6)&0xC
                          M         list
                      03332         ;cutdown 4k:LOAD_MODIFIER       MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_MISC_VOLUME,SCALE_B    ; Volume
                      03333         ;cutdown 4k:PLAY        HNDL_SC0_WHEEL_FLANGE1,no_loop,loop_STD 
                      03334 
                      03335         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_MISC_VOLUME,SCALE_A    ; Volume set by Misc Vol
000CBC 80E1 0A90          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_MISC_VOLUME,SCALE_A
                      03336         PLAY    HNDL_SC0_WHEEL_FLANGE2,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
000CC0 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_WHEEL_FLANGE2 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHE
000CC2 3700               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_WHEEL_FLANGE2 & 0x3F)+((no_loop<<6)&0xC
                          M         list
                      03337         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_MISC_VOLUME,SCALE_B    ; Volume set by Misc Vol
000CC4 80E1 0B90          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_MISC_VOLUME,SCALE_B
                      03338         PLAY    HNDL_SC0_WHEEL_FLANGE2,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
000CC8 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_WHEEL_FLANGE2 & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHE
000CCA 3700               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_WHEEL_FLANGE2 & 0x3F)+((no_loop<<6)&0xC
                          M         list
                      03339         BRANCH_TO       CH13SC0_MOVING_EXIT
                          M         
                          M         if      (CH13SC0_MOVING_EXIT-SKEME_BASE) > 0xFFF            ;check branch size in SCHEME
                          M                 error   CH13SC0_MOVING_EXIT range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000CCC D2CC               M                 DB      CMD_GOTO_SND + ((high (CH13SC0_MOVING_EXIT-SKEME_BASE)) & 0x0F) , low (CH13SC0_M
                          M         endif
                          M                 
                      03340 
000CCE                03341 CH13SC0_MOVING_STOPPED
                      03342         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_LODE+WORK_SPEED_DELTA,0x00,0       ; set Manual Notch value
000CCE 0BE6 0000          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_LODE+WORK_SPEED_DELTA,0x00,0
                      03343                 
000CD2                03344 CH13SC0_MOVING_EXIT
                      03345         LOAD_MODIFIER   MTYPE_SCATTER,SCAT_CMD_PERIOD+SCAT_CHNL5,SCALE_MAX,SINTEN_MID+WORK_SPEED+WORK_PE
000CD2 25E4 790F          M                 DB      CMD_LOAD_MODIFY+(MTYPE_SCATTER&0x0F),SCAT_CMD_PERIOD+SCAT_CHNL5,SCALE_MAX,SINTEN
                      03346         
                      03347         END_SOUND
000CD6 0000               M                 DB      CMD_END_SND,0
                      03348         
                      03349         
                      03350         ;END CH3_==============================================================
                      03351 
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 113
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03352                 PAGE
                      03353         
                      03354 ;------------------------------------------------
                      03355 ;Start Channel 4                
                      03356 ;------------------------------------------------
000CD8                03357 CH4SC0_BEGIN
                      03358         CHANNEL_START   4       ;typically TRANSIENT channel for QUEUED non-persistent sounds
000CD8 0481               M                 DB      CMD_START_CHNL,4
                          M ;CTEMP += 1
                      03359 
                      03360 ;------------------------------------------------
                      03361 ;added 8/13/06 to holdoff until START is complete
                      03362 ;------------------------------------------------
                      03363 ;UC4.0================
                      03364         INITIATE_SOUND  TRIG_SND_ACTV11,NORMAL                          ;run ONCE only
000CDA 0F90               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), TRIG_SND_ACTV11 +((NORMAL) & 0x80)
  0000002F                M ICNT += 1
                          M 
000CDC                03365 CH4SC0_INTERLOCK_HOLD
                      03366 
                      03367         DELAY_SOUND DELAY_THIS,24,DELAY_GLOBAL
000CDC 18B5               M                 DB      CMD_DELAY_SND + (DELAY_GLOBAL & 0x01), (24 & 0x7F)+DELAY_THIS 
                      03368         
                      03369         MASK_COMPARE    WORK_STATUS_BITS,IMMED_DATA,WKSB_INTERLOCK_MASK,~WKSB_INTERLOCK_MASK,SKIP_SAME ;
000CDE 07FC DF20          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,WORK_STATUS_BITS,WKSB_INTERLOCK_MASK,~WKSB
                      03370                 BRANCH_TO       CH4SC0_INTERLOCK_HOLD                                   ;interlock is 00
                          M         
                          M         if      (CH4SC0_INTERLOCK_HOLD-SKEME_BASE) > 0xFFF          ;check branch size in SCHEME
                          M                 error   CH4SC0_INTERLOCK_HOLD range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000CE2 DCCC               M                 DB      CMD_GOTO_SND + ((high (CH4SC0_INTERLOCK_HOLD-SKEME_BASE)) & 0x0F) , low (CH4SC0_
                          M         endif
                          M                 
                      03371         ;DO NOT reset blend, gain, pitch here:
                      03372         END_SOUND
000CE4 0000               M                 DB      CMD_END_SND,0
                      03373         
                      03374         
                      03375         
                      03376 ;BEGIN CH4SC0_ ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
                      03377         ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                      03378         ;       THIS ROUTINE IS CH4_ (NOT INTERRUPTABLE)
                      03379 
                      03380         ;----------------- SF4= DYNAMIC BRAKE fans- persistent instaed of 
                      03381         ;------------------------------------------------
                      03382         INITIATE_SOUND  TRIG_DYNBRK_ON,NORMAL
000CE6 0B90               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), TRIG_DYNBRK_ON +((NORMAL) & 0x80)
  00000030                M ICNT += 1
                          M 
                      03383          
                      03384         SKIP_ON_TRIGGER TRIG_TRUE,TRIG_MOVING
000CE8 0E05               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_TRUE & 0x03), TRIG_MOVING 
                      03385                 BRANCH_TO       CH5SC0_HAND_BRAKE
                          M         
                          M         if      (CH5SC0_HAND_BRAKE-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH5SC0_HAND_BRAKE range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000CEA 38CD               M                 DB      CMD_GOTO_SND + ((high (CH5SC0_HAND_BRAKE-SKEME_BASE)) & 0x0F) , low (CH5SC0_HAND
                          M         endif
                          M                 
                      03386         ;               bit5 disable Dynamic BRAKES                                     =32
                      03387         MASK_COMPARE    SCV_FEATURE3_DISABLE,IMMED_DATA,0x00,COMP_bit5,SKIP_SAME                ;SKIP_LE
000CEC BAFC DF00          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_FEATURE3_DISABLE,0x00,COMP_bit5
                      03388                 BRANCH_TO       CH5SC0_DYN_DISABLED
                          M         
                          M         if      (CH5SC0_DYN_DISABLED-SKEME_BASE) > 0xFFF            ;check branch size in SCHEME
                          M                 error   CH5SC0_DYN_DISABLED range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000CF0 1CCD               M                 DB      CMD_GOTO_SND + ((high (CH5SC0_DYN_DISABLED-SKEME_BASE)) & 0x0F) , low (CH5SC0_DY
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 114
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         endif
                          M                 
                      03389                 
                      03390         ;Proper working Dynamic Brakes. PM Spools down to Idle and then rises as Dynamic Brake Fan Runs.
                      03391         ; AND The Engine Brakes faster due to Dynamic Brake motor Logic.        11/26/2015
                      03392         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_LODE+WORK_SPEED_DELTA,0,0        ;clr SPD DELTA HISTORY
000CF2 0BE6 0000          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_LODE+WORK_SPEED_DELTA,0,0
                      03393         ;Vary Dynamic Braking on SF4 loop 2/10/15
                      03394         MASK_COMPARE    USER_INTLK_BITS,IMMED_DATA,DYN_CTRL_MASK3,~DYN_CTRL_MASK3,SKIP_SAME     ;TEST BI
000CF6 1EFC F708          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,USER_INTLK_BITS,DYN_CTRL_MASK3,~DYN_CTRL_M
                      03395                 BRANCH_TO       CH5SC0_DYN_NOTCH5       ;bit3   DYNAMIC BRAKE CONTROL INTERLOCK 
                          M         
                          M         if      (CH5SC0_DYN_NOTCH5-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH5SC0_DYN_NOTCH5 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000CFA FCCC               M                 DB      CMD_GOTO_SND + ((high (CH5SC0_DYN_NOTCH5-SKEME_BASE)) & 0x0F) , low (CH5SC0_DYN_
                          M         endif
                          M                 
000CFC                03396 CH5SC0_DYN_NOTCH5
                      03397 ;       INCREASE THROTTLE TO - Notch 4
                      03398         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_INTEGRATE+WORK_SPEED_DELTA,+0x20,MAX_NOTCH_VAL   ;increme
000CFC ABE6 7020          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+WORK_SPEED_DELTA,+0x20,M
                      03399         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_BRAKE_DYN_VOLUME,SCALE_E               ;0X14 OR
000D00 80E1 0EB2          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_BRAKE_DYN_VOLUME,SCALE_E
                      03400         LOAD_MODIFIER   MTYPE_PITCH,ANALOG_PITCH_MODIFY+0x0+WORK_SPEED,MAXP_DIESEL,DITHERP_DIESEL       
000D04 A0E2 003E          M                 DB      CMD_LOAD_MODIFY+(MTYPE_PITCH&0x0F),ANALOG_PITCH_MODIFY+0x0+WORK_SPEED,MAXP_DIESE
                      03401         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_OR+USER_INTLK_BITS,DYN_CTRL_MASK3,MERGE_ALL_MASK ;Set Var
000D08 5EE6 0008          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_OR+USER_INTLK_BITS,DYN_CTRL_MASK3,
                      03402         PLAY    HNDL_SC0_DYN_BRAKE_START,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
000D0C 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_DYN_BRAKE_START & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OT
000D0E 0100               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_DYN_BRAKE_START & 0x3F)+((no_loop<<6)&0
                          M         list
                      03403          
000D10                03404 CH5SC0_PLAY_DYN_NOTCH
                      03405         LOAD_MODIFIER   MTYPE_PITCH,ANALOG_PITCH_MODIFY+0x0+WORK_SPEED,MAXP_DIESEL,DITHERP_DIESEL       
000D10 A0E2 003E          M                 DB      CMD_LOAD_MODIFY+(MTYPE_PITCH&0x0F),ANALOG_PITCH_MODIFY+0x0+WORK_SPEED,MAXP_DIESE
                      03406         ;PLAY   HNDL_SC0_DYN_BRAKE_START,no_loop,loop_STD
                      03407         PLAY    HNDL_SC0_DYN_BRAKE_SUSTAIN,loop_till_DYNBRK_OFF,loop_INVERT
                          M         list ;4 byte XPLAY      [HANDLE]
000D14 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_DYN_BRAKE_SUSTAIN & 0xC0)+1 ;ADD REV PLAY FLAG PLUS 
000D16 C20A               M                 DB      ((loop_till_DYNBRK_OFF>>2)&0x07)+loop_INVERT, (HNDL_SC0_DYN_BRAKE_SUSTAIN & 0x3F
                          M         list
                      03408         PLAY    HNDL_SC0_DYN_BRAKE_SUSTAIN,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
000D18 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_DYN_BRAKE_SUSTAIN & 0xC0)+1 ;ADD REV PLAY FLAG PLUS 
000D1A 0200               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_DYN_BRAKE_SUSTAIN & 0x3F)+((no_loop<<6)
                          M         list
                      03409                                         
000D1C                03410 CH5SC0_DYN_DISABLED
                      03411         PLAY    HNDL_SC0_DYN_BRAKE_END,no_loop,loop_STD 
                          M         list ;4 byte XPLAY      [HANDLE]
000D1C 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_DYN_BRAKE_END & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHE
000D1E 0300               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_DYN_BRAKE_END & 0x3F)+((no_loop<<6)&0xC
                          M         list
                      03412         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_LODE+WORK_SPEED_DELTA,NOTCH1,0   ; set Manual Notch value
000D20 0BE6 0000          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_LODE+WORK_SPEED_DELTA,NOTCH1,0
                      03413 
                      03414         ;Reset dynamics to normal
                      03415         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_AND+USER_INTLK_BITS,~DYN_CTRL_MASK3,MERGE_ALL_MASK       
000D24 3EE6 00F7          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_AND+USER_INTLK_BITS,~DYN_CTRL_MASK
                      03416         LOAD_MODIFIER   MTYPE_PITCH,ANALOG_PITCH_MODIFY+0x0,IMAXP_DIESEL,DITHERP_DIESEL ;for discrete no
000D28 A0E2 005E          M                 DB      CMD_LOAD_MODIFY+(MTYPE_PITCH&0x0F),ANALOG_PITCH_MODIFY+0x0,IMAXP_DIESEL,DITHERP_
                      03417         LOAD_MODIFIER  MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_BRAKE_DYN_VOLUME,SCALE_B        
000D2C 80E1 0BB2          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_BRAKE_DYN_VOLUME,SCALE_B
                      03418 
                      03419         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+AIR_PRESS,-0x12,0   ;decrease
000D30 BDE6 00EE          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+AIR_PRESS,-0x12,0
                      03420         END_SOUND
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 115
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D34 0000               M                 DB      CMD_END_SND,0
                      03421         
                      03422                 
                      03423 ;------------------------------------------------
                      03424 ; HAND BRAKE -- while stopped
                      03425 ;------------------------------------------------
                      03426         INITIATE_SOUND  TRIG_HBRAKE_ON,NORMAL
000D36 1590               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), TRIG_HBRAKE_ON +((NORMAL) & 0x80)
  00000031                M ICNT += 1
                          M 
                      03427 
000D38                03428 CH5SC0_HAND_BRAKE
                      03429         ;should not be on deck pulling brake when loco is in motion:
                      03430         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_MOVING
000D38 0E04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_MOVING 
                      03431                 END_SOUND       
000D3A 0000               M                 DB      CMD_END_SND,0
                      03432                 
                      03433         ;Reset dynamics to normal
                      03434         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_AND+USER_INTLK_BITS,~DYN_CTRL_MASK3,MERGE_ALL_MASK       
000D3C 3EE6 00F7          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_AND+USER_INTLK_BITS,~DYN_CTRL_MASK
                      03435         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_BRAKE_VOLUME,SCALE_F   
000D40 80E1 0F8F          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_BRAKE_VOLUME,SCALE_F
                      03436         
                      03437         PLAY    HNDL_SC0_HBRAKE_BEGIN,no_loop,loop_STD
                          M         list ;2 byte PLAY  [HANDLE]
000D44 3D40               M         DB      CMD_PLAY_SND+((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_HBRAKE_BEGIN & 0x3F)+((no_loop<<6)
                          M         list
                      03438         ;PLAY   HNDL_SC0_HBRAKE_LOOP,no_loop,loop_INVERT                
                      03439         PLAY    HNDL_SC0_HBRAKE_LOOP,loop_till_HBRAKE_OFF,loop_INVERT
                          M         list ;2 byte PLAY  [HANDLE]
000D46 7E4D               M         DB      CMD_PLAY_SND+((loop_till_HBRAKE_OFF>>2)&0x07)+loop_INVERT, (HNDL_SC0_HBRAKE_LOOP & 0x3F)
                          M         list
                      03440         PLAY    HNDL_SC0_HBRAKE_END,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
000D48 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_HBRAKE_END & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER B
000D4A 0000               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_HBRAKE_END & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      03441         
                      03442         END_SOUND               
000D4C 0000               M                 DB      CMD_END_SND,0
                      03443         
                      03444 
                      03445         
                      03446         ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                      03447         ;       THIS ROUTINE IS CH4_(NOT INTERRUPTABLE)
                      03448         ;----------------- SF25= AUX Generator - persistent 
                      03449         ;------------------------------------------------
                      03450         INITIATE_SOUND  TRIG_AXGEN_ON,NORMAL+NO_PREEMPT_TRIG            ; Do not allow aux to be interru
000D4E 2494               M                 DB      CMD_INITIATE_SND + ((NORMAL+NO_PREEMPT_TRIG) & 0x07), TRIG_AXGEN_ON +((NORMAL+NO
  00000032                M ICNT += 1
                          M 
                      03451         LOAD_MODIFIER   MTYPE_WORK_IMMED,WORK_GLBL_GAIN,DEFAULT_GLBL_GAIN,MERGE_ALL_MASK  ;STD full volu
000D50 08E6 00C0          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),WORK_GLBL_GAIN,DEFAULT_GLBL_GAIN,MERGE_A
                      03452 
                      03453         MASK_COMPARE    SCV_FEATURE_DISABLE,IMMED_DATA,0x01,COMP_bit0,SKIP_SAME         ;SKIP_LESSSKIP_G
000D54 B8FC FE01          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_FEATURE_DISABLE,0x01,COMP_bit0
                      03454                 BRANCH_TO       CH12SC0_RUN_AUX
                          M         
                          M         if      (CH12SC0_RUN_AUX-SKEME_BASE) > 0xFFF                ;check branch size in SCHEME
                          M                 error   CH12SC0_RUN_AUX range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000D58 5CCD               M                 DB      CMD_GOTO_SND + ((high (CH12SC0_RUN_AUX-SKEME_BASE)) & 0x0F) , low (CH12SC0_RUN_A
                          M         endif
                          M                 
                      03455         BRANCH_TO       CH12SC0_RUN_HEP
                          M         
                          M         if      (CH12SC0_RUN_HEP-SKEME_BASE) > 0xFFF                ;check branch size in SCHEME
                          M                 error   CH12SC0_RUN_HEP range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 116
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         else
000D5A 74CD               M                 DB      CMD_GOTO_SND + ((high (CH12SC0_RUN_HEP-SKEME_BASE)) & 0x0F) , low (CH12SC0_RUN_H
                          M         endif
                          M                 
                      03456         
000D5C                03457 CH12SC0_RUN_AUX
                      03458         ;Most FP-units for passenger service were built in the early 50's. They came with steam generato
                      03459         ;Starting around 1960 some replaced the steam generators with Cummins diesel HEP units 
                      03460         ;putting out 440VAc, Others came with Detroit Diesel HEP units. 
                      03461         ;Later NS OSX units have revised AUX generators.
                      03462         PLAY    HNDL_SC0_AUX_START,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
000D5C 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AUX_START & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER BI
000D5E 3800               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_AUX_START & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      03463         ;               PLAY_AUX_GEN
                      03464         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_AUXGEN_VOLUME,SCALE_A
000D60 80E1 0AAA          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_AUXGEN_VOLUME,SCALE_A
                      03465         SKIP_ON_TRIGGER TRIG_TRUE,TRIG_MOVING   ;raise voulme if not moving
000D64 0E05               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_TRUE & 0x03), TRIG_MOVING 
                      03466                 LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_AUXGEN_VOLUME,SCALE_B
000D66 80E1 0BAA          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_AUXGEN_VOLUME,SCALE_B
                      03467 
                      03468         PLAY    HNDL_SC0_AUX_RUN,loop_till_init_TRIG,loop_INVERT
                          M         list ;4 byte XPLAY      [HANDLE]
000D6A 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AUX_RUN & 0xC0)+1   ;ADD REV PLAY FLAG PLUS OTHER BI
000D6C F909               M                 DB      ((loop_till_init_TRIG>>2)&0x07)+loop_INVERT, (HNDL_SC0_AUX_RUN & 0x3F)+((loop_ti
                          M         list
                      03469         PLAY    HNDL_SC0_AUX_END,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
000D6E 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AUX_END & 0xC0)+1   ;ADD REV PLAY FLAG PLUS OTHER BI
000D70 3A00               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_AUX_END & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      03470         END_SOUND
000D72 0000               M                 DB      CMD_END_SND,0
                      03471 
000D74                03472 CH12SC0_RUN_HEP         ;Run at Notch 7
                      03473         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_LODE+WORK_SPEED_DELTA,0x60,0       
000D74 0BE6 0060          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_LODE+WORK_SPEED_DELTA,0x60,0
                      03474         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_FAN_VOLUME,SCALE_F                             
000D78 80E1 0FAB          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_FAN_VOLUME,SCALE_F
                      03475         PLAY    HNDL_SC0_FAN2_LOOP,no_loop,loop_INVERT          
                          M         list ;4 byte XPLAY      [HANDLE]
000D7C 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_FAN2_LOOP & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER BI
000D7E 1908               M                 DB      ((no_loop>>2)&0x07)+loop_INVERT, (HNDL_SC0_FAN2_LOOP & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      03476         PLAY    HNDL_SC0_FAN2_LOOP,loop_till_init_TRIG,loop_INVERT      
                          M         list ;4 byte XPLAY      [HANDLE]
000D80 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_FAN2_LOOP & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER BI
000D82 D909               M                 DB      ((loop_till_init_TRIG>>2)&0x07)+loop_INVERT, (HNDL_SC0_FAN2_LOOP & 0x3F)+((loop_
                          M         list
                      03477 
                      03478         END_SOUND
000D84 0000               M                 DB      CMD_END_SND,0
                      03479         
                      03480         
                      03481         
                      03482 
                      03483 ;----------------------------------------
                      03484 ;   TIMED CYCLE OF FAN2 (TIMER SCAT3)
                      03485 ;----------------------------------------
                      03486         INITIATE_SOUND TRIG_SCAT3,NORMAL+ZAP            ; Allows air sounds to be preempted     
000D86 6391               M                 DB      CMD_INITIATE_SND + ((NORMAL+ZAP) & 0x07), TRIG_SCAT3 +((NORMAL+ZAP) & 0x80)
  00000033                M ICNT += 1
                          M 
                      03487         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+AIR_PRESS,-0x12,0   ;decrease
000D88 BDE6 00EE          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+AIR_PRESS,-0x12,0
                      03488         MASK_COMPARE    USER_INTLK_BITS,IMMED_DATA,COMP_MASK0,~COMP_MASK0,SKIP_SAME     ;bit0   COMPRESS
000D8C 1EFC FE01          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,USER_INTLK_BITS,COMP_MASK0,~COMP_MASK0
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 117
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03489                 END_SOUND
000D90 0000               M                 DB      CMD_END_SND,0
                      03490         ;interlock scatter event handler here to prevent play after disable.
                      03491         MASK_COMPARE    WORK_STATUS_BITS,IMMED_DATA,WKSB_INTERLOCK_MASK,~WKSB_INTERLOCK_MASK,SKIP_SAME ;
000D92 07FC DF20          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,WORK_STATUS_BITS,WKSB_INTERLOCK_MASK,~WKSB
                      03492                 END_SOUND               ;Skipped when ARG1 = ARG2
000D96 0000               M                 DB      CMD_END_SND,0
                      03493         ;disable fans with bit3
                      03494         MASK_COMPARE    SCV_FEATURE_DISABLE,IMMED_DATA,0x01,COMP_bit3,SKIP_SAME         ;SKIP_LESSSKIP_G
000D98 B8FC F701          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_FEATURE_DISABLE,0x01,COMP_bit3
                      03495                 END_SOUND                       ;Skipped when ARG1 = ARG2
000D9C 0000               M                 DB      CMD_END_SND,0
                      03496         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_AXGEN_ON; But branch if SF30 was previously on
000D9E 2404               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_AXGEN_ON 
                      03497                 END_SOUND 
000DA0 0000               M                 DB      CMD_END_SND,0
                      03498         ;SKIP_ON_TRIGGER TRIG_FALSE,TRIG_FAND_ON                ;disable
                      03499         ;       END_SOUND               
                      03500 
                      03501 
000DA2                03502 CH12SC0_LOW_FAN
                      03503         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_FANS_ON         ; Qualify with SF11 OFF
000DA2 1A04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_FANS_ON 
                      03504                 END_SOUND                                       ; Ends here if SF20 is ON       
000DA4 0000               M                 DB      CMD_END_SND,0
                      03505 
                      03506         LOAD_MODIFIER   MTYPE_SCATTER,SCAT_CMD_PERIOD+SCAT_CHNL3,20+WORK_SPEED,SINTEN_LOW+WORK_SPEED ; r
000DA6 23E4 4014          M                 DB      CMD_LOAD_MODIFY+(MTYPE_SCATTER&0x0F),SCAT_CMD_PERIOD+SCAT_CHNL3,20+WORK_SPEED,SI
                      03507         MASK_COMPARE PREV_NOTCH,IMMED_DATA,NOTCH4,COMP_7LSB,SKIP_GRTR   ;Skip if                        
000DAA 1BFF 8030          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,PREV_NOTCH,NOTCH4,COMP_7LSB
                      03508                 LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_FAN_VOLUME,SCALE_B                     
000DAE 80E1 0BAB          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_FAN_VOLUME,SCALE_B
                      03509         SKIP_ON_TRIGGER TRIG_TRUE,TRIG_MOVING   ;raise voulme if not moving
000DB2 0E05               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_TRUE & 0x03), TRIG_MOVING 
                      03510                 LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_FAN_VOLUME,SCALE_C                     
000DB4 80E1 0CAB          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_FAN_VOLUME,SCALE_C
                      03511         ;raise volume if in notch 4 or greater
                      03512         MASK_COMPARE PREV_NOTCH,IMMED_DATA,NOTCH4,COMP_7LSB,SKIP_LESS    ;Skip if 
000DB8 1BFE 8030          M                 DB      CMD_MASK_COMPARE+SKIP_LESS+IMMED_DATA,PREV_NOTCH,NOTCH4,COMP_7LSB
                      03513                 LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_FAN_VOLUME,SCALE_D                     
000DBC 80E1 0DAB          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_FAN_VOLUME,SCALE_D
                      03514         ;cutdown 4k:PLAY        HNDL_SC0_FAN2_LOOP,no_loop,loop_STD     
                      03515         PLAY    HNDL_SC0_FAN2_LOOP,loop_till_init_TRIG,loop_INVERT      
                          M         list ;4 byte XPLAY      [HANDLE]
000DC0 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_FAN2_LOOP & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER BI
000DC2 D909               M                 DB      ((loop_till_init_TRIG>>2)&0x07)+loop_INVERT, (HNDL_SC0_FAN2_LOOP & 0x3F)+((loop_
                          M         list
                      03516         ;cutdown 4k:PLAY        HNDL_SC0_FAN2_LOOP,no_loop,loop_STD
                      03517         LOAD_MODIFIER   MTYPE_SCATTER,SCAT_CMD_PERIOD+SCAT_CHNL3,44+WORK_SPEED,SINTEN_HIGH  ; Next cycle
000DC4 23E4 C02C          M                 DB      CMD_LOAD_MODIFY+(MTYPE_SCATTER&0x0F),SCAT_CMD_PERIOD+SCAT_CHNL3,44+WORK_SPEED,SI
                      03518         END_SOUND
000DC8 0000               M                 DB      CMD_END_SND,0
                      03519 
                      03520 
                      03521 ;----------------------------------------
                      03522 ;   TIMED CYCLE OF FAN1 (TIMER SCAT2)
                      03523 ;----------------------------------------
                      03524         INITIATE_SOUND  TRIG_SCAT2,NORMAL+ZAP   ; Allows air sounds to be preempted     
000DCA 6291               M                 DB      CMD_INITIATE_SND + ((NORMAL+ZAP) & 0x07), TRIG_SCAT2 +((NORMAL+ZAP) & 0x80)
  00000034                M ICNT += 1
                          M 
                      03525         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+AIR_PRESS,-0x11,0   ;decrease
000DCC BDE6 00EF          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+AIR_PRESS,-0x11,0
                      03526         MASK_COMPARE    USER_INTLK_BITS,IMMED_DATA,COMP_MASK0,~COMP_MASK0,SKIP_SAME     ;bit0   COMPRESS
000DD0 1EFC FE01          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,USER_INTLK_BITS,COMP_MASK0,~COMP_MASK0
                      03527                 END_SOUND
000DD4 0000               M                 DB      CMD_END_SND,0
                      03528         ;interlock scatter event handler here to prevent play after disable.
                      03529         MASK_COMPARE    WORK_STATUS_BITS,IMMED_DATA,WKSB_INTERLOCK_MASK,~WKSB_INTERLOCK_MASK,SKIP_SAME ;
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 118
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000DD6 07FC DF20          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,WORK_STATUS_BITS,WKSB_INTERLOCK_MASK,~WKSB
                      03530                 END_SOUND                       ;Skipped when ARG1 = ARG2
000DDA 0000               M                 DB      CMD_END_SND,0
                      03531         
                      03532         ;disable fans with bit3
                      03533         MASK_COMPARE    SCV_FEATURE_DISABLE,IMMED_DATA,0x01,COMP_bit3,SKIP_SAME         ;SKIP_LESSSKIP_G
000DDC B8FC F701          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_FEATURE_DISABLE,0x01,COMP_bit3
                      03534                 END_SOUND               ;Skipped when ARG1 = ARG2       
000DE0 0000               M                 DB      CMD_END_SND,0
                      03535         
                      03536         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_AXGEN_ON; But branch if SF30 was previously on
000DE2 2404               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_AXGEN_ON 
                      03537                 END_SOUND       
000DE4 0000               M                 DB      CMD_END_SND,0
                      03538         ;SKIP_ON_TRIGGER TRIG_FALSE,TRIG_FAND_ON                ;disable
                      03539         ;       END_SOUND
000DE6                03540 CH14SC0_HIGH_FAN                
                      03541         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_FANS_ON         ; Qualify with SF11 OFF
000DE6 1A04               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_FANS_ON 
                      03542                 END_SOUND                                       ; Ends here if SF20 is ON       
000DE8 0000               M                 DB      CMD_END_SND,0
                      03543                 
                      03544         MASK_COMPARE PREV_NOTCH,IMMED_DATA,NOTCH4,COMP_ALL,SKIP_GRTR    ;Skip if 
000DEA 1BFF 0030          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,PREV_NOTCH,NOTCH4,COMP_ALL
                      03545                 BRANCH_TO       CH14SC0_LOWHIGH_FAN             
                          M         
                          M         if      (CH14SC0_LOWHIGH_FAN-SKEME_BASE) > 0xFFF            ;check branch size in SCHEME
                          M                 error   CH14SC0_LOWHIGH_FAN range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000DEE F2CD               M                 DB      CMD_GOTO_SND + ((high (CH14SC0_LOWHIGH_FAN-SKEME_BASE)) & 0x0F) , low (CH14SC0_L
                          M         endif
                          M                 
                      03546         BRANCH_TO       CH14SC0_PLAY_HIGH_FAN           
                          M         
                          M         if      (CH14SC0_PLAY_HIGH_FAN-SKEME_BASE) > 0xFFF          ;check branch size in SCHEME
                          M                 error   CH14SC0_PLAY_HIGH_FAN range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000DF0 08CE               M                 DB      CMD_GOTO_SND + ((high (CH14SC0_PLAY_HIGH_FAN-SKEME_BASE)) & 0x0F) , low (CH14SC0
                          M         endif
                          M                 
                      03547         
000DF2                03548 CH14SC0_LOWHIGH_FAN      
                      03549         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_FAN_VOLUME,SCALE_9                             
000DF2 80E1 09AB          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_FAN_VOLUME,SCALE_9
                      03550 
                      03551         PLAY    HNDL_SC0_FAN2_START,no_loop,loop_STD    
                          M         list ;4 byte XPLAY      [HANDLE]
000DF6 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_FAN2_START & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER B
000DF8 1800               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_FAN2_START & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      03552         PLAY    HNDL_SC0_FAN2_LOOP,no_loop,loop_INVERT  
                          M         list ;4 byte XPLAY      [HANDLE]
000DFA 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_FAN2_LOOP & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER BI
000DFC 1908               M                 DB      ((no_loop>>2)&0x07)+loop_INVERT, (HNDL_SC0_FAN2_LOOP & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      03553         PLAY    HNDL_SC0_FAN2_LOOP,loop_till_init_TRIG,loop_INVERT      
                          M         list ;4 byte XPLAY      [HANDLE]
000DFE 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_FAN2_LOOP & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER BI
000E00 D909               M                 DB      ((loop_till_init_TRIG>>2)&0x07)+loop_INVERT, (HNDL_SC0_FAN2_LOOP & 0x3F)+((loop_
                          M         list
                      03554         PLAY    HNDL_SC0_FAN2_END,no_loop,loop_STD              
                          M         list ;4 byte XPLAY      [HANDLE]
000E02 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_FAN2_END & 0xC0)+1  ;ADD REV PLAY FLAG PLUS OTHER BI
000E04 1A00               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_FAN2_END & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      03555         END_SOUND       
000E06 0000               M                 DB      CMD_END_SND,0
                      03556         
000E08                03557 CH14SC0_PLAY_HIGH_FAN   
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 119
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03558         LOAD_MODIFIER   MTYPE_SCATTER,SCAT_CMD_PERIOD+SCAT_CHNL2,25+WORK_SPEED,SINTEN_LOW+WORK_SPEED ;  
000E08 22E4 4019          M                 DB      CMD_LOAD_MODIFY+(MTYPE_SCATTER&0x0F),SCAT_CMD_PERIOD+SCAT_CHNL2,25+WORK_SPEED,SI
                      03559         MASK_COMPARE PREV_NOTCH,IMMED_DATA,NOTCH4,COMP_ALL,SKIP_GRTR   ;Skip if         
000E0C 1BFF 0030          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,PREV_NOTCH,NOTCH4,COMP_ALL
                      03560                 BRANCH_TO       CH14SC0_PLAY_HIGH_FAN2
                          M         
                          M         if      (CH14SC0_PLAY_HIGH_FAN2-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH14SC0_PLAY_HIGH_FAN2 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000E10 16CE               M                 DB      CMD_GOTO_SND + ((high (CH14SC0_PLAY_HIGH_FAN2-SKEME_BASE)) & 0x0F) , low (CH14SC
                          M         endif
                          M                 
                      03561         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_FAN_VOLUME,SCALE_C             ; Air volume con
000E12 80E1 0CAB          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_FAN_VOLUME,SCALE_C
                      03562         
000E16                03563 CH14SC0_PLAY_HIGH_FAN2
                      03564         SKIP_ON_TRIGGER TRIG_TRUE,TRIG_MOVING   ;raise voulme if not moving
000E16 0E05               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_TRUE & 0x03), TRIG_MOVING 
                      03565                 LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_FAN_VOLUME,SCALE_B                     
000E18 80E1 0BAB          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_FAN_VOLUME,SCALE_B
                      03566         ;raise volume if in notch 4 or greater
                      03567         MASK_COMPARE PREV_NOTCH,IMMED_DATA,NOTCH4,COMP_ALL,SKIP_GRTR    ;Skip if 
000E1C 1BFF 0030          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,PREV_NOTCH,NOTCH4,COMP_ALL
                      03568                 LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_FAN_VOLUME,SCALE_D                     
000E20 80E1 0DAB          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_FAN_VOLUME,SCALE_D
                      03569         PLAY    HNDL_SC0_FAN1_START,no_loop,loop_STD    
                          M         list ;4 byte XPLAY      [HANDLE]
000E24 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_FAN1_START & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER B
000E26 1500               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_FAN1_START & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      03570         PLAY    HNDL_SC0_FAN1_LOOP,no_loop,loop_INVERT  
                          M         list ;4 byte XPLAY      [HANDLE]
000E28 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_FAN1_LOOP & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER BI
000E2A 1608               M                 DB      ((no_loop>>2)&0x07)+loop_INVERT, (HNDL_SC0_FAN1_LOOP & 0x3F)+((no_loop<<6)&0xC0)
                          M         list
                      03571         PLAY    HNDL_SC0_FAN1_LOOP,loop_till_init_TRIG,loop_INVERT      
                          M         list ;4 byte XPLAY      [HANDLE]
000E2C 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_FAN1_LOOP & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER BI
000E2E D609               M                 DB      ((loop_till_init_TRIG>>2)&0x07)+loop_INVERT, (HNDL_SC0_FAN1_LOOP & 0x3F)+((loop_
                          M         list
                      03572         PLAY    HNDL_SC0_FAN1_END,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
000E30 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_FAN1_END & 0xC0)+1  ;ADD REV PLAY FLAG PLUS OTHER BI
000E32 1700               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_FAN1_END & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      03573         LOAD_MODIFIER   MTYPE_SCATTER,SCAT_CMD_PERIOD+SCAT_CHNL2,60+WORK_SPEED,SINTEN_MID+WORK_SPEED  ; 
000E34 22E4 603C          M                 DB      CMD_LOAD_MODIFY+(MTYPE_SCATTER&0x0F),SCAT_CMD_PERIOD+SCAT_CHNL2,60+WORK_SPEED,SI
                      03574         
                      03575         END_SOUND
000E38 0000               M                 DB      CMD_END_SND,0
                      03576         
                      03577         ;-------------------------------
                      03578         ;SF12 Disconnect Coupler
                      03579         ;-------------------------------
                      03580         INITIATE_SOUND  TRIG_COUPLERD_ON,NORMAL         
000E3A 1B90               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), TRIG_COUPLERD_ON +((NORMAL) & 0x80)
  00000035                M ICNT += 1
                          M 
                      03581 
                      03582                 BRANCH_TO       CH6SC0_PLAY_DISCONNECT
                          M         
                          M         if      (CH6SC0_PLAY_DISCONNECT-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH6SC0_PLAY_DISCONNECT range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000E3C 68CE               M                 DB      CMD_GOTO_SND + ((high (CH6SC0_PLAY_DISCONNECT-SKEME_BASE)) & 0x0F) , low (CH6SC0
                          M         endif
                          M                 
                      03583         END_SOUND 
000E3E 0000               M                 DB      CMD_END_SND,0
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 120
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03584 
                      03585         
                      03586         ;---------------------------------------------
                      03587         ;  Accelerate   Play UnCoupler            ::::: New 11/19/2015
                      03588         ;---------------------------------------------
                      03589         INITIATE_SOUND T_SPD_ACCEL1,NORMAL
000E40 7390               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), T_SPD_ACCEL1 +((NORMAL) & 0x80)
  00000036                M ICNT += 1
                          M 
                      03590         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+AIR_PRESS,-0x10,0   ;decrease
000E42 BDE6 00F0          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+AIR_PRESS,-0x10,0
                      03591         ;set drift interlock:
                      03592         ;(drift is interlocked when not decelerating. when accelerating heavy sounds play.
                      03593         ;interlock is set on bit is =1)(i.e. DRIFTING IS OFF)
                      03594         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_OR+USER_INTLK_BITS,VARY_DRIFT_MASK7,MERGE_ALL_MASK       
000E46 5EE6 0080          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_OR+USER_INTLK_BITS,VARY_DRIFT_MASK
                      03595         ;=============== ACCEL REPEATS MANY TIMES =================
                      03596         ;  Accelerate   Play UnCoupler            ::::: New 11/19/2015
                      03597         MASK_COMPARE    WORK_SPEED,IMMED_DATA,0x01,COMP_ALL,SKIP_GRTR           ; Check if stopped
000E4A 00FF 0001          M                 DB      CMD_MASK_COMPARE+SKIP_GRTR+IMMED_DATA,WORK_SPEED,0x01,COMP_ALL
                      03598                 BRANCH_TO       CH6SC0_PLAY_BLIP2
                          M         
                          M         if      (CH6SC0_PLAY_BLIP2-SKEME_BASE) > 0xFFF              ;check branch size in SCHEME
                          M                 error   CH6SC0_PLAY_BLIP2 range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000E4E 52CE               M                 DB      CMD_GOTO_SND + ((high (CH6SC0_PLAY_BLIP2-SKEME_BASE)) & 0x0F) , low (CH6SC0_PLAY
                          M         endif
                          M                 
                      03599         END_SOUND
000E50 0000               M                 DB      CMD_END_SND,0
                      03600         
000E52                03601 CH6SC0_PLAY_BLIP2
                      03602         ;blip motor here:
                      03603         LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+VARY_LOAD,+SCALE_INCR_2,SCALE_MAX   ;Increment
000E52 BCE6 0F02          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+VARY_LOAD,+SCALE_INCR_2,
                      03604 
                      03605         MASK_COMPARE WORK_STATUS_BITS,IMMED_DATA,0x02,~WKSB_DIRNOW_MASK,SKIP_SAME               ; Skip t
000E56 07FC FD02          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,WORK_STATUS_BITS,0x02,~WKSB_DIRNOW_MASK
                      03606                 END_SOUND
000E5A 0000               M                 DB      CMD_END_SND,0
                      03607                 
                      03608 
                      03609         LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_COUPLER_VOLUME,SCALE_E 
000E5C 80E1 0EB0          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_COUPLER_VOLUME,SCALE_E
                      03610                 
                      03611         MASK_COMPARE    USER_INTLK_BITS,IMMED_DATA,COUPLER_MASK5,~COUPLER_MASK5,SKIP_SAME       ;TEST BI
000E60 1EFC DF20          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,USER_INTLK_BITS,COUPLER_MASK5,~COUPLER_MAS
                      03612                 BRANCH_TO       CH6SC0_PLAY_DISCONNECT
                          M         
                          M         if      (CH6SC0_PLAY_DISCONNECT-SKEME_BASE) > 0xFFF         ;check branch size in SCHEME
                          M                 error   CH6SC0_PLAY_DISCONNECT range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000E64 68CE               M                 DB      CMD_GOTO_SND + ((high (CH6SC0_PLAY_DISCONNECT-SKEME_BASE)) & 0x0F) , low (CH6SC0
                          M         endif
                          M                 
                      03613         BRANCH_TO       CH6SC0_PLAYED_DISCONNECT
                          M         
                          M         if      (CH6SC0_PLAYED_DISCONNECT-SKEME_BASE) > 0xFFF       ;check branch size in SCHEME
                          M                 error   CH6SC0_PLAYED_DISCONNECT range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000E66 70CE               M                 DB      CMD_GOTO_SND + ((high (CH6SC0_PLAYED_DISCONNECT-SKEME_BASE)) & 0x0F) , low (CH6S
                          M         endif
                          M                 
                      03614         
                      03615 
000E68                03616 CH6SC0_PLAY_DISCONNECT
                      03617 
                      03618         SKIP_ON_TRIGGER TRIG_FALSE,TRIG_UNCOUPLE_ON     ; Skip if SF3 is not currently on -- lift ring m
000E68 1804               M                 DB      CMD_SKIP_ON_TRIGGER + (TRIG_FALSE & 0x03), TRIG_UNCOUPLE_ON 
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 121
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03619                 BRANCH_TO       CH6SC0_PLAYED_DISCONNECT
                          M         
                          M         if      (CH6SC0_PLAYED_DISCONNECT-SKEME_BASE) > 0xFFF       ;check branch size in SCHEME
                          M                 error   CH6SC0_PLAYED_DISCONNECT range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000E6A 70CE               M                 DB      CMD_GOTO_SND + ((high (CH6SC0_PLAYED_DISCONNECT-SKEME_BASE)) & 0x0F) , low (CH6S
                          M         endif
                          M                 
                      03620         PLAY    HNDL_SC0_UNCOUPLE_DISCONNECT,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
000E6C 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_UNCOUPLE_DISCONNECT & 0xC0)+1 ;ADD REV PLAY FLAG PLU
000E6E 2C00               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_UNCOUPLE_DISCONNECT & 0x3F)+((no_loop<<
                          M         list
                      03621                   
000E70                03622 CH6SC0_PLAYED_DISCONNECT                
                      03623 
                      03624         LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_OR+USER_INTLK_BITS,COUPLER_MASK5,MERGE_ALL_MASK  ;OR=SETt
000E70 5EE6 0020          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_OR+USER_INTLK_BITS,COUPLER_MASK5,M
                      03625         
                      03626         END_SOUND
000E74 0000               M                 DB      CMD_END_SND,0
                      03627                 
                      03628         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      03629                 ;TRACTION SOUNDS -- CONTINUOUS:
                      03630                 ;----------------------------------------
                      03631                 ;    Start moving from idle                                 
                      03632                 ;----------------------------------------
                      03633 
                      03634                 INITIATE_SOUND  T_SPD_IDLEXIT,RUN_WHILE_TRIG+ZAP
000E76 7693               M                 DB      CMD_INITIATE_SND + ((RUN_WHILE_TRIG+ZAP) & 0x07), T_SPD_IDLEXIT +((RUN_WHILE_TRI
  00000037                M ICNT += 1
                          M 
                      03635                 MASK_COMPARE    SCV_FEATURE4_DISABLE,IMMED_DATA,0x00,COMP_bit0,SKIP_SAME                
000E78 BBFC FE00          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_FEATURE4_DISABLE,0x00,COMP_bit0
                      03636                         END_SOUND                       ;bypass disabled traction sounds:
000E7C 0000               M                 DB      CMD_END_SND,0
                      03637 
                      03638                 LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_TRACTION_MOTOR_VOLUME,SCALE_9  ;use VOL
000E7E 80E1 09AF          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_TRACTION_MOTOR_VOLUME,SC
                      03639                 PLAY HNDL_SC0_TRACTION_START,no_loop,loop_STD                           ;Play idle to ru
                          M         list ;4 byte XPLAY      [HANDLE]
000E82 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_TRACTION_START & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTH
000E84 1000               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_TRACTION_START & 0x3F)+((no_loop<<6)&0x
                          M         list
                      03640 ;There is no END_SOUND callout here - otherwise it plays this more than once!! 
                      03641 
                      03642                 ;----------------------------------------
                      03643                 ;  Run at speed
                      03644                 ;----------------------------------------
                      03645                 INITIATE_SOUND  T_SPD_RUN,RUN_WHILE_TRIG+ZAP
000E86 7793               M                 DB      CMD_INITIATE_SND + ((RUN_WHILE_TRIG+ZAP) & 0x07), T_SPD_RUN +((RUN_WHILE_TRIG+ZA
  00000038                M ICNT += 1
                          M 
                      03646                 MASK_COMPARE    SCV_FEATURE4_DISABLE,IMMED_DATA,0x00,COMP_bit0,SKIP_SAME                
000E88 BBFC FE00          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_FEATURE4_DISABLE,0x00,COMP_bit0
                      03647                         END_SOUND                       ;bypass disabled traction sounds:
000E8C 0000               M                 DB      CMD_END_SND,0
                      03648 
                      03649                 LOAD_MODIFIER   MTYPE_BLEND, BLEND_CURRENT_CHNL+BLEND_GAIN0+BLEND_FASE0,BLENDG_DSL_ACCEL
000E8E 00E3 0506          M                 DB      CMD_LOAD_MODIFY+(MTYPE_BLEND&0x0F),BLEND_CURRENT_CHNL+BLEND_GAIN0+BLEND_FASE0,BL
                      03650                 ;LOAD_MODIFIER  MTYPE_GAIN,IMMED_GAIN_MODIFY+0x18,SCV_TRACTION_MOTOR_VOLUME,DITHER+LOW_D
                      03651                 LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY+0x5,SCV_TRACTION_MOTOR_VOLUME,DITHER+LOW_DI
000E92 85E1 A0AF          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY+0x5,SCV_TRACTION_MOTOR_VOLUM
                      03652                 LOAD_MODIFIER   MTYPE_PITCH,ANALOG_PITCH_MODIFY+WORK_SPEED,MAXP_DIESEL,DITHERP_DIESEL
000E96 A0E2 003E          M                 DB      CMD_LOAD_MODIFY+(MTYPE_PITCH&0x0F),ANALOG_PITCH_MODIFY+WORK_SPEED,MAXP_DIESEL,DI
                      03653                 PLAY    HNDL_SC0_TRACTION_RUN,loop_till_init_TRIG,loop_INVERT 
                          M         list ;4 byte XPLAY      [HANDLE]
000E9A 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_TRACTION_RUN & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER
000E9C D109               M                 DB      ((loop_till_init_TRIG>>2)&0x07)+loop_INVERT, (HNDL_SC0_TRACTION_RUN & 0x3F)+((lo
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 122
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M         list
                      03654                 END_SOUND
000E9E 0000               M                 DB      CMD_END_SND,0
                      03655 
                      03656                 ;----------------------------------------
                      03657                 ;   Coming to rest                            
                      03658                 ;----------------------------------------
                      03659                 INITIATE_SOUND  TRIG_MOVING,NOT_TRIG    
000EA0 8E90               M                 DB      CMD_INITIATE_SND + ((NOT_TRIG) & 0x07), TRIG_MOVING +((NOT_TRIG) & 0x80)
  00000039                M ICNT += 1
                          M 
                      03660                 MASK_COMPARE    SCV_FEATURE4_DISABLE,IMMED_DATA,0x00,COMP_bit0,SKIP_SAME                
000EA2 BBFC FE00          M                 DB      CMD_MASK_COMPARE+SKIP_SAME+IMMED_DATA,SCV_FEATURE4_DISABLE,0x00,COMP_bit0
                      03661                         END_SOUND                       ;bypass disabled traction sounds:
000EA6 0000               M                 DB      CMD_END_SND,0
                      03662 
                      03663 ;               LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_TRACTION_MOTOR_VOLUME,SCALE_9
                      03664 
                      03665                 PLAY HNDL_SC0_TRACTION_END,no_loop,loop_STD 
                          M         list ;4 byte XPLAY      [HANDLE]
000EA8 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_TRACTION_END & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER
000EAA 1200               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_TRACTION_END & 0x3F)+((no_loop<<6)&0xC0
                          M         list
                      03666                 LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+AIR_PRESS,-0x01,0   ;decrease
000EAC BDE6 00FF          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+AIR_PRESS,-0x01,0
                      03667 
                      03668                 END_SOUND
000EB0 0000               M                 DB      CMD_END_SND,0
                      03669 
                      03670 
                      03671 
                      03672 
                      03673         ;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
                      03674         ;       SF20 COMPRESSOR
                      03675         ;-------------------------------
                      03676         INITIATE_SOUND  TRIG_COMPR_ON,NORMAL    ;RUN_WHILE_TRIG         ;continuous NON repeat version  
000EB2 1F90               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), TRIG_COMPR_ON +((NORMAL) & 0x80)
  0000003A                M ICNT += 1
                          M 
                      03677                 ;interlock is set on bit is =1) (i.e. DRIFTING IS OFF)
                      03678                 LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_OR+USER_INTLK_BITS,VARY_DRIFT_MASK7,MERGE_ALL_MAS
000EB4 5EE6 0080          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_OR+USER_INTLK_BITS,VARY_DRIFT_MASK
                      03679                 LOAD_MODIFIER   MTYPE_GAIN,IMMED_GAIN_MODIFY,SCV_MISC_VOLUME,SCALE_C
000EB8 80E1 0C90          M                 DB      CMD_LOAD_MODIFY+(MTYPE_GAIN&0x0F),IMMED_GAIN_MODIFY,SCV_MISC_VOLUME,SCALE_C
                      03680                 PLAY    HNDL_SC0_AIR_LETOFF,no_loop,loop_STD
                          M         list ;4 byte XPLAY      [HANDLE]
000EBC 41F2               M                 DB      CMD_PLAY_EXPANDED,(HNDL_SC0_AIR_LETOFF & 0xC0)+1 ;ADD REV PLAY FLAG PLUS OTHER B
000EBE 1300               M                 DB      ((no_loop>>2)&0x07)+loop_STD,  (HNDL_SC0_AIR_LETOFF & 0x3F)+((no_loop<<6)&0xC0) 
                          M         list
                      03681                 LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_INTEGRATE+AIR_PRESS,-0x19,0   ;decrease
000EC0 BDE6 00E7          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_INTEGRATE+AIR_PRESS,-0x19,0
                      03682                 LOAD_MODIFIER   MTYPE_WORK_IMMED,FMATH_OR+USER_INTLK_BITS,COUPLER_MASK5,MERGE_ALL_MASK  
000EC4 5EE6 0020          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_OR+USER_INTLK_BITS,COUPLER_MASK5,M
                      03683         ;---------------------------------------------
                      03684         ;  RESET MAX GAIN ET.AL
                      03685         ;---------------------------------------------
                      03686                 ;LOAD_MODIFIER  MTYPE_WORK_IMMED,FMATH_LODE+PREV_NOTCH,0,0    ;Set value initial
                      03687                 LOAD_MODIFIER MTYPE_WORK_IMMED,FMATH_LODE+WORK_SPEED_DELTA,0x00,0       ; set Manual Not
000EC8 0BE6 0000          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),FMATH_LODE+WORK_SPEED_DELTA,0x00,0
                      03688                 ;MAX GAIN:
                      03689                 LOAD_MODIFIER   MTYPE_WORK_IMMED,WORK_GLBL_GAIN,DEFAULT_GLBL_GAIN,MERGE_ALL_MASK  ;STD f
000ECC 08E6 00C0          M                 DB      CMD_LOAD_MODIFY+(MTYPE_WORK_IMMED&0x0F),WORK_GLBL_GAIN,DEFAULT_GLBL_GAIN,MERGE_A
                      03690                 BRANCH_TO       CH8SC0_AIR_SEQ
                          M         
                          M         if      (CH8SC0_AIR_SEQ-SKEME_BASE) > 0xFFF                 ;check branch size in SCHEME
                          M                 error   CH8SC0_AIR_SEQ range over 4096 bytes -- MUST USE BRANCH_EXT for >4k
                          M         else
000ED0 B6CB               M                 DB      CMD_GOTO_SND + ((high (CH8SC0_AIR_SEQ-SKEME_BASE)) & 0x0F) , low (CH8SC0_AIR_SEQ
                          M         endif
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 123
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                 
                      03691 
                      03692         END_SOUND       
000ED2 0000               M                 DB      CMD_END_SND,0
                      03693                 
                      03694         
                      03695 ; -------------------------------------------------------------
                      03696 ;   SET DEFAULT CVs WHEN SETTING CV8 TO 8/9
                      03697 ; -------------------------------------------------------------
                      03698         ; These CV values are set at the moment the SPJ is downloaded to the decoder: CV > 155 CANNOT BE
                      03699         INITIATE_SOUND  TRIG_FACTORY_CVRESET,NORMAL
000ED4 5A90               M                 DB      CMD_INITIATE_SND + ((NORMAL) & 0x07), TRIG_FACTORY_CVRESET +((NORMAL) & 0x80)
  0000003B                M ICNT += 1
                          M 
                      03700 
000ED6                03701 CH16SC0_FACTORY_CVSET
                      03702 ;NOTE: REMOVE MOST OF THESE SETTINGS AFTER TESTING::::
                      03703 ;SHOULD test herE for POR SW version higher than 8!!
                      03704 ;skip these if NOT SFX2 capable
                      03705         ;;;NO NO;;;;    LOAD_MODIFIER   MTYPE_SNDCV,SCV_CV1,4,0                 ;CV1 Primary address
                      03706         ;; fact default is AUTO NOTCHING
                      03707         ;xLOAD_MODIFIER MTYPE_SNDCV,SCV_CV3,50,0                        ;CV3
                      03708         ;xLOAD_MODIFIER MTYPE_SNDCV,SCV_CV4,43,0                        ;CV4
                      03709         ;LOAD_MODIFIER  MTYPE_SNDCV,SCV_CV8,255,0               ;make sure is RO
                      03710         ;LOAD_MODIFIER  MTYPE_SNDCV,SCV_CV19,0,0  Advanced Consist [0]
                      03711         ;LOAD_MODIFIER  MTYPE_SNDCV,SCV_CV21,248,0  Advanced Consist SF0-SF8 [248] 
                      03712         ;LOAD_MODIFIER  MTYPE_SNDCV,SCV_CV22,52,0  Advanced Consist SF3-SF7 [52] 
                      03713         ;LOAD_MODIFIER  MTYPE_SNDCV,SCV_CV29,7,0                ;CV29 REVERSE
                      03714         ;LOAD_MODIFIER  MTYPE_SNDCV,SCV_CV49,2,0                ;CV49 MARS lite
                      03715         ;LOAD_MODIFIER  MTYPE_SNDCV,SCV_CV57,238,0  BEMF Consist + Advanced Consist, 0-15 / 0-15, 15=max
                      03716         ;LOAD_MODIFIER  MTYPE_SNDCV,SCV_CV58,12,0               ;CV58 Should be low 1-5
                      03717         LOAD_MODIFIER   MTYPE_SNDCV,SCV_CV60,0,0                ;CV61 SELECT SCHEME 0=DIESEL
000ED6 3BE5 0000          M                 DB      CMD_LOAD_MODIFY+(MTYPE_SNDCV&0x0F),SCV_CV60,0,0
                      03718         LOAD_MODIFIER   MTYPE_SNDCV,SCV_CV105,USER_SDF_SUB_ID,0 ; Identifies Project VERSION within auth
000EDA 68E5 0046          M                 DB      CMD_LOAD_MODIFY+(MTYPE_SNDCV&0x0F),SCV_CV105,USER_SDF_SUB_ID,0
                      03719         LOAD_MODIFIER   MTYPE_SNDCV,SCV_CV106,PROJECT_ID,0              ; Identifies Project change with
000EDE 69E5 0000          M                 DB      CMD_LOAD_MODIFY+(MTYPE_SNDCV&0x0F),SCV_CV106,PROJECT_ID,0
                      03720         ;LOAD_MODIFIER  MTYPE_SNDCV,SCV_CV121,255,0             ;make sure is RO
                      03721         LOAD_MODIFIER   MTYPE_SNDCV,SCV_CV153,PROJECT_ID,0              ; Identifies Project change with
000EE2 98E5 0000          M                 DB      CMD_LOAD_MODIFY+(MTYPE_SNDCV&0x0F),SCV_CV153,PROJECT_ID,0
                      03722          ;cutback20:LOAD_MODIFIER MTYPE_SNDCV,SCV_DCONFIG,127,0 ;;CV131 127 is diesel config
                      03723         ;LOAD_MODIFIER MTYPE_SNDCV,SCV_DCONFIG,0,0      ;CV131 0 is Steam config 
                      03724          ;cutback20:LOAD_MODIFIER MTYPE_SNDCV,SCV_NOTCH,191,0   ;CV132 notch rate 64-128 to avoid missin
                      03725          ;cutback20:LOAD_MODIFIER MTYPE_SNDCV,SNDCV_STEAM,60,0  ;CV133= typ steam CAM config byte, x80=E
                      03726 ;                               DRIVER size bit7=1 means EXTERNAL INPUT_0 generates a special CAM code a
                      03727          ;cutback20:LOAD_MODIFIER MTYPE_SNDCV,SCV_STGEAR,41,0   ;CV134= steam gear ratio trim [28]
                      03728          ;cutback20:LOAD_MODIFIER MTYPE_SNDCV,SCV_MUTE_VOL,30,0 ;CV135= vol level when MUTE action is tr
                      03729         ;SCV_MAIN_PITCH                 ;CV136
                      03730          ;cutback20:LOAD_MODIFIER MTYPE_SNDCV,SCV_DISTANCE_RATE,30,0     ;cv139 Set to trigger distance 
                      03731          ;cutback20:LOAD_MODIFIER       MTYPE_SNDCV,SCV_USER_SDF_SUB_ID,USER_SDF_SUB_ID,0       ;CV160 i
                      03732          ;cutback20:LOAD_MODIFIER       MTYPE_SNDCV,SCV_FEATURE_DISABLE,128,0           ;CV185 is bit va
                      03733 ;                               bit0 disable  HEP diesel =1  AUX GEN    =0
                      03734 ;                               bit1 disable hard automatic braking     =2
                      03735 ;                               bit2 disable startup sounds                             =4
                      03736 ;                               bit3 disable Fans                                               =8
                      03737 ;                               bit4 disable toots on direction change  =16
                      03738 ;                               bit5 disable grade crossing random play =32
                      03739 ;                               bit6 disable bell                                               =64
                      03740 ;                               bit7 fuel prime once for Gen1 diesels OR multiple start warning bells Ge
                      03741 ;                               bit7 steam disable Open Cyl Cocks       =128            
                      03742          ;cutback20:LOAD_MODIFIER       MTYPE_SNDCV,SCV_FEATURE2_DISABLE,3,0    ;CV186 is bit values to 
                      03743 ;                               bit0 disable Diesel Low Idle=1 Enabled=0        =0=Enabled
                      03744 ;                               bit0 disable STEAM BLOWER=1 BOILER=0            =1
                      03745 ;                               bit1 disable Chain bells 1-4                            =2
                      03746 ;                               bit2 disable STOKER change to SHOVEL            =4
                      03747 ;                               bit3 disable AUTO VARY NOTCH                            =8
                      03748 ;                               bit4 disable Shaft Driven Compressor            =16
                      03749 ;                               bit5 disable ALCO Idle Stumble=32 Disable=0     =32
                      03750 ;                               bit6 disable Auto REAR HORN/WHISTLE signals: 00=Off     =64
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 124
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03751 ;                               bit7 disable Duel Prime Movers          0 = Off =128 = Duel On
                      03752          ;cutback20:LOAD_MODIFIER       MTYPE_SNDCV,SCV_FEATURE3_DISABLE,0,0    ;CV187 is bit values to 
                      03753 ;                               bit0 disable Short Horn/whistle                         Enabled=0       
                      03754 ;                               bit1 disable DEMO ALL HornS/whistles            Enabled=2       =0 Disab
                      03755 ;                               bit2 disable Bell on Idle Exit                                          
                      03756 ;                               bit3 disable Motor Lock on SF10                                         
                      03757 ;                               bit4 disable Startup MUTED                                              
                      03758 ;                               bit5 disable Dynamic BRAKES                                             
                      03759 ;                               bit6 disable Run High                                                   
                      03760 ;                               bit7 disable Auto Wheel Slip                                            
                      03761          ;cutback20:LOAD_MODIFIER       MTYPE_SNDCV,SCV_FEATURE4_DISABLE,0,0    ;CV188 is bit values to 
                      03762 ;                               bit0 disable Traction Motor             = 1 Disabled
                      03763 ;                               bit1 disable HILO HORN                          = 2 Disabled
                      03764 ;                               bit2 disable 3                                          = 4 Disabled
                      03765 ;                               bit3 disable 4                                          = 8 Disabled
                      03766 ;                               bit4 disable 5                                          = 16 Disabled
                      03767 ;                               bit5 disable 6                                          = 32 Disabled
                      03768 ;                               bit6 disable 7                                          = 64 Disabled
                      03769 ;                               bit7 disable 8                                          = 64 Disabled
                      03770 
                      03771 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;     
                      03772 ; MERGE UNIQUE CV VALUES HERE FOR THIS SPJ ONLY:
                      03773          ;cutback20: #INCLUDE   DN7c4x6d30CVS.INC
                      03774 ;;;;;;;;;;;;;;;;;;;     ;;;;; FOLLOW WITH ASM FINAL CODE HERE:
                      03775         ;END CH3_==============================================================
                      03776 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      03777         ;no end sound here (MUST BE IN ASM) END_SOUND         
                      03778 ;end DN7c4x6d30base
                      03779                                                                                         
                      00539 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00540          ;;;;;;;;;;;;FOLLOW WITH VERY LAST CV RESET CODE HERE:
                      00541          ;cutback20:LOAD_MODIFIER       MTYPE_SNDCV,SCV_CV3,31,0 ;CV3     Momentum acceleration rate, 0-
                      00542          ;cutback20:LOAD_MODIFIER       MTYPE_SNDCV,SCV_CV4,28,0 ;CV4     Momentum deceleration rate, 0-
                      00543          ;cutback20:LOAD_MODIFIER       MTYPE_SNDCV,SCV_CV23,50,0;SCV_23  Acceleration Mass 0-255 [50] 
                      00544          ;cutback20:LOAD_MODIFIER       MTYPE_SNDCV,SCV_CV24,50,0;SCV_24  Deceleration Mass 0-255 [50] 
                      00545          ;cutback22:LOAD_MODIFIER       MTYPE_SNDCV,SCV_USER_SDF_ID,AuthorCode,0        ;CV152 defines U
                      00546         ;cutback22:LOAD_MODIFIER        MTYPE_SNDCV,SCV_PROJECT_ID,PROJECT_ID,0         ;CV153 [0]  Iden
                      00547         ;cutback22:LOAD_MODIFIER        MTYPE_SNDCV,SCV_CV160,USER_SDF_SUB_ID,0         ;CV160 is SUB id
                      00548         ;cutback22:LOAD_MODIFIER        MTYPE_SNDCV,SCV_CV106,PROJECT_ID,0              ;CV106 [0]  Iden
                      00549         ;cutback22:LOAD_MODIFIER        MTYPE_SNDCV,SCV_CV153,PROJECT_ID,0              ;CV153 [0]  Iden
                      00550 
                      00551 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00552         ;X LOAD_MODIFIER        MTYPE_SNDCV,SCV_FEATURE_DISABLE,128,0           ;CV185 is bit values to 
                      00553 ;                               bit0 disable  HEP diesel =1  AUX GEN    =0
                      00554 ;                               bit1 disable hard automatic braking     =2
                      00555 ;                               bit2 disable startup sounds                             =4
                      00556 ;                               bit3 disable Fans                                               =8
                      00557 ;                               bit4 disable toots on direction change  =16
                      00558 ;                               bit5 disable grade crossing random play =32
                      00559 ;                               bit6 disable bell                                               =64
                      00560 ;                               bit7 fuel prime once for Gen1 diesels OR multiple start warning bells Ge
                      00561         ;X LOAD_MODIFIER        MTYPE_SNDCV,SCV_FEATURE2_DISABLE,2,0    ;CV186 is bit values to disable 
                      00562 ;                               bit0 disable Diesel Low Idle=1 Enabled=0        =0=Enabled
                      00563 ;                               bit0 disable STEAM BLOWER=1 BOILER=0            =1
                      00564 ;                               bit1 disable Chain bells 1-4                            =2
                      00565 ;                               bit2 disable STOKER change to SHOVEL            =4
                      00566 ;                               bit3 disable AUTO VARY NOTCH                            =8
                      00567 ;                               bit4 disable Shaft Driven Compressor            =16
                      00568 ;                               bit5 disable ALCO Idle Stumble=32 Disable=0     =32
                      00569 ;                               bit6 disable Auto REAR HORN/WHISTLE signals: 00=Off     =64
                      00570 ;                               bit7 disable Duel Prime Movers          0 = Off =128 = Duel On
                      00571         ;X LOAD_MODIFIER        MTYPE_SNDCV,SCV_FEATURE3_DISABLE,0,0    ;CV187 is bit values to disable 
                      00572 ;                               bit0 disable Short Horn/whistle                         Enabled=0       
                      00573 ;                               bit1 disable DEMO ALL HornS/whistles            Enabled=2       =0 Disab
                      00574 ;                               bit2 disable Bell on Idle Exit                                          
                      00575 ;                               bit3 disable Motor Lock on SF10                                         
                      00576 ;                               bit4 disable Startup MUTED                                              
                      00577 ;                               bit5 disable Dynamic BRAKES                                             
                      00578 ;                               bit6 disable Run High                                                   
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 125
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00579 ;                               bit7 disable Auto Wheel Slip                                            
                      00580          ;;;;;;3/26/18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MUST BE VERY LAST CODE IN FINAL CHANNEL;;;;;;;;;;;;;;
                      00581         ;CV189 Water Alarm Volume                                                       0-64    [45]
                      00582         ;CV190 Cutoff Speed for high speed chuffs                       40-99   [48]    
                      00583         ;CV191 Drift Volume                                                                     0-64    
                      00584         ;CV192 Cutoff Speed for LONG HORN                                       4-9     [9]
                      00585         ;CV193 Sound Project TYPE
                      00586         ;cutback20:LOAD_MODIFIER        MTYPE_SNDCV,SCV_SOUND_PROJ_TYPE,128,0   ;CV193 Sound Project TYP
                      00587 ;Possible Values are :
                      00588 ;       :                       Decimal HEX                     Bit
                      00589 ;       :                                                               7654 3210
                      00590 ;       :       1               0               0x00            0000 0000               Steam Coal
                      00591 ;       :       2               1               0x01            0000 0001               Steam Oil
                      00592 ;       :       3               2               0x02            0000 0010               Steam Coal  Arti
                      00593 ;       :       4               3               0x03            0000 0011               Steam Oil Articu
                      00594 ;       :       5               4               0x04            0000 0100               Steam Geared    
                      00595 ;       :       9               8               0x08            0000 1000               Steam non-fired 
                      00596 ;       :       81              80              0x50            0101 0000               Gas Carbody / Do
                      00597 ;       :       127             128             0x80            1000 0000               Diesel
                      00598 ;       :       145             144             0x90            1001 0000               Diesel Carbody  
                      00599 ;       :       193             192             0xC0            1100 0000               Diesel Dual Moto
                      00600 ;       :       225             224             0xE0            1110 0000               Diesel Dual Moto
                      00601 ;       :       241             240             0xF0            1111 0000               Diesel Boxcab
                      00602 ;       :       137             136             0x88            1000 1000               Traction
                      00603         ;CV194 Sound Project Memory Required [1=512kb, 2=1024kb, 3=8mb, 4=4mb, 8=8mb, 16=16mb].
                      00604         ;cutback20:LOAD_MODIFIER        MTYPE_SNDCV,SCV_SOUND_PROJ_MEMREQ,1,0   ;CV194 Sound Project Mem
                      00605         ;CV195 Sound Project JMRI Definition
                      00606         ;cutback20:LOAD_MODIFIER        MTYPE_SNDCV,SCV_SOUND_PROJ_JMRIDEF,59,0         ;CV195 Sound Pro
                      00607         ;CV_196 ;RESERVED 
                      00608         ;CV_197 ;RESERVED 
                      00609         ;CV_198 ;RESERVED 
                      00610         ;CV_199 ;RESERVED 
                      00611         ;CV_200 ;RESERVED 
                      00612         ;CV_201 ;RESERVED (221) 
                      00613         ;CV_202 ;NON_SOUND_JMRIDEF ; JMRI Definition (0-255) 
                      00614         ;CV_203 ;Decoder Memory Available (read only) [1=512kb, 2=1024kb, 3=8mb, 4=4mb, 8=8mb, 16=16mb].
                      00615         END_SOUND
000EE6 0000               M                 DB      CMD_END_SND,0
                      00616 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00617 ;------------------------------------------------
                      00618 ; End of Scheme 0
                      00619 ;------------------------------------------------
                      00620 ;===============================================================================
                      00621 ;------------------------------------------------
                      00622 ; End of SDL Code
                      00623 ;------------------------------------------------
000EE8                00624 END_SDL
                      00625         SKEME_START     CLOSE_SKEME             ;START of "CLOSE_SKEME" is SDL end
  00000EE8                M SKEME_BASE      SET     $                               ;for offset calc
000EE8 1FF1 0400          M                 DB      CMD_SKEME_START,(CLOSE_SKEME &0x1F), high((SKEME_NEXT0-$)+2),     low((SKEME_NEX
                      00626         SKEME_END       CLOSE_SKEME
000EEC                    M SKEME_NEXT0
  00000001                M SCNT += 1
                          M ;CCNT=CTEMP                             ;xfer MAX value seen in last scheme
                          M ;CTEMP = 0
                      00627 
                      00628 ;This should run in all assmeblies to confirm limits not exceeded for VERSION assumed
000EEC                00629 VERSION_CHECKS
                      00630         IF      ICNT>MAX_INITIATES
                      00631    INITIATE EXCEEDS DEFINED LIMIT FOR THIS VERSION
                      00632          ELSE
                      00633         ENDIF
                      00634 ;       IF      CCNT> (MAX_CHANNELS+1) 
                      00635 ;   CHANNELS USED EXCEEDS DEFINED LIMIT FOR THIS VERSION
                      00636 ;        ELSE
                      00637 ;       ENDIF
                      00638         IF      SCNT>MAX_SCHEMES
                      00639    SCHEMES USED EXCEEDS DEFINED LIMIT FOR THIS VERSION
                      00640          ELSE
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 126
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00641         ENDIF  
Warning[207]: Found label after column 1. (ICNT)
  0000003C            00642         ICNT = ICNT+1
Warning[207]: Found label after column 1. (TEMP)
  000000C4            00643         TEMP = MAX_INITIATES-ICNT
Warning[207]: Found label after column 1. (MAX_SCHEMES)
  00000040            00644         MAX_SCHEMES = MAX_SCHEMES +0
Warning[207]: Found label after column 1. (MAX_INITIATES)
  00000100            00645         MAX_INITIATES = MAX_INITIATES +0
Warning[207]: Found label after column 1. (MAX_CHANNELS)
  00000008            00646         MAX_CHANNELS = MAX_CHANNELS +0
                      00647 
000EEC                00648 END_SDF
                      00649         END             ;==================================


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
02C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
03C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
04C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
05C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
06C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
07C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
08C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
09C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0AC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
MPASM  5.30                    DN7C4X6D30.ASM   3-19-2025  0:31:13         PAGE 127
single scheme- discrete notching SDF3.0 Decoder Series6 w/HORN SELECTIONS
SOUND PROCESSOR SOUND COMMAND macros for DIGITRAX scalable sound engine TECHNOLOGY.  (C) 2004,2005,2006,2012,2013,2018 Digitrax Inc.
MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0B00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0BC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0CC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0DC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0EC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXX---- ----------------

All other memory blocks unused.

Program Memory Bytes Used:  3820
Program Memory Bytes Free: 12564


Errors   :     0
Warnings :     7 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

